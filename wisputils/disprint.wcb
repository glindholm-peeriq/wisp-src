      /*****************************************************************
      *                                                                *
      *                       IDENTIFICATION DIVISION                  *
      *                                                                *
      ******************************************************************
      *
       IDENTIFICATION DIVISION.
       PROGRAM-ID.
           DISPRINT.
       AUTHOR.
           NeoMedia Technologies
      
      /*****************************************************************
      *                                                                *
      *                         ENVIRONMENT DIVISION                   *
      *                                                                *
      ******************************************************************
      *
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.
           WANG-VS.
       OBJECT-COMPUTER.
           WANG-VS.
       FIGURATIVE-CONSTANTS.
           HIMODUPR   IS "81",
           HIMODUPRUL IS "A1",
           HIMODNUM   IS "82",
           HIPRO      IS "84",
           HIPRONUM   IS "86",
           FAC-BLANK  IS "9C",
           POS-CURSOR IS "A0",
           HEX-0      IS "00",
           HEX-9      IS "09",
           HEX-5      IS "05",
           SOUNDALARM IS "E0".
      /*****************************************************************
      *                                                                *
      *                         INPUT-OUTPUT SECTION                   *
      *                                                                *
      ******************************************************************
      *
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      *
           SELECT CRT
               ASSIGN TO "CRT",      "DISPLAY",
               ORGANIZATION    IS SEQUENTIAL
               ACCESS MODE     IS RANDOM
               RELATIVE KEY    IS LINENUM
               PFKEY           IS PF-KEY
               CURSOR POSITION IS CURSOR-POS
               FILE STATUS     IS FILSTAT.
      *
      /*****************************************************************
      *                                                                *
      *                      DATA DIVISION - FILE SECTION              *
      *                                                                *
      ******************************************************************
      *
       DATA DIVISION.
       FILE SECTION.
      *
       FD  CRT
           LABEL RECORDS ARE OMITTED.
       01  CRTREC.
           05  CRTREC-FULL          PIC X(1924).
           05  FILLER REDEFINES CRTREC-FULL.
               10  CRTREC-OA.
                   15  CRTREC-OA-1  PIC X.
                   15  CRTREC-OA-2  PIC X.
                   15  CRTREC-OA-3  PIC X.
                   15  CRTREC-OA-4  PIC X.
               10  CRTREC-SCN       PIC X(1920).
      *
      /*****************************************************************
      *                                                                *
      *                         WORKING STORAGE                        *
      *                                                                *
      ******************************************************************
      *
       WORKING-STORAGE SECTION.
      ******************************************************************
      *                   FILE CONTROL STATUS SWITCHES                 *
      ******************************************************************
       01  FILSTAT.
           03  ERR-FLAG                   PIC X(01).
           03  PFK-BYTE                   PIC X(01).
       77  LIST-STATUS                    PIC X(1)  VALUE "0".
           88 MORE-LIST                   VALUE "0".
           88 RECORD-FOUND-ON-LIST        VALUE "0".
           88 NO-MORE-LIST                VALUE "1".
           88 NO-RECORD-FOR-LIST          VALUE "2".
           88 DUPLICATE-ON-LIST           VALUE "2".
      ******************************************************************
      *               EXTERNAL FILE LOCATION DEFINITIONS               *
      ******************************************************************
       77  REC-COUNT                      PIC 9(4)  VALUE 500.
       77  FIL-FOR-LIST                   PIC X(8)  VALUE SPACES.
       77  LIB-FOR-LIST                   PIC X(8)  VALUE SPACES.
       77  VOL-FOR-LIST                   PIC X(6)  VALUE SPACES.
      ******************************************************************
      *             WORKSTATION FILE CONTROL DESCRIPTIONS              *
      ******************************************************************
       77  LINENUM                        PIC 9(02) VALUE 1.
       77  PF-KEY                         PIC 9(02) VALUE 01.
       01  CURSOR-POS.
           03  MOD-COL                    BINARY.
           03  MOD-ROW                    BINARY.
       01  REDEF-CURS-POS                 REDEFINES CURSOR-POS.
           03  FILLER                     PIC X(01).
           03  CURS-COL                   PIC X(01).
           03  FILLER                     PIC X(01).
           03  CURS-ROW                   PIC X(01).
       01  OA-SAVE.
           05  OA-SAVE-ROW                PIC X(01).
           05  OA-SAVE-WCC                PIC X(01).
           05  OA-SAVE-CC                 PIC X(01).
           05  OA-SAVE-CR                 PIC X(01).
       01  SL                             PIC X(2) VALUE "SL".
       01  SV                             PIC X(2) VALUE "SV".
      /*****************************************************************
      *                                                                *
      *                   DISPLAY DEFINITIONS                          *
      *                                                                *
      ******************************************************************
      *
       01  SCREEN-1 USAGE IS DISPLAY-WS.
           05  FILLER         PICTURE IS  X(30)       ROW 01 COLUMN 25
               VALUE IS "LIBRARY DISPLAY PRINT UTILITY".
           05  FILLER         PICTURE IS  X(14)       ROW 03 COLUMN 07
               VALUE IS "Your library, ".
           05  ROW03-COL17    PICTURE IS  X(08)       ROW 03 COLUMN 22
               SOURCE IS DSK-LIB        OBJECT IS DSK-LIB       .
           05  FILLER         PICTURE IS  X(04)       ROW 03 COLUMN 31
               VALUE IS " on ".
           05  ROW03-COL31    PICTURE IS  X(06)       ROW 03 COLUMN 36
               SOURCE IS DSK-VOL       OBJECT IS DSK-VOL       .
           05  FILLER         PIC X(42)               ROW 03 COLUMN 43
               VALUE "contains the following files:".
           05  FILLER         PICTURE IS  X(1)        ROW 04 COLUMN 07
               VALUE IS "(".
           05  ROW04-COL04    PIC ZZ9                 ROW 04 COLUMN 09
               SOURCE DIS-COUNT.
           05  FILLER         PICTURE IS  X(2)        ROW 04 COLUMN 13
               VALUE IS "of".
           05  ROW04-COL11    PIC ZZ9                 ROW 04 COLUMN 16
               SOURCE TOT-COUNT.
           05  FILLER         PIC X(55)               ROW 04 COLUMN 20
           VALUE "shown). Position the cursor to the file name. (via TAB
      -          ")".
           05  FILLER         PIC X(72)               ROW 06 COLUMN 5
           VALUE " (1) - DISPLAY    (2) - PRINT    (3) - DELETE    (4) -
      -          "PRINT (NO DELETE)".
      
      *8901234567890123456789012345678901234567890123456789012345678901234567890
           05  FILLER   PIC X(35)                     ROW 08 COLUMN 03
               VALUE "Copies  Filename   Size-Kb Modified".
           05  FILLER   PIC X(35)                     ROW 08 COLUMN 43
               VALUE "Copies  Filename   Size-Kb Modified".
           05  FILLER   OCCURS 12 TIMES.
               10  L-F-COPY             PIC ZZ        ROW 09 COLUMN 05
                   SOURCE L-P-COPY  OBJECT L-P-COPY.
      
               10  L-F-PROGRAM           PIC X(8)     ROW 09 COLUMN 11
                   SOURCE L-P-PROGRAM.
      
               10  L-F-RECS              PIC X(7)     ROW 09 COLUMN 22
                   SOURCE L-P-RECS.
      
               10  L-F-DATE              PIC X(8)     ROW 09 COLUMN 30
                   SOURCE L-P-DATE.
      
               10  R-F-COPY              PIC ZZ       ROW 09 COLUMN 45
                   SOURCE R-P-COPY  OBJECT R-P-COPY.
      
               10  R-F-PROGRAM           PIC X(8)     ROW 09 COLUMN 51
                   SOURCE R-P-PROGRAM.
      
               10  R-F-RECS              PIC X(7)     ROW 09 COLUMN 62
                   SOURCE R-P-RECS.
      
               10  R-F-DATE              PIC X(8)     ROW 09 COLUMN 70
                   SOURCE R-P-DATE.
      
      
           05  ROW22-COL20    PICTURE IS  X(52)       ROW 22 COLUMN 18
           VALUE "Press (16) to Exit -or- (ENTER) for First/Next Page".
           05  ROW24-COL11    PICTURE IS  X(60)       ROW 24 COLUMN 11
               SOURCE IS WSA-ERROR.
      
       01  DIS-COUNT                 PIC  9(5)        VALUE 0.
       01  TOT-COUNT                 PIC  9(5)        value 0.
       01  DSK-FILE                  PIC  X(08)       VALUE SPACES.
       01  DSK-LIB                   PIC  X(08)       VALUE SPACES.
       01  DSK-VOL                   PIC  X(06)       VALUE SPACES.
       01  WSA-ERROR                 PIC X(60)        VALUE SPACES.
      
       01  PREV-EC                   USAGE BINARY.
       01  DISP-IND                  USAGE BINARY.
       01  IND-CNT                   USAGE BINARY.
       01  CURR-IND                  USAGE BINARY.
       01  START-IND                 USAGE BINARY.
       01  END-IND                   USAGE BINARY.
       01  ADJ-DEC.
           03  ADJ-INT               PIC S99.
           03  ADJ-REM               PIC 99.
       01  ST-DEL-IND                USAGE BINARY.
      
       01  WSA-PROGRAM-TABLE.
           03  WSA-PROGRAM-AREA.
               05  WSA-PROGRAM-TOP OCCURS 24 TIMES.
                   10  WSA-P-COPY        PIC 99.
                   10  WSA-PFNUM         PIC 99.
                   10  WSA-P-PROGRAM     PIC X(8).
                   10  WSA-P-RECS        PIC X(7).
                   10  WSA-P-DATE        PIC X(8).
           03  WSA-PROGRAM-SCREEN REDEFINES WSA-PROGRAM-AREA.
               05  WSA-SCREEN-L OCCURS 12 TIMES.
                   10  L-P-COPY        PIC 99.
                   10  L-PFNUM         PIC 99.
                   10  L-P-PROGRAM     PIC X(8).
                   10  L-P-RECS        PIC X(7).
                   10  L-P-DATE        PIC X(8).
               05  WSA-SCREEN-R OCCURS 12 TIMES.
                   10  R-P-COPY        PIC 99.
                   10  R-PFNUM         PIC 99.
                   10  R-P-PROGRAM     PIC X(8).
                   10  R-P-RECS        PIC X(7).
                   10  R-P-DATE        PIC X(8).
       01  WS-NUM-FORMAT               PIC Z(6)9.
       01  TEMP-ERROR                  PIC X(35) VALUE SPACES.
      /*****************************************************************
      *                                                                *
      *                   DEFINITIONS FOR LINK CALL(S)                 *
      *                                                                *
      ******************************************************************
      *
       01  LINK-TO-NAME                   PIC X(08) VALUE SPACES.
       01  LINK-TYPE                      PIC X(01) VALUE SPACE.
       01  LINK-LIBRARY                   PIC X(08) VALUE SPACES.
       01  LINK-VOLUME                    PIC X(06) VALUE SPACES.
       01  LINK-PCOUNT.
           03  FILLER                     BINARY    VALUE ZERO.
           03  LINK-PCOUNT-NO             BINARY    VALUE 1.
       01  LINK-CEXIT-FLAG                PIC X(01) VALUE " ".
       01  LINK-CEXIT-MSG                 PIC X(27) VALUE SPACES.
       01  LINK-CEXIT-MSG-LEN.
           03  FILLER                     BINARY    VALUE ZERO.
           03  FILLER                     BINARY    VALUE ZERO.
       01  LINK-HELP-FLAG                 PIC X(1)  VALUE SPACE.
       01  LINK-PFKEY-MASK                PIC X(02) VALUE LOW-VALUES.
       01  LINK-CANCEL-RCVR               PIC X(128) VALUE SPACES.
       01  LINK-CANCEL-RCVR-LEN.
           03  FILLER                     BINARY    VALUE ZERO.
           03  FILLER                     BINARY    VALUE 128.
       01  LINK-CODE.
           03  FILLER                     BINARY    VALUE ZERO.
           03  LINK-CODE-VAL              BINARY    VALUE ZERO.
       01  LINK-RETURN-CODE.
           03  FILLER                     BINARY    VALUE ZERO.
           03  LINK-RTN-CODE-VAL          BINARY    VALUE ZERO.
       01  LINK-RTN-CODE-ZZZ              PIC ZZZZZ.
      
      /*****************************************************************
      * FIND PARAM.
      ******************************************************************
       01  STARTER.
           05  FILLER  USAGE IS BINARY VALUE 0.
           05  START-INTEGER USAGE IS BINARY VALUE 1.
       01  COUNTER.
           05  FILLER  USAGE IS BINARY VALUE 0.
           05  COUNT-INTEGER USAGE IS BINARY VALUE 1.
       01  RECEIVER         PIC X(8800) VALUE SPACES.
       01  REC-AREA.
           05  REC-FILL OCCURS 400 TIMES.
               10  FILE-VOLUME       PIC X(6).
               10  FILE-LIBRARY      PIC X(8).
               10  FILE-NAME         PIC X(8).
           05  REC-FILE-1 OCCURS 400 TIMES.
               10  FILE-RECS         PIC 9(7).
               10  FILE-DATE         PIC X(8).
       01  WSA-NUM-FILES     PIC S9(5) COMP.
       01  ENTRIES.
           05  FILLER        USAGE IS BINARY VALUE 0.
           05  ENTRY-COUNT   USAGE IS BINARY VALUE 0.
      
      /**********************
      * READ FDR INFO********
      ***********************
       01  FDR-FILE            PIC X(8).
       01  FDR-LIB             PIC X(8).
       01  FDR-VOL             PIC X(6).
       01  FDR-FUNCTION.
           05  FILLER  USAGE IS BINARY VALUE 0.
           05  FDR-FUNCTION-CODE USAGE IS BINARY VALUE 0.
      
       01  FDR-BS               PIC X(2) VALUE "BS".
       01  FDR-MD               PIC X(2) VALUE "MD".
       01  FDR-DATE.
           05  FDR-YY           PIC X(2).
           05  FDR-MM           PIC X(2).
           05  FDR-DD           PIC X(2).
       01  FDR-F-DATE.
           05  FDR-F-MM         PIC X(2).
           05  FILLER           PIC X VALUE "/".
           05  FDR-F-DD         PIC X(2).
           05  FILLER           PIC X VALUE "/".
           05  FDR-F-YY         PIC X(2).
       01  FDR-RECORD-SIZE     PIC X(2) VALUE "RS".
       01  FDR-BYTE-SIZE        PIC 9(18) VALUE 0.
       01  WS-BYTE-CALC         PIC 9(08) VALUE 0.
       01  FDR-SIZE.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FDR-REC-SIZE USAGE IS BINARY VALUE 0.
       01  FDR-RECORD-NUM     PIC X(2) VALUE "RC".
       01  FDR-NUM.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FDR-REC-NUM USAGE IS BINARY VALUE 0.
       01  FDR-RTN.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FDR-RTN-NUM USAGE IS BINARY VALUE 0.
      
      /*****************************************************************
      *                                                                *
      *                         PUTPARM DEFINITIONS                    *
      *                                                                *
      ******************************************************************
       01  TY-PE            PIC X VALUE "E".
       01  C-FUNC           PIC X VALUE "C".
       01  PRNAME           PIC X(8) VALUE "INPUT".
       01  P-FILE           PIC X(8) VALUE SPACES.
       01  P-COUNT.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FILLER       USAGE IS BINARY VALUE 3.
       01  U-COUNT.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FILLER       USAGE IS BINARY VALUE 0.
       01  P-RETURN.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  P-RTN        USAGE IS BINARY VALUE 0.
       01  LENGTH-1.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FILLER       USAGE IS BINARY VALUE 8.
       01  KEYWORD-1        PIC X(8) VALUE "FILE".
       01  LENGTH-2.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FILLER       USAGE IS BINARY VALUE 8.
       01  KEYWORD-2        PIC X(8) VALUE "LIBRARY".
       01  LENGTH-3.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  FILLER       USAGE IS BINARY VALUE 6.
       01  KEYWORD-3        PIC X(8) VALUE "VOLUME".
       01  P-KEY            PIC X VALUE "@".
       01  C-LABEL          PIC X(1) VALUE " ".
       01  P-LABEL          PIC X(8) VALUE "        ".
      
      /*****************************************************************
      *                                                                *
      *                        SCRATCH DEFINITION                      *
      *                                                                *
      ******************************************************************
       01  E-CHECK            PIC X VALUE "B".
       01  S-TYPE             PIC X VALUE "F".
       01  S-FILE             PIC X(8).
       01  S-ACCESS           PIC X VALUE SPACES.
       01  S-RETURN.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  S-RTN        USAGE IS BINARY VALUE 0.
      /*****************************************************************
      *                                                                *
      *                         PRINT DEFINITIONS                      *
      *                                                                *
      ******************************************************************
       01  PR-FILE            PIC X(8).
       01  PR-MODE            PIC X VALUE "S".
       01  PR-DISP            PIC XX VALUE SPACES.
       01  PR-COPY.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  P-COPY       USAGE IS BINARY VALUE 1.
       01  PR-CLASS            PIC X VALUE SPACES.
       01  PC-KEY              PIC XX VALUE "PC".
       01  PR-FORM.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  P-FORM       USAGE IS BINARY VALUE 0.
       01  FN-KEY           PIC XX VALUE "FN".
       01  PR-RETURN.
           05  FILLER       USAGE IS BINARY VALUE 0.
           05  PR-RTN       USAGE IS BINARY VALUE 0.
       01  PR-RTN-DISP      PIC 99.
       01  PR-RTN-STR REDEFINES PR-RTN-DISP PIC X(02).
      /*****************************************************************
      *                                                                *
      *                         PROCEDURE DIVISION                     *
      *                                                                *
      ******************************************************************
      *
       PROCEDURE DIVISION.
       START-PROGRAM.
           PERFORM INITIALIZATION.
           PERFORM MAIN-PROCESS.
           PERFORM TERMINATION.
      
       EXIT-PROGRAM.
           EXIT PROGRAM.
           STOP RUN.
      
      ******************************************************************
      *                         INITIALIZATION                         *
      ******************************************************************
      *
       INITIALIZATION.
           CALL "EXTRACT" USING SL DSK-LIB
                                SV DSK-VOL.
      
      
           MOVE SPACES    TO WSA-PROGRAM-TABLE.
           PERFORM X-INIT.
           MOVE 0         TO START-IND
                             CURR-IND.
      
           OPEN I-O    CRT.
      
      ******************************************************************
      *                         MAIN PROCESS                           *
      ******************************************************************
      *
       MAIN-PROCESS.
           PERFORM INIT-FAC.
           PERFORM D-FIND-FILE.
           MOVE ENTRY-COUNT TO END-IND.
           IF ENTRY-COUNT > 0 AND ENTRY-COUNT <= 400
             PERFORM LOAD-TABLE.
           PERFORM DISPLAY-AND-READ-SCREEN-1 THRU
             DISPLAY-EXIT.
           GO TO TERMINATION.
      
      
       A-GET-INFO.
      
               MOVE FILE-NAME(IND-CNT)    TO  FDR-FILE
               MOVE FILE-LIBRARY(IND-CNT) TO FDR-LIB
               MOVE FILE-VOLUME(IND-CNT)  TO FDR-VOL
               MOVE 0                     TO FDR-FUNCTION-CODE
               MOVE 0                     TO FDR-REC-SIZE
               MOVE 0                     TO FDR-REC-NUM
               MOVE 0                     TO FDR-RTN-NUM
               MOVE SPACES                TO FDR-DATE
      
               CALL "READFDR" USING FDR-FILE, FDR-LIB, FDR-VOL,
                    FDR-FUNCTION, FDR-MD, FDR-DATE,
                    FDR-BS, FDR-BYTE-SIZE, FDR-RTN.
      
               IF FDR-RTN-NUM > 0
                  MOVE "  ?  ?  " TO FILE-DATE(IND-CNT)
                  MOVE 0         TO FILE-RECS(IND-CNT)
                  GO TO A-EXIT.
      
               MOVE FDR-MM TO FDR-F-MM
               MOVE FDR-DD TO FDR-F-DD
               MOVE FDR-YY TO FDR-F-YY
               MOVE FDR-F-DATE     TO  FILE-DATE(IND-CNT)
      
               IF FDR-BYTE-SIZE NOT = 0
                   IF FDR-BYTE-SIZE < 1024
                       MOVE 1 TO WS-BYTE-CALC
                   ELSE
                       DIVIDE FDR-BYTE-SIZE BY 1024 GIVING
                           WS-BYTE-CALC ROUNDED
               ELSE
                   MOVE 0 TO WS-BYTE-CALC.
      
               MOVE WS-BYTE-CALC     TO  FILE-RECS(IND-CNT).
       A-EXIT.
           EXIT.
      
      ******************************************************************
      *                          TERMINATION                           *
      ******************************************************************
      *
       TERMINATION.
           CLOSE CRT.
           PERFORM EXIT-PROGRAM.
      /*****************************************************************
      *                                                                *
      *                       INPUT OUTPUT ROUTINES                    *
      *                                                                *
      ******************************************************************
      *
      ******************************************************************
      *                     DISPLAY AND READ DISPLAY REC               *
      ******************************************************************
      *
       DISPLAY-AND-READ-SCREEN-1.
           DISPLAY AND READ SCREEN-1  ON CRT
                 PFKEY 0,1,2,3,4,16.
      
           MOVE CRTREC-OA TO OA-SAVE.
           MOVE POS-CURSOR TO OA-SAVE-WCC.
           MOVE OA-SAVE TO ORDER-AREA OF SCREEN-1.
           MOVE SPACES TO WSA-ERROR.
      
           IF PF-KEY = 16
              PERFORM EXIT-PROGRAM.
      
           IF PF-KEY = 00
              PERFORM DISPLAY-OVER.
      
           IF PF-KEY = 01
              PERFORM D-DISPLAY-FILE.
      
           IF PF-KEY = 02
              PERFORM D-PRINT-FILE.
      
           IF PF-KEY = 03
              PERFORM D-DELETE-FILE.
      
           IF PF-KEY = 04
              PERFORM D-PRINT-NO-DEL-FILE.
      
           GO TO DISPLAY-AND-READ-SCREEN-1.
      
        DISPLAY-EXIT.
           EXIT.
      *
      /*****************************************************************
      *
      *
      /*****************************************************************
       LOAD-TABLE.
           MOVE ENTRY-COUNT TO TOT-COUNT.
           IF END-IND >= ENTRY-COUNT
              MOVE 1   TO START-IND
           ELSE
              ADD 1     TO END-IND
              MOVE END-IND TO START-IND.
           PERFORM X-INIT.
           MOVE START-IND TO CURR-IND.
           PERFORM LOAD-CURR-INFO VARYING IND-CNT FROM 1 BY 1
             UNTIL IND-CNT > 24 OR CURR-IND > ENTRY-COUNT.
           PERFORM CHECK-FAC VARYING IND-CNT FROM 1 BY 1 UNTIL
             IND-CNT > 12.
           IF CURR-IND > 1
             COMPUTE DISP-IND = CURR-IND - 1.
           MOVE DISP-IND   TO END-IND.
           MOVE DISP-IND   TO DIS-COUNT.
      
       LOAD-CURR-INFO.
           IF FILE-NAME(CURR-IND) NOT = SPACES
             MOVE 1 TO WSA-P-COPY(IND-CNT).
           MOVE FILE-NAME(CURR-IND) TO WSA-P-PROGRAM(IND-CNT).
      
           IF FILE-DATE(CURR-IND) = "  ?  ?  "
               MOVE "      ?"           TO WSA-P-RECS(IND-CNT)
           ELSE
               MOVE FILE-RECS(CURR-IND) TO WS-NUM-FORMAT
               MOVE WS-NUM-FORMAT       TO WSA-P-RECS(IND-CNT).
      
           MOVE FILE-DATE(CURR-IND) TO WSA-P-DATE(IND-CNT).
           ADD 1     TO CURR-IND.
      
       MOVE-CURR-INFO-UP.
           MOVE FILE-NAME(CURR-IND) TO FILE-NAME(IND-CNT).
           MOVE FILE-RECS(CURR-IND) TO FILE-RECS(IND-CNT).
           MOVE FILE-DATE(CURR-IND) TO FILE-DATE(IND-CNT).
           ADD 1     TO CURR-IND.
      
      /*****************************************************************
      *                                                                *
      *                    LINK TO LIBCOPY  ROUTINE                    *
      *                                                                *
      ******************************************************************
      *
       LINK-TO-DISPLAY.
           MOVE "DISPLAY"                     TO  LINK-TO-NAME.
           MOVE "S"                           TO  LINK-TYPE.
           MOVE "        "                    TO  LINK-LIBRARY.
           MOVE "      "                      TO  LINK-VOLUME.
           MOVE  0                            TO  LINK-PCOUNT-NO.
           MOVE "C"                           TO  LINK-CEXIT-FLAG.
           MOVE "RETURN TO LIBCOB           " TO  LINK-CEXIT-MSG.
           MOVE "H"                           TO  LINK-HELP-FLAG.
           CALL "LINK" USING LINK-TO-NAME,
                             LINK-TYPE, LINK-LIBRARY, LINK-VOLUME,
                             LINK-PCOUNT,
                             LINK-CODE, LINK-RETURN-CODE.
           IF LINK-RTN-CODE-VAL IS GREATER THAN ZERO
              MOVE LINK-RTN-CODE-VAL TO LINK-RTN-CODE-ZZZ
              DISPLAY "RETURN CODE FROM LINK IS ", LINK-RTN-CODE-ZZZ.
      
       INIT-FAC.
           MOVE HIPRO     TO FAC OF ROW04-COL04
                             FAC OF ROW04-COL11
                             FAC OF ROW22-COL20
                             FAC OF ROW24-COL11.
           MOVE HIMODUPR  TO FAC OF ROW03-COL17
                             FAC OF ROW03-COL31.
           PERFORM INIT-SCREEN-FAC VARYING IND-CNT FROM 1 BY 1
                   UNTIL IND-CNT > 12.
      
       INIT-SCREEN-FAC.
           MOVE FAC-BLANK  TO FAC OF L-F-COPY(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF R-F-COPY(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF L-F-PROGRAM(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF R-F-PROGRAM(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF L-F-RECS(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF R-F-RECS(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF L-F-DATE(IND-CNT).
           MOVE FAC-BLANK  TO FAC OF R-F-DATE(IND-CNT).
      
       D-FIND-FILE.
           MOVE "?" TO DSK-FILE.
           MOVE 400 TO COUNT-INTEGER.
           MOVE SPACES  TO RECEIVER, REC-AREA.
           MOVE 1        TO START-INTEGER.
           MOVE 0        TO ENTRY-COUNT WSA-NUM-FILES.
      
           CALL "FIND" USING DSK-FILE, DSK-LIB, DSK-VOL, STARTER,
                           COUNTER, RECEIVER, ENTRIES.
           MOVE  RECEIVER TO REC-AREA.
           IF ENTRY-COUNT > 400
              MOVE "                     TOO MANY FILES" TO WSA-ERROR
           ELSE
           IF ENTRY-COUNT < 1
              MOVE "                     NO FILES FOUND" TO WSA-ERROR
           ELSE
             PERFORM A-GET-INFO THRU A-EXIT VARYING IND-CNT FROM 1 BY 1
               UNTIL IND-CNT > ENTRY-COUNT.
      
       X-INIT.
           MOVE SPACES    TO WSA-PROGRAM-TABLE.
           PERFORM X-INIT-TABLE VARYING IND-CNT FROM 1 BY 1 UNTIL
                   IND-CNT > 24.
           PERFORM X-INIT-RECS VARYING IND-CNT FROM 1 BY 1 UNTIL
                   IND-CNT > 24.
           PERFORM X-INIT-COPY VARYING IND-CNT FROM 1 BY 1 UNTIL
                   IND-CNT > 24.
      
       X-INIT-TABLE.
           MOVE 0       TO WSA-PFNUM(IND-CNT).
       X-INIT-RECS.
           MOVE SPACES       TO WSA-P-RECS(IND-CNT).
       X-INIT-COPY.
           MOVE 0       TO WSA-P-COPY(IND-CNT).
      
       CHECK-FAC.
           IF  L-P-PROGRAM(IND-CNT) = SPACES
               MOVE FAC-BLANK TO FAC OF L-F-COPY(IND-CNT)
               MOVE FAC-BLANK TO FAC OF L-F-PROGRAM(IND-CNT)
               MOVE FAC-BLANK TO FAC OF L-F-RECS(IND-CNT)
               MOVE FAC-BLANK TO FAC OF L-F-DATE(IND-CNT)
           ELSE
               MOVE HIMODNUM  TO FAC OF L-F-COPY(IND-CNT)
               MOVE HIPRO     TO FAC OF L-F-PROGRAM(IND-CNT)
               MOVE HIPRO     TO FAC OF L-F-RECS(IND-CNT)
               MOVE HIPRO     TO FAC OF L-F-DATE(IND-CNT)
           END-IF.
      
           IF  R-P-PROGRAM(IND-CNT) = SPACES
               MOVE FAC-BLANK TO FAC OF R-F-COPY(IND-CNT)
               MOVE FAC-BLANK TO FAC OF R-F-PROGRAM(IND-CNT)
               MOVE FAC-BLANK TO FAC OF R-F-RECS(IND-CNT)
               MOVE FAC-BLANK TO FAC OF R-F-DATE(IND-CNT)
           ELSE
               MOVE HIMODNUM  TO FAC OF R-F-COPY(IND-CNT)
               MOVE HIPRO     TO FAC OF R-F-PROGRAM(IND-CNT)
               MOVE HIPRO     TO FAC OF R-F-RECS(IND-CNT)
               MOVE HIPRO     TO FAC OF R-F-DATE(IND-CNT)
           END-IF.
      
       X-DEL-FILE.
           CALL "SCRATCH" USING S-TYPE, S-FILE, DSK-LIB, DSK-VOL,
                                E-CHECK, S-ACCESS, S-RETURN.
      
       DISPLAY-OVER.
           MOVE SPACES    TO WSA-ERROR.
           IF DSK-VOL = SPACES
             MOVE HIMODUPRUL  TO FAC OF ROW03-COL31
             MOVE "                     VOLUME CANNOT BE BLANK"
                  TO WSA-ERROR
           ELSE
           IF DSK-LIB = SPACES
             MOVE HIMODUPRUL  TO FAC OF ROW03-COL17
             MOVE "                     LIBRARY CANNOT BE BLANK"
                  TO WSA-ERROR
           ELSE
             PERFORM DO-ENTER-KEY.
      
       D-DISPLAY-FILE.
           PERFORM COMPUTE-POSITION.
           IF WSA-P-PROGRAM(CURR-IND) NOT = SPACES
             MOVE  WSA-P-PROGRAM(CURR-IND) TO P-FILE
             CALL "PUTPARM" USING TY-PE, PRNAME, P-COUNT,
               KEYWORD-1, P-FILE, LENGTH-1,
               KEYWORD-2, DSK-LIB, LENGTH-2,
               KEYWORD-3, DSK-VOL, LENGTH-3,
               P-RETURN
             PERFORM LINK-TO-DISPLAY
             CALL "PUTPARM" USING C-FUNC, P-LABEL, P-RETURN.
      
       D-PRINT-FILE.
           CALL "EXTRACT" USING PC-KEY PR-CLASS
                                FN-KEY PR-FORM.
      
           PERFORM COMPUTE-POSITION.
           IF WSA-P-PROGRAM(CURR-IND) NOT = SPACES
             MOVE WSA-P-PROGRAM(CURR-IND) TO PR-FILE
             PERFORM CHECK-COPY
             MOVE "DX" TO PR-DISP
             CALL "PRINT" USING PR-FILE, DSK-LIB, DSK-VOL,
               PR-MODE, PR-DISP, PR-COPY, PR-CLASS,
               PR-FORM, PR-RETURN
             IF PR-RTN NOT = 0
                 MOVE PR-RTN TO PR-RTN-DISP
                 MOVE "ERROR CALLING PRINT, RETURN CODE = "
                    TO TEMP-ERROR
                 STRING TEMP-ERROR, PR-RTN-STR DELIMITED BY SIZE
                     INTO WSA-ERROR
             END-IF
             MOVE 1  TO WSA-P-COPY(CURR-IND).
      
       D-DELETE-FILE.
           PERFORM COMPUTE-POSITION.
           IF WSA-P-PROGRAM(CURR-IND) NOT = SPACES
             MOVE  WSA-P-PROGRAM(CURR-IND) TO S-FILE
             PERFORM X-DEL-FILE
             PERFORM REMOVE-FILE-FROM-TABLE.
      
       D-PRINT-NO-DEL-FILE.
           CALL "EXTRACT" USING PC-KEY PR-CLASS
                                FN-KEY PR-FORM.
      
           PERFORM COMPUTE-POSITION.
           IF WSA-P-PROGRAM(CURR-IND) NOT = SPACES
             MOVE WSA-P-PROGRAM(CURR-IND) TO PR-FILE
             PERFORM CHECK-COPY
             MOVE "DS" TO PR-DISP
             CALL "PRINT" USING PR-FILE, DSK-LIB, DSK-VOL,
               PR-MODE, PR-DISP, PR-COPY, PR-CLASS,
               PR-FORM, PR-RETURN
             IF PR-RTN NOT = 0
                 MOVE PR-RTN TO PR-RTN-DISP
                 MOVE "ERROR CALLING PRINT, RETURN CODE = "
                    TO TEMP-ERROR
                 STRING TEMP-ERROR, PR-RTN-STR DELIMITED BY SIZE
                     INTO WSA-ERROR
             END-IF
             MOVE 1  TO WSA-P-COPY(CURR-IND).
      
       DO-ENTER-KEY.
           MOVE ENTRY-COUNT TO PREV-EC.
           PERFORM D-FIND-FILE.
           IF ENTRY-COUNT < 1
             MOVE 0 TO START-IND
             MOVE 0 TO END-IND
             PERFORM X-INIT
             PERFORM SET-OA
           ELSE
           IF ENTRY-COUNT NOT > 400
             PERFORM LOAD-TABLE
             PERFORM SET-OA.
      
       CHECK-COPY.
           IF  WSA-P-COPY(CURR-IND) < 1
               MOVE 1   TO P-COPY
           ELSE
               MOVE WSA-P-COPY(CURR-IND) TO P-COPY.
      
       COMPUTE-POSITION.
           IF MOD-ROW > 8 AND MOD-ROW < 21
              COMPUTE CURR-IND = MOD-ROW - 8.
           IF MOD-COL > 42
              COMPUTE CURR-IND = (MOD-ROW - 8) + 12.
      
       SET-OA.
           IF ENTRY-COUNT < 1
             MOVE HEX-0 TO OA-SAVE-CR
             MOVE HEX-0 TO OA-SAVE-CC
             MOVE OA-SAVE TO ORDER-AREA OF SCREEN-1
           ELSE IF (PF-KEY = 00) OR
                   (PF-KEY = 03 AND ST-DEL-IND = PREV-EC)
             MOVE HEX-9 TO OA-SAVE-CR
             MOVE HEX-5 TO OA-SAVE-CC
             MOVE OA-SAVE TO ORDER-AREA OF SCREEN-1.
      
       REMOVE-FILE-FROM-TABLE.
           MOVE ENTRY-COUNT TO PREV-EC.
           COMPUTE ENTRY-COUNT = ENTRY-COUNT - 1.
           MOVE ENTRY-COUNT TO TOT-COUNT.
           IF ENTRY-COUNT < 1
               MOVE 0   TO START-IND
               PERFORM X-INIT
               PERFORM CHECK-FAC VARYING IND-CNT FROM 1 BY 1 UNTIL
                 IND-CNT > 12
               MOVE "                     NO FILES FOUND" TO WSA-ERROR
               PERFORM SET-OA
           ELSE
               MOVE CURR-IND TO IND-CNT
               PERFORM ADJUST-CURR-INDEX
               MOVE CURR-IND TO ST-DEL-IND
               ADD 1     TO CURR-IND
               PERFORM LOAD-CURR-INFO VARYING IND-CNT FROM IND-CNT BY 1
                 UNTIL IND-CNT > 24 OR CURR-IND > PREV-EC
               PERFORM CLEAR-LAST-SCREEN-TABLE
               PERFORM SET-OA
               MOVE ST-DEL-IND TO CURR-IND
               MOVE CURR-IND TO IND-CNT
               ADD 1     TO CURR-IND
               PERFORM MOVE-CURR-INFO-UP VARYING IND-CNT FROM IND-CNT
                 BY 1 UNTIL CURR-IND > PREV-EC
               PERFORM CLEAR-LAST-FILE-TABLE.
      
           IF DISP-IND > TOT-COUNT
             COMPUTE DISP-IND = DISP-IND - 1.
           MOVE DISP-IND   TO DIS-COUNT.
      
       CLEAR-LAST-FILE-TABLE.
             MOVE SPACES TO FILE-VOLUME(CURR-IND).
             MOVE SPACES TO FILE-LIBRARY(CURR-IND).
             MOVE SPACES TO FILE-NAME(CURR-IND).
             MOVE 0      TO FILE-RECS(CURR-IND).
             MOVE SPACES TO FILE-DATE(CURR-IND).
      
       CLEAR-LAST-SCREEN-TABLE.
           IF IND-CNT < 25 THEN
             IF CURR-IND > ENTRY-COUNT THEN
               MOVE 0      TO WSA-PFNUM(IND-CNT)
               MOVE 0      TO WSA-P-COPY(IND-CNT)
               MOVE SPACES TO WSA-P-PROGRAM(IND-CNT)
               MOVE SPACES      TO WSA-P-RECS(IND-CNT)
               MOVE 0      TO FILE-RECS(CURR-IND)
               MOVE SPACES TO WSA-P-DATE(IND-CNT)
               PERFORM CHECK-FAC VARYING IND-CNT FROM 1
                 BY 1 UNTIL IND-CNT > 12.
      
       ADJUST-CURR-INDEX.
           IF DISP-IND > 24
               DIVIDE DISP-IND BY 24 GIVING ADJ-INT
                 REMAINDER ADJ-REM
               COMPUTE CURR-IND = CURR-IND + (24 * ADJ-INT).
