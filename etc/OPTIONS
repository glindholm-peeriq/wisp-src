#######################################################################
# Copyright (c) 2002-2003 by NeoMedia Technologies Inc. 
# All Rights Reserved.
#######################################################################
#
# OPTIONS:	The WISP runtime options file.
#
#          	All of the following lines with leading '#' characters
#		are comments.  To uncomment remove the leading '#' and
#		start the line in column 1. Long lines can be continued
#		by adding a backslash ('\') as the last character on 
#		the line.
#
#		The default settings are marked.
#
#		Not all options are meaningful to all environments, see
#		the WISP manual for a complete description of each
#		option.
#
#######################################################################

# Set the error reporting level. This effects what messages get 
# reported and get logged to the wisperr.log file.
#    ERRORS - Report and log exceptions only, this is the default.
#    FULL   - Log everything. Turns on the Runtime Trace Facility.
#    NONE   - Turn off all logging (not recommended.)
#WISPDEBUG FULL

# Turning signals off will cause a core file to be created on a
# signal 10 or 11.
#SIGNALSON		(default)
#SIGNALSOFF

# A NULL (hex 00) usually displays as a space on the screen. 
# To find them set NULLISDOT and they will display as a 
# dot (.), this is useful in tracking down odd screen behavior.
#NULLISSPACE		(default)
#NULLISDOT

# If you want WISP to never prompt you on an OPEN OUTPUT to 
# "Press PF3 to Continue" then set OUTPUTVERIFYOFF.
#OUTPUTVERIFYON		(default)
#OUTPUTVERIFYOFF

# If you want WISP to automatically "create" a volume when not
# found in LGMAP then set CREATEVOLUMEON.
#CREATEVOLUMEOFF	(default)
#CREATEVOLUMEON

# Select print mechanism WISP is to use.  These options select a
# pre-defined print mechanism.  To define a fully customized
# print mechanism use the PQCMD options below. 
#PQLP			(Use LP)
#PQILP			(Use ILP)
#PQUNIQUE		(Use UNIQUE - default)
#PQNP			(Use NP the HP/UX network print)

# The PQCMD option is used to define a template for the generic print 
# queue command.  The template should consist of the print program 
# (lp, ulp, etc.) followed by static text and macros.  The macros will
# be substituted with the actual runtime values.  See the WISP release 
# notes for a complete list and description of the macros.
#
#PQCMD /usr/bin/lp -c -s %FILE%
#
# These PQxxxOPT options are used with the PQCMD option to define 
# optional macros that are substituted in the print command template.  
#
#PQCLASSOPT      %CLASSOPT% macro when class is not " " (blank)
#PQCOPIESOPT     %COPIESOPT% macro when copies not 1
#PQPRTNUMOPT     %PRTNUMOPT% macro when printer number not 000
#PQFORMOPT       %FORMOPT% macro when form number not 000
#PQHOLDOPT       %HOLDOPT% macro when mode is 'H' (hold)
#PQDELOPT        %DELOPT% macro when disp is "DX" (delete)
#PQREQOPT        %REQOPT% macro when disp is "RS" (requeue)
#
# The PQDELETELOCAL option is used when the PQCMD print queue command 
# does not support an option to delete the file after printing. This 
# causes the WISP runtime to delete the file after the print queue 
# command has been issued if the disposition is "DX" and the mode is 
# not "H".
#
#PQDELETELOCAL
#
# The PQNOHOLD options instructs the PQCMD generic print queue command 
# handler that this print queue does not support a HOLD option. If a 
# the HOLD option is specified then the print command is not issued.
#
#PQNOHOLD
#
# Example 1) Implementation for UniQue Print Queue on UNIX
#
#PQCMD ulp -q %CLASSOPT% -f%FORM% -n%COPIES% %PRTNUMOPT% %HOLDOPT% \
#  %DELOPT% %REQOPT% '%FILE%'
#PQCLASSOPT  -C%CLASS%
#PQPRTNUMOPT -P%PRTNUM%
#PQHOLDOPT   -M hold
#PQDELOPT    -M del
#PQREQOPT    -M re
#
# Example 2) Implementation for LP on UNIX
#
#PQCMD lp -c -s -n%COPIES% %FORMMAP% %LPMAP% %PRMAP% '%FILE%' 
#PQNOHOLD
#PQDELETELOCAL
#
# Example 3) Implementation for UniQue Print Queue on NT/95
#
#PQCMD C:\uniquent\ulpr.exe -Huniquehost -p515 -q %CLASSOPT% -f%FORM% \
#  -n%COPIES% %PRTNUMOPT% %HOLDOPT% %REQOPT% %FILE% 
#PQCLASSOPT  -C%CLASS%
#PQPRTNUMOPT -P%PRTNUM%
#PQHOLDOPT   -M hold
#PQREQOPT    -M re
#PQDELETELOCAL

# The PQMANAGER option allows you to specify the command that gets 
# run when the "Manage Print Queue" option is selected from the WISP 
# Command Processor.
# This example shows the UniQue print queue manager.
#
#PQMANAGER /usr/spool/uprint/unique -q -w
#

# WISP can use either the UNIQUE Batch Queue, another batch queue
# product, or no batch queue product.
#
## No batch queue
#BATCHQUEUE none	(No batch queue)
#BATCHMAN none 		(No batch queue management tool)
#
## UniQue Batch Queue options
#BATCHQUEUE usubmit	(Use UniQue usubmit to submit jobs)
#BATCHMAN ubatchman 	(Use UniQue ubatchman to manage batch queue)
#
## Argent Queue Manager on Windows NT Options
#BATCHQUEUE  AQM
#BATCMAN     none
#BATCHCMD    QSUBMIT %SUBFILE% %CQMAP% /NAME=%SUBNAME% \
#  /PARAMS="%SUBPARAMS%" /LOG_FILE=%BATCHLOG% /USER=%BATCHUSER% \
#  /PASSWORD=%BATCHPASS% %SUBSTAT% /NONOTIFY
#BATCHCMD95  REXEC.EXE %SERVER% -l %BATCHUSER% -p %BATCHPASS% \
#  %BATCHCMD%
#BATCHUSER   user
#BATCHPASS   password
#BATCHSERVER server
#BATCHLOGVOL volume
#BATCHLOGLIB library
#BATCHHOLD   /AFTER+365
#BATCHRUN

# If you want EXTRACT to return a numeric ID instead of the alpha
# default, then set IDNUMERIC.
#IDALPHA		(default)
#IDNUMERIC

# If you want EXTRACT to return the 5-7 characters instead of
# the 1-3 default, then set IDFIVE.
#IDONE			(default)
#IDFIVE

# WISP normally filters out "fatal" file status codes and causes an
# "error getparm" EVEN when the user has supplied DECLARATIVES. 
# If you specify ALLSTATUSKEYS then WISP will pass all status codes
# through to the users DECLARATIVES when present.
#ALLSTATUSKEYS

# WISP defaults to a maximum of 128 PRBs (putparms) and uses a shared
# memory size of 40 pages (page size is 512 bytes).  You can adjust
# these values to "tune" your system. (NOTE: Keep ratio approx 3:1)
#MAXPRBPARMS 128	(default 128)	
#MAXPRBPAGES 40		(default 40)

# WISP defaults to a Wang style HELP screen (HELPSYTLE1).
# HELPSTYLE2 can be used to change to a non-Wang style HELP screen.
#HELPSTYLE1		(default)
#HELPSTYLE2

# WISP will vector CALL "LINK"s to VSSUBS into internal calls of the
# desired VSSUB.  The LINKVECTOROFF option will disable this feature.
#
#LINKVECTOROFF

# WISP/NT can implement a "LINK" from one COBOL program to another
# COBOL program as an internal "call".  This is referred to as a
# "soft link" and it is much faster an much more effecient then a 
# "hard link" which involes spawning a new processes and starting
# a new COBOL RTS.  However, since the new program is being run by
# the same RTS it can result in a recursive call which will fail.
#
#USEHARDLINK		(default)
#USESOFTLINK

# If you have translated your applications for Acucobol Native Screens 
# then uncomment the NATIVESCREENS option to inform the runtime.
#
#NATIVESCREENS

# The WISP runtime can be instructed to use only pfkeys (1) to (12)
# for internally generated screens instead of the 32 pfkeys that
# were used on the Wang VS.  When the PFKEYS12 option file option is
# used then internal screens like OPEN GETPARMS use only pfkeys (1)
# to (12) and they use pfkey (12) as the EXIT key instead of the
# Wang VS standard of pfkey (16).
#
#PFKEYS12

# The EXTDISPLAY option instructs the runtime to use the 
# external DISPLAY utility instead of the internal DISPLAY 
# routine which is the default.
#
#EXTDISPLAY

# The WISPDISPLAY8BIT option instruct the DISPLAY utility to display
# 8-bit non-ASCII characters without CHARMAP substitution. If the
# option NATIVECHARMAP is specified it will override this option.
#
#WISPDISPLAY8BIT

# The NATIVECHARMAP option instructs the runtime and utilities that
# text data within the application is encoded using the "native" 
# character set based on CHARMAP the character map configuration 
# file.  If this option is not specified then the default behaviour
# is to encode text data using the "Wang" character set.
# When this option is set the "DISPLAY AND READ" processing (through
# the wscreen routine), the GETPARM VSSUB, and the DISPLAY and 
# VSEDIT utility will automatically convert between "native" and 
# "Wang" character set encoding and "native" character set encoding
# will be returned to the applications (or saved in the file).
#
# NOTE: The workstation operations READ, REWRITE, and WSXIO are
#       not affected by this option and will use the "Wang" 
#	character set.  Embedded FAC's can not be used with "DISPLAY
#	AND READ" screens.
#
#NATIVECHARMAP

# The MOUSENONMOD option instructs the runtime to allow you to 
# mouse position to a non-modifiable position on the screen.  
# Normally you can only position into a modifiable field or a tab-
# stop.  This option is only meaningful when used with Co*STAR or
# on Windows NT/95.
#
#MOUSENONMOD

# The UTILSWINDOWS option instructs the runtime to run utilities 
# (e.g. DISPLAY, Print Queue Manager, etc.) in separate windows.  
# This option is currently only meaningful on Windows and will be 
# ignored on other systems.
#
UTILSWINDOWS

# The DISPLAYUTIL option allows you to specify a substitute "DISPLAY"
# utility.  The substitute display utility should be either on the
# PATH or it should be specified as a fully qualified file path.  
# This utility must accept a single command line argument which is
# the name of the file to display.  This utility will be used when
# a call "LINK" to "DISPLAY" is performed or when a "Display" option
# is selected from "Manage Files and Libraries".  The substitute
# display utility is expected to not issue getparms, the getparms 
# will be issued by the runtime and translated into a filename 
# before the utility is run.
# On Windows NT/95 the Notepad utility makes a good substitute.
#
#DISPLAYUTIL notepad.exe

# The COSTARV2 option instructs the runtime to use "Version 2" 
# attribute mapping when Co*STAR for WISP is used.  The version 2 
# attribute mapping perserves all of the Wang FAC atttributes 
# including the UNDERLINE attribute which is not available in 
# the original (version 1) attribute mapping.  With version 2
# all "special" fields have the REVERSE attribute.  Protected 
# fields are unchanged, and modifable fields have the REVERSE 
# attribute added.  Hotspots are REVERSE+BLINK+UNDERLINE, and 
# tabstops are REVERSE+BLINK.  Note that on the Wang, the BLINK 
# attribute is actually BLINK+BOLD so the hotspot and tabstop
# attributes will not conflict with any Wang attributes.
# If you use the COSTARV2 option you will also need to use a
# Co*STAR color scheme which is complatible (e.g. "w4w_v2").
#
#COSTARV2

# The YYPIVOTYEAR options sets the pivot year for DATE6 and 
# for file sort keys of type "Y". These represent a two digit 
# year (YY PIC 99) whose value is calculated based on YYPIVOTYEAR. 
# As a example, if pivot year is 30 then YY has a value range
# of 1931-2030. 
#
# If not set YYPIVOTYEAR defaults to current year plus 50,
# this will put the current year in the middle of a 100 year
# window. For 2003 the pivot year defaults to 53 which gives 
# a range of 1954-2053.
#
#YYPIVOTYEAR 30		(1931 - 2030)

# The DEBUGNOHIDE option is used on Windows NT/95 to tell the
# CreateProcess logic (used by LINK and SUBMIT) to not HIDE 
# any windows.  This is used only for DEBUG processing to see
# what windows are being hidden.
#
#DEBUGNOHIDE

# The KEEPWORKLIB option instructs the runtime to not delete
# the WORKLIB directory as it normally does when exiting the 
# highest link level. Use this option if you want to control 
# when WORKLIB is deleted and do not want the runtime to do 
# it automatically.
#
#KEEPWORKLIB

# The CONSOLEACU option is used on WIN32 when using NT telnet support 
# to instruct the runtime that the Acucobol RTS is a "Console" 
# application instead of the default "Windows" application.  This will 
# prevent window flashing on the CALL "LINK" when using the console 
# runtime outside of telnet and without Co*STAR.
#
#CONSOLEACU

# The VUTIL option allows you to specify a full path to the Acucobol
# vutil utility. The runtime will first check the $VUTIL environment
# variable.
#
#VUTIL /usr/local/acucobol/bin/vutil
#VUTIL \\SERVER\ACUDIR\bin\vutil32.exe

# The SHAREDMEMORYV1 option causes shared memory control files to
# be named so they are compatiable with 4.3.06 and earlier versions 
# of the runtime.  Use this option if you need to run earlier versions
# of the runtime or utilities simultaneously with new runtimes of
# utilties.  (Also see USESHAREDMEMORY below.)
#
#SHAREDMEMORYV1

# The USESHAREDMEMORY option can be specified on Unix to have the
# runtime use the older true shared memory routines for GETPARM/PUTPARM
# processing.  The current implementation uses temporary files to
# store the PUTPARM data.  The only reason to use this option is if
# you require compatibility with older utilities that use shared
# memory for PUTPARM data.  
# NOTE: If you enable the SHAREDMEMORYV1 option it will also enable
# this option.
#USESHAREDMEMORY

# The READFDRV1 option causes READFDR/READFDR4 to behave as it did
# pre-release 4.4 regarding Sequential and Relative files without
# known headers that describe the structure.  Specifically:
#   "FT" returns "C"
#   "RC" returns 0 or 1
#   "RS" returns 256
#   "RT" returnS "V"
#
#READFDRV1

# The UNLOADREBUILD option causes the WISP file sort facility to use
# the "rebuild" utility to unload Micro Focus indexed files.  This 
# option should only be used if you are using Server Express and you
# also have an earlier version of "fhconvert" on the $PATH.
# Do not use this option with Micro Focus Object Cobol 4.1 as that
# version of the "rebuild" utility does not allow you to convert an 
# indexed file into a sequential file.
#
#UNLOADREBUILD

# The WISPTMPDIR option allows you to change the location of WISP
# runtime temporary files.
#
#WISPTMPDIR /usr/tmp
#WISPTMPDIR C:\TEMP

# The WISPSYSTMPDIR option allows you to change the location of system
# runtime temporary files.  This is currently only used for temporary
# sort files.
#
#WISPSYSTMPDIR /tmp
#WISPSYSTMPDIR C:\TEMP

# The WISPSORTMEM option allows you to set the amount of memory the
# file sort facility will use.  The number is specified in 'K' and
# defaults to 2048 (2 mb). The valid range is 16 to 65535.
#
#WISPSORTMEM 2048

# The WISPCPU option allows you to set the CPU ID returned by "EXTRACT"
# keyword "C#". 
# The value is an Alpha(4), spaces will be returned if not set.
#
#WISPCPU ccmm

# The WISPNETID option allows you to set the Network Id returned by 
# "EXTRACT" keyword "W$". 
# The value is an Alpha(8), spaces will be returned if not set.
#
#WISPNETID netid

# The WPROC option specifies the name or explicit location of the
# WISP Procedure Interpreter.
#
#WPROC wproc

# The WPROCDEBUG option specifies debug parameters to WPROC. This is
# used in debugging only.
#
#WPROCDEBUG -d0

# The ACPCONFIG option specifies directory of the ACPMAP file.
#
#ACPCONFIG /usr/local/wisp/acp

# The ACPMAP option specifies the name of the ACPMAP file.
#
#ACPMAP ACPMAP

# The WISPSCRATCHMODE option can specify earlier behavour for the 
# SCRATCH vssub.  Two mode are supported 32 and 33.
#
#WISPSCRATCHMODE 33

# The USEOLDVSDATE option cause vssubs DATE and DAY to behave as
# they did prior to DATE6 support.
# 
#USEOLDVSDATE

# The WISPPS1 option allows you to specify the shell prompt by
# setting the PS1 environment variable value to use when you 
# "shell out" from the WISP Command Processor on Unix with 
# the "(11) Enter Commands" option.  If WISPPS1 is not specified 
# then PS1 is not changed.
#
#WISPPS1 "*** WISP PS1 PROMPT ***> "
