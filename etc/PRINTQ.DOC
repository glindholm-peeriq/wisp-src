
IDSI PRINT QUEUE 
User's Guide



August 1992

This manual describes the IDSI Print Queue, a software product
designed to provide print scheduling and management services
in the Unix environment.

Software Version:  IDSI Print Queue V2.16

Associated Software: Ultrix 4.2, AIX 3.1, DG/UX, HP/UX, SCO Unix,
                     Unix System V



IDSI (International Digital Scientific, Incorporated)
28460 Avenue Stanford, Suite 100
Valencia, California 91355

Phone: (805) 295-1155     Fax: (805) 295-8755



August 1992
 			COPYRIGHT Notice.

The information in this document is subject to change without
notice and should not be construed as a commitment by International
Digital Scientific Incorporated.  IDSI assumes no responsibility
for any errors that might appear in this manual.

The software described herein is furnished under license and may only
be used or copied in accordance with the terms of that license.



Copyright (c) 1992 by International Digital Scientific Inc., Valencia, CA.

			All rights reserved.


Under international copyright laws, you may not copy this manual or
the software it describes, in whole or in part, without permission in
writing from International Digital Scientific Incorporated.  Under the
law, these restrictions apply to translation into other languages or
formats.



0  PREFACE 

	 
0.1  Release
     This manual refers to version 2.16 of the IDSI Print Queue.  See the
     IDSI Print Queue Release Notes for information on subsequent versions.


0.2  Intended Audience
     This manual is intended for system managers, programmers and software 
     developers who are using the IDSI Print Queue.  It provides the information
     necessary to install and use all of the IDSI Print Queue components.
     Some basic experience with the following is assumed:
	 - use of the Bourne Shell
	 - general aspects of the Unix filesystem, including directories
	   and file permissions/modes
	 - use of a Unix text editor 
	 - use of "filter processes" to manipulate data


0.3  Scope of Document
     This manual is divided into three chapters and two appendices.

	Chapter 1 introduces the IDSI Print Queue.

	Chapter 2 describes how to use the IDSI Print Queue.

	Chapter 3 describes the installation and setup procedure.

	Appendix A provides troubleshooting information for some common 
		   problems.

	Appendix B describes the sample programs ilpsrv and ilpremote.


0.4 Terms and Definitions
    The names of programs in this document are in upper case.

    class - An attribute of printers and print jobs.  A class is specified
            by an uppercase letter.  A printer may be assigned several classes.
            The printer can print any print job whose class matches one of its
            own assigned classes.  Each print job can be assigned a class of
            printer to print on.

    client - A program that relies on another program, called a server, to
             perform some service upon request.

    daemon process - The name given to a Unix program that is designed to be
                     run as a background process.  A daemon process (also
                     called simply "daemon") often acts as a "server" to a set
                     of client processes, responding to requests of some sort.


    filter process - Generally speaking, a program that reads data from its
                     standard input, performs some well defined operation on
                     it, and writes the modified data to its standard output.
                     Under Unix, complex operations are commonly performed by
                     combining many such "filter" programs together into a
                     command "pipeline".  

    form - A form is associated with a certain page layout and font.  The form
           specifies the print characteristics, such as characters per inch,
           lines per inch, etc. Each print job is given a specific form type.
           Printers are said to have a form "mounted" on them, meaning jobs
           printed on that printer are printed according to that form's
           specifications.

    macro - In this document, the term macro refers to a dollar sign followed
            by one of the letters 'n' 'u' or 'l'.  These macros have special
            meaning to the Print Queue and are described in the sections on
            configuration below.

    model - An attribute of printers.  The model describes what type of printer
            it is.  This value is used when deciding how to initialize the
            printer for a given form.

    pipeline - A chain of (filter) programs connected `head-to-tail' so that
               the output of one becomes the input of the next.  Each program
               is used to perform some operation to a set of data, before
               passing the data on to the next process.

    Print Queue - In this document the words Print Queue (capitalized) are
                  used to refer to the IDSI Print Queue, including all related
                  software.

    queue - The actual queue or list of files currently on hold or waiting to
            print in the Print Queue.

    server - A program that performs some service for another program or
             programs.  

    stock - An attribute of forms, stock basically indicates the type of paper
            used for that form.  The Print Queue uses the stock type to
            determine if it is necessary to prompt the operator to change the
            form.  If the stock is different, the user will have a chance to
            change the paper before indicating that the form has been changed.
            Otherwise, the form will be changed automatically.



1   INTRODUCTION
    This chapter introduces the IDSI Print Queue.

	   
1.1 Background
    The Unix operating system provides basic Printer spooling
    software for printer management.  System V variants use lp/lpsched,
    BSD based systems use lpr/lpd.  While the standard Unix print spoolers 
    provide basic print queue functionality, users migrating from
    the Wang environment need a print spooler which more closely
    resembles the Wang Print Spooler.  The IDSI Print Queue was 
    written to give users equivalent functionality that they had
    on the Wang VS.

1.2 Overview

    The IDSI Print Queue is similar in operation to then existingf Unix
    print spooler software.  A background "server" (or daemon) process
    runs continuously, and services requests from "client" programs.  The
    "client" programs send requests to the "server" process to do various
    things, such as queueing a file to be printed, or modifying an
    existing queue entry.  The various components will be discussed next.

1.3 Components

    idaemon - The program which runs in the background as a daemon process.
              This program handles all scheduling and printing of files.

    ishut - The program used to shut down the idaemon process.

    ilp - The program used to submit a file to be printed.
 
    ilpman - The full screen queue/printer management program.

1.4 Features
    This section gives an overview of the functionality provided
    by the IDSI Print Queue.

1.4.1 General features
    The IDSI Print Queue allows specification of printer destination
    in several ways, including by number, by class, and by name.
    Each printer has a unique number, a unique alphanumeric name,
    and one or more classes.  		

    Each job can be assigned a class, printer number or name to
    indicate the desired print destination.  A default printer
    can be configured to receive print requests that specify no
    destination.

    Each job is also assigned a form.  The form specifies how the
    printer should be initialized, as well as what filters to use on
    the print file.  The user will be prompted to change forms on the
    printer management screen if the paper needs to be changed.
                 
    Multiple copies of a file can be requested.  A print job can
    specify that only a certain range of pages from a file be printed.
    Print files can optionally be deleted after being printed.

    A printer can be either a physical device or a program.  If it is
    a device, the idaemon process will send print files directly to that
    device.  If it is a program, the idaemon process will run the program,
    passing the contents of the print file as the program's standard
    input.  This feature is useful when using the Print Queue with
    printers that are not directly connected to the local machine,
    but are connected through some type of network.

1.4.2 Features of the queue/printer management program

    The full screen queue/printer management program (ilpman) allows the
    following operations to print jobs and printers:

	- Hold and release of print jobs.
	- Modify characteristics of a print job. These characteristics include
	  form type, job class, number of copies, start and end page,
	  job disposition (delete or respool after), and position in queue.
	- Display the contents of a print file on screen.
	- Enable or disable printers.
	- Modify printer characteristics.  These characteristics include
	  currently mounted form and currently handled job classes.



2   USAGE
    This section describes how to use the IDSI Print Queue.


2.1 Printing files
    Files can be printed either from WISP converted COBOL programs or from the 
    command line.

2.1.1 From WISP converted programs.
    To enable use of the IDSI Print Queue by COBOL programs, edit the 
    OPTIONS file, and insert (or uncomment) the line "IDSIPRINTON".
    Any print files will then be sent to the IDSI Print Queue after they
    are closed.  The Wang VSSUB "PRINT" can also be used to print files.

2.1.2 Using ilp.
    The ilp program is available from the Unix command line for printing
    files.  Its command syntax is as follows:

	     ilp [options] <files>

    You can specify any number of filenames in the command.  If you do
    not specify any filenames, ilp will attempt to capture <stdin> and
    print it.  The options supported are as follows:

	   -d <printer>	    Used to specify job destination. <printer>
	      		    is the name of the desired printer.
       
	   -r start:end	    Used to specify range of pages to print.  If
	      		    omitted, the entire file will be printed.
       
	   -f form	    Used to specify which form to use.
       
	   -C class	    Used to specify which printer class to use.
	      		    The job may be printed on any printer having
	      		    a matching class.
       
	   -n copies	    Used to specify number of copies desired.
   
	   -M <mode>        Used to specify the print job's mode.  <mode>
	                    is one or more of the following (separated by
	                    commas if necessary):
		            hold - queue the file in hold mode.
	                    del  - delete the file after it is printed.
	                    re   - respool and hold the file after it
	                           is printed.


2.2 Fullscreen Print Queue Management.
    Print Queue management is available from WISP converted COBOL programs 
    or from the command line.

2.2.1 From WISP converted programs.
    To access the Print Queue manager, select "Manage PRINT QUEUE" from 
    the WISP help screen.

2.2.2 Using ilpman from the command line.
    From the Unix command line, use ilpman to access the queue management
    screen.




2.3 Using the ilpman Queue and Printer Management program.
    From the ilpman program you can access the queue management screen(s)
    and the printer management screen(s).  There are four different screens
    available from the ilpman program.  These screens are described below.
    For each screen, the meaning of each column is described, then the 
    available PFkey actions are described.

    Note that on all screens, if the value of a particular field is
    too large to fit in the field, there will be a plus sign at the
    left or right edge of the field to indicate that part of the
    field's value cannot be seen.

    When you first enter the program, you will see a screen similar
    to the following:

2.3.1 Main screen:


                 ***  IDSI Print Queue Manager V2.16 <BSD>  ***
    User: jockc                            Thursday      June 25, 1992  1:44 pm

    _Pos Path                            User     Form     Cls Printer  Status
 
   1 /usr2/jockc/pq/c_comm.c            jockc    letter       lp1      Hold
    2 /usr2/jockc/pq/c_comm.c            jockc    letter       lp1      Hold
    3 /usr2/jockc/pq/d_main.c            jockc              Z           Hold
    4 /usr2/jockc/pq/jlist.c             jockc    letter       ncr      Hold
    5 /usr2/jockc/pq/makefile            jockc    landsca+     zaphod   Hold
    6 /usr2/jockc/pq/xxx                 jockc    l8c18     A           Hold
    7 /usr2/jockc/pq/cfile.x             jockc              X           Hold




    _Position cursor to indicate file and press PFkey to perform action
    (1) Exit                        (7) Hold/Release   (10) Change   (14)Other
                                    (8) Delete         (11) All/Mine (15)Prtrs
                  (6) Display       (9) Stop/Start     (12) Remove



    Column definitions:

    Pos - This column indicates the position of a print job in the list.

    Path - This column indicates the Unix path of the print file.  

    User - This column indicates the name of the user who submitted the
           print job, not the owner of the file itself.

    Form - This column indicates the name of the form to use for printing
           the file.
 
    Cls - This column indicates the class of the job, if it has one.  Any
          printer which has a matching class letter in its class list may
          print the job.

    Printer - This column indicates the name or number of the desired
              destination, if it was specified.

    Status - This column indicates the status of a job.  Possible contents
             of this field and their meanings are given below:


    Status definitions:

    Chgform - The wrong form is mounted on the printer to which
              the job is about to print. Go to the Printer management screen
              and change the form on the indicated printer.  

    PrtErr - An error was generated when the idaemon process attempted to 
             access the printer device.  Check the printer port or the 
             printer itself to insure proper operation. The idaemon process 
             will write some information about the error in the "errs" file. 
             Idaemon will sense when the error condition has cleared.  The
             "errs" file is described later in this document.

    Printing - The job is currently being printed.

    Hold - The job is in hold mode.  It will be held in the queue until
           it is released.

    Deleted - The job has been deleted from the queue and the file is 
              being deleted from the disk media.

    Removed - The job has been removed from the queue.

    <blank> - The job is waiting for an available printer.


 
    The labels at the bottom of the screen indicate which PFkeys are
    active.  You may position the cursor and press a PFkey to perform some
    operation on a job.  

    PF6 (Display) runs the display program on the current job.  

    PF7 (Hold/Release) toggles between Hold and Release for the current job.

    PF8 (Delete) deletes the job from the queue, and deletes the print file 
        from the disk media.  

    PF9 (Stop/Start) will stop and restart a job that is already printing.
        While a job is stopped, you may press PF7 to abort the job and put it
        back on hold.

    PF10 (Modify) puts you in change mode.  Fields that may be edited are
         underlined.  Use tab to move between fields. Modify the desired
         fields, and press return.  Ilpman will send a request to the idaemon
         to make the desired changes.  While you are in change mode, you may
         press PF14 to show or modify the other information about the job.  To
         change disposition, tab to that field and press the spacebar.

    PF11 (All/Mine) toggles between display of all jobs in the queue, and the
         user's own jobs. 

    PF12 (Remove) deletes the job from the queue, but does not delete the file
         from the filesystem.

    PF14 (Other) shows other information for the jobs.  The other information
         screen is shown and described below.

    PF15 (Printers) toggles between the printer management and queue management
         screens.  The printer management screens are described below.



2.3.2 Other Information Screen.


                 ***  IDSI Print Queue Manager V2.16 <BSD>  ***
    User: jockc                           Thursday      June 25, 1992  1:43 pm

    _Pos Path        JobID  Copies Size   StPage  EndPage  Banner?  Disposition

    2 +kc/pq/c_comm.c   2      1    5k      1       99999     No
    3 +kc/pq/d_main.c   8      1    36k     1       99999     No     ReQueue
    4 +ckc/pq/jlist.c   4      1    3k      1       99999     No
    5 +kc/pq/makefile   5      1    4k      1       99999     No
    6 +2/jockc/pq/xxx   6      1    0k      1       99999     No
    7 +ckc/pq/cfile.x   7      1    0k      1       99999     No     Delete





    _Position cursor to indicate file and press PFkey to perform action
    (1) Exit                        (7) Hold/Release   (10) Change   (14)Other
                                    (8) Delete         (11) All/Mine (15)Prtrs
                  (6) Display       (9) Stop/Start     (12) Remove



    Column definition:

    JobID - This column contains the ID number of the job.  The Job Id is a
            unique assigned to the job by the idaemon process.

    Copies - This column indicates the number of copies the user requested.

    Size - This column indicates the approximate size in kilobytes.

    StPage
    EndPage - This columns indicate the desired start and end pages for the
              job.  The lpp (lines per page) field in the formdef file
              (described below) is used to determine page boundaries.

    Banner? - This column indicates whether a banner page will be printed
              for this job.  The value is based on the job's class.

    Disposition - This column can be either ReQueue or Delete, or blank.
	-Delete means the file will be deleted from the filesystem after the
	 job prints.
	-ReQueue means that the print job will remain in the queue
	 (in Hold mode) after it prints.
	-<blank> means no disposition.




2.3.3 Printer management screenr:

            ***  ***  IDSI Print Printer Manager  ***  ***
    User: jockc                         Thursday      June 25, 1992  1:45 pm

    _Printer  Device                 DefForm  CurForm  Class        Status

    zaphod   |ilpremote zaphod $n    plain    plain    ABC          Disabled
    lp1       /dev/ttyp4             none     none     QZ           Printing
    lp2       /dev/tty03             letter   legal    X            FormChg
    nullprt   /dev/null              test     test     X            Idle
    laser     /dev/tty05             landsca+ landsca+ MN           Idle
         






    _Position cursor to indicate printer and press PFkey to perform action
    (1) Exit                                          (10) Modify   (14)Other
                                                                    (15)Queue
                                (6) Enable/Disable



    Column definition: 

    Printer - This column contains the name of the printer.  

    Device - This indicates the Unix path of the printer device, or the
             command string if the printer is of type program.

    DefForm - This indicates the default form for a given printer.  The
              default form is used if a job has no form, or an unknown form.

    CurForm - This indicates the name of the form currently mounted on the
              printer.

    Class - This indicates which job classes may print on a printer.

    Status - This indicates the status of a printer.  Possible status values
             are as follows: 


    Status definition:
 
    Disabled - The printer has been disabled (see PF6 below).  

    Error - The idaemon process was unable to access the printer 
            device.  Consult the "errs" file for more information 
            about the condition.  (see PF9 below)

    Busy - The idaemon process was unable to access the printer, due to 
           another process on the system using it.  

    Stopped - A user stopped the job (see PF9 from the Queue Management 
              Screen, described above) currently printing on that printer.

    WrongForm - A job is waiting to print on this printer that needs
                to have a different form mounted (see PF7 below).


    You may position the cursor on a given printer and press a PFkey to
    perform on of the following functions:

    PF6 (Enable/Disable) toggles a printer's enabled or disabled status.

    PF7 (Mount Form) mounts the appropriate form on the printer. This is
        only necessary if a print job requires a form with different stock
        type that the form currently mounted on the printer.

    PF9 (Clear Error) clears the error status of a printer (see "Status"
        column, above).  The idaemon will not try to use the printer until its
        error status has been cleared.  Note that the idaemon will
        periodically check all printers with error status, and clear that
        status if the printer error condition has been fixed.

    PF10 (Modify) puts you in change mode.  Fields that may be edited are
         underlined.  Modify the desired fields, and press return.  Ilpman will
         send a request to idaemon to make the desired changes.

    PF14 (Other) shows other information about the printers (shown below).  

    PF15 (Queue) takes you back to the queue management screen.  




2.3.4 Printer status:


                 ***  ***  IDSI Print Printer Manager  ***  ***
    User: jockc                          Thursday      June 25, 1992  1:45 pm

    _Printer  Device               Printer #     Current Job     Model

    zaphod   |ilpremote zaphod $n     #3                         generic
    lp1       /dev/ttyp4                             46          la323
    lp2       /dev/tty03                             42          ti800
    nullprt   /dev/null               #1              
    laser     /dev/tty05             #10                         hplj






    _Position cursor to indicate printer and press PFkey to perform action
    (1) Exit                                         (10) Modify   (14)Other
                                                                   (15)Queue
                              (6) Enable/Disable


    Column definitions:
 
    Printer # - This column indicates the number given to the printer in
                the prtdef file.  WISP converted programs may specify print
                destinations using this number.

    Current Job - This column indicates the JobID of the job (if any)
                  currently printing on a printer (see "JobID" under Queue
                  Management, Other Information, described above).

    Model - This column indicates the model name given to the printer in
            the prtdef file.

    NOTE: There are no modifiable fields on this screen.



2.4 Using idaemon and ishut.

2.4.1 To start IDSI Print Queue print services, run the idaemon program
    as follows:

	# /usr/lib/idaemon

    Idaemon will print a message containing version information.

2.4.2 To shut down the idaemon process, run the ishut program as follows:

	# /usr/lib/ishut

    You must be an operator to run ishut (see discussion of operators in 
    section 3.2.2 below).




3  INSTALLATION
   This section describes how to setup and configure the IDSI Print Queue.
   Please read the entire section before attempting to setup and use
   the Print Queue.


3.1 Distribution
    The Print Queue distribution consists of the following files:

	wisp/bin/idaemon	  Background spooler daemon.
	wisp/bin/ishut		  Program to shut down the spooler.
	wisp/bin/ilp		  Program to submit files for printing.
	wisp/bin/ilpman		  Program to manage queue and printers.
	wisp/lib/libilp.a	  Archive for linking ilp and ilpman into
				  COBOL programs
	wisp/etc/printq.relnotes  Release notes for the current release.

3.2 Overview
    This section describes the configuration and work files used 
    by the Print Queue.

3.2.1 Print Queue Work Directory

    The directory /usr/spool/iprint is used as a work directory by
    the Print Queue.  This directory contains various configuration
    and work files.  This directory and the four files mentioned
    below should exist before you start the Print Queue.  The steps 
    required for this are covered in section 3.3.

    The IDSI Print Queue uses four files in /usr/spool/iprint to specify
    its configuration.  The files are as follows: 

	/usr/spool/iprint/ilpdef   Used to specify general spooler
				   configuration.
	/usr/spool/iprint/prtdef   Used to specify printer configuration.
	/usr/spool/iprint/formdef  Used to specify form information.
	/usr/spool/iprint/classdef Used to specify class information.  

    The files are described in greater detail in sections 3.2.2 through
    3.2.5.

    The work files (all created by idaemon) in /usr/spool/iprint are as 
    follows:

	/usr/spool/iprint/errs     The error log. Consult this file if
	                           you are having difficulty with the
	                           Print Queue.

	/usr/spool/iprint/LOCKFILE Contains some flags used by idaemon
	                           and its clients.

	/usr/spool/iprint/daemon_pid Contains the process id of the
	                             current idaemon.

	/usr/spool/iprint/data/    A directory containing three data
	                           files described below.

	/usr/spool/iprint/data/iqueue.dat Contains an image of the current
	                           queue.  The ilpman program reads this
	                           file to determine the queue contents.
	                           The idaemon program will read this file
	                           at startup to determine what was in the
	                           queue before the Print Queue was shut
	                           down.

	/usr/spool/iprint/data/iprinters.dat Contains info about the current
	                           status of printers in used by the Print
	                           Queue.

	/usr/spool/iprint/data/ilpconfig.dat Contains general status
	                           information about the Print Queue.

	/usr/spool/iprint/auto/    A directory used by ilpremote and ilpsrv
	                           (described in Appendix B).

	/usr/spool/iprint/autospool/ A directory used by ilpremote and
	                           ilpsrv (described in Appendix B).

	/usr/spool/iprint/init/    A directory containing initialization
	                           files for various printer models.

	/usr/spool/iprint/pstatus/ A directory containing error output from
	                           printers of type "program".


3.2.2 ILPDEF

    The file /usr/spool/iprint/ilpdef describes general spooler
    configuration.  The layout of the file consists of a list of
    fields, one per line.  Each field is in the form 'name=value'.

    The two possible  field names and their values are as follows:

      operators  -  Users with operator privelege 
      ---------
       Value should be a comma separated list of user names who
       will be treated as operators.   Any user who is an operator  
       is allowed to access any user's jobs in the following ways:
       remove (PF12), hold/unhold (PF7), stop/start (PF9), and
       display (PF6). Operators are also allowed to shut down the 
       idaemon process.

      default_printer  -  Default printer destination
      ---------------
       Value should be the name of a printer defined in the prtdef file.
       If a user spools a file but doesn't specify a destination (by
       class, name, or printer number), this value is used as the 
       destination for that job.


    The following is an example of the "ilpdef" file:

	    operators=jockc,gsl,foo
	    default_printer=lp0

    In this example, users jockc, gsl, and foo would have operator
    privelege. (Note that the superuser also has operator privelege).
    NOTE: The default printer destination is lp0.


3.2.3 PRTDEF

    The file /usr/spool/iprint/prtdef describes the printers being used
    by the Print Queue.  The file layout consists of a series of printer
    entries.  The layout of printer entry consists of a name followed by
    a colon, followed by information about that printer in the form of
    one or more 'name=value' fields.

    The possible  field names and their values are as follows:

      lp  -  Printer path
      --   
       Value is a Unix pathname of the lp device, or a quoted string
       containing a Unix pipeline.   Use of the quoted string form
       is described below under the type field.  

       *** You must not specify two or more printers with the same 
           device.  If you do, you will get jobs printed on
           top of each other.  

      class  -  Default classes
      -----
       Value is a list of uppercase letters.  This is the set
       of classes to be supported by the printer when the idaemon
       sceduler starts up.  Changing this value in the prtdef file
       while the idaemon is running will not affect the printer.
       The changes will only be seen after idaemon is shut down
       and started again.  (To change the classes for a printer, 
       do it from the ilpman printer management screen.  )


      baud   -  Baud rate
      ----
       Value is either 300, 1200, 2400, 4800, 9600, 19200, or 38400.  
       Specifies the baud rate of the printer.  (The printer baud
       rate is generally controlled by DIP switches on the printer.)

      databits -  Data Bits
      --------
       Value is either 7 or 8.  Specifies the number of data bits
       per character for serial printers.

      stopbits -  Stop Bits
      --------
       Value is either 1 or 2.  Specifies the number of stop bits
       per character for serial printers.

      parity - Parity
      ------
       Value is either none, even, or odd. Specifies the parity setting for 
       serial printers.

      form   -  Default form
      ----
       Value is the name of a form defined in the formdef file.
       This specifies the default form for the printer.  If a user
       requests a job to be printed but does not specify any form, 
       or if an unknown form is specified, the printer's default form
       will be used for that job.  If a printer does not have this field 
       specified, that printer will use as its default form the
       first form specified in the formdef file.

      pnum  -  Printer Number
      ----
       Value is a non-zero positive number.  
       Specifying a printer number here allows that printer to be 
       requested by its number.   This is most useful when printing 
       from WISP converted software.  Consult the WISP manual for information
       on specifying a printer by its number.

      model  -  Printer Model
      -----
       Value is a word.  The model specified is assigned to the
       printer.  This model is used by the spooler to determine
       how to initialize the printer, and what filter to
       use for the printer.  Init and filter strings are described 
       below in the discussion about the formdef file.

     type  -  Printer Type
     ----
       Value is either the word "device" or the word "program".
       If type is not specified, the printer is assumed to be
       a device.  If the lp (above) is given as a quoted Unix
       command pipeline, the type=program must be specified.
       The command pipeline will be run, receiving the contents
       of the print file as its standard input.  Any macros
       found in the command pipeline will be expanded (as 
       described below) before the pipeline is run.

    The following is an example of a prtdef file:

 	      lp0:
        	     lp=/dev/tty10
           	     class=ABCDE
     	             baud=2400
                     databits=7
                     parity=even
                     stopbits=1
         	     form=001
      	             pnum=2
        	     model=hplaser

 	      network:
            	     lp="netcopy -f $n -u $u"
        	     type=program

    In this example, printer "lp0" uses device /dev/tty10 at 2400 
    baud.  Default classes are ABCDE (in that priority), and the
    default form type is 001.  The model name is hplaser.

    The printer "network" is not hooked physically to a real 
    printer, but is actually a Unix command pipeline.  Before the
    pipeline is run, idaemon expands any macro (see section 0.4)
    it finds in the command string.  The macro expansion is 
    done according to the following rules:

        $n - The full path of the file.
        $u - The user who submitted the job.
        $l - The number of lines per page for the mounted form.

    In the example, if user root printed a file called
    ".profile" to this printer, the actual command used would be
    "netcopy -f .profile -u root".  Since the program receives
    the contents of the print file as its standard input, it
    does not know the name of the file or user who submitted it;
    for this reason it is often desirable to include that
    information as an argument to the program, as in this example.

    Note that the program specified must be executable (executable
    bit set), and should reside in /usr/bin (although anywhere on the
    "root" user's path would work).  The program's standard error output
    will be captured in the directory /usr/spool/iprint/pstatus in a file
    whose name is the same as the printer's name.  For example, errors
    from the program "netcopy" will go into a file called
    /usr/spool/iprint/pstatus/network.  If you are having trouble
    getting your type=program printer to work, check its status file
    for errors.

    This type=program feature is useful for printing to LAN (Local
    Area Network) devices or remote idaemons, but can be used in 
    many other ways.


3.2.4 FORMDEF

    The file /usr/spool/iprint/formdef describes the various 
    forms recognized by the spooler.  Each form has a 1-8 character name
    (3 digit Wang style names are OK).  The format of the formdef file is
    similar to that of the prtdef file.  Form entries consist of the name
    followed by a colon.  Form characteristics are specified in
    'name=value' fields.

    The possible  field names and their values are as follows:

     lpp  -  Lines Per Page
     ---
       Value should be a number.  Specifies lines per page
       for a given form.  Used in computing page breaks.

     init  or  init(model)  -  Initialization Sequence
     ----      -----------
       Value is either a quoted string, or a word.  
       If it is a quoted string, the contents of the string 
       are sent to the printer before the job is printed.
       If it is a word, the word is used as the name of 
       a file in the /usr/spool/iprint/init directory.  The
       exact contents of that file are sent to the printer.
       This feature is useful for printers which require 
       long init strings.  If you specify
       the init sequence in this way, you must provide 
       the init file for the printer, and copy it to /usr/spool/iprint/init/.

       The init sequences are used to set printer characteristics
       such as character pitch, landscape mode, font selection,
       etc.
   
       You will need to consult your printer manual for 
       the proper sequence to put the printer into the
       desired mode.

       If the printer init information is specified in the
       formdef file as a quoted string, the following
       translations are done:

           \E      - ESC
           ^@ - ^Z - appropriate control character
           \xxx    - character whose octal value is xxx


       Notice that you can specify a different init string for each 
       model of printer.  The (optional) name in parentheses 
       corresponds to a model type for a given printer defined 
       in prtdef.  Note:  Do not use the printer's name here;
       Use its model as specified in the model=XXXXXX field.

     filter or filter(model)  -  Filter Program
     ------    -------------
       Value is a quoted string containing a Unix command pipeline.
       The filter command is a command pipeline through which
       the queued file is passed before being sent to the
       printer device or program.  It must be quoted.  As with
       printer programs (see section 3.2.3 above), macros are
       expanded before the filter pipeline is run:

        $n - The name of the file.
        $u - The user who submitted the job.
        $l - The number of lines per page for the mounted form.

       The filter command receives the printfile as standard
       input, and output from the filter command is sent
       directly to the printer device or program. 

       Notice that you can specify a different filter for each 
       model of printer.  The (optional) name in parentheses 
       corresponds to a model type for a given printer defined 
       in prtdef.  Note:  Do not use the printer's name here;
       Use its model as specified in the model=XXXXXX field.

     stock  -   Paper Stock
     -----
       Value is a quoted string containing a word.
       The stock type refers to the type of paper used for
       that form.  When a printer needs to mount a new form,
       if the stock type is the same, it will mount the form
       automatically.  If the stock type is different, the
       user will be prompted (from the printer management screen)
       to change it.  Make sure forms that use the same type 
       of paper have matching values for this field.

     binary  -  Binary Form
     ------
       The binary keyword does not take a value.
       To print files which have nonprintable data in them,
       or files which do not have linefeeds between records,
       you should specify "binary" in a form's definition.  Make
       sure that if you are trying to print binary files that
       the class your are using does not specify a banner
       page or formfeeds to be printed.
 
    The following is an example of a formdef file:

       l8c18:
            lpp=88
            init=generic
            init(LA324)="\E[13w\E[2z"
            filter="pr -l$l -h '  file: $n    user: $u    '"
            stock="8x11"

       bin:
            init(hp2000d)=hp2000d
            binary
            stock="any"


    Form l8c18 would be used for printing files containing 
    normal text.  Printers with model=LA324 would receive
    the init string "ESC (hex 1b) [13w ESC [2z".  Any other
    printer model would receive the contents of the file 
    /usr/spool/iprint/init/generic as init information.
    The program pr would be used as filter.  Note the use
    of $l, $n, and $u, which are substituted before running
    the command.  If user root spooled a file called ".profile" 
    using this form, the filter used would be (after
    substitution):

       "pr -l88 -h ' file: .profile user: root '"  

    Consult the standard Unix man page for more information 
    on the pr program.

    Form "bin" would be used for printing files containing
    binary data (eg, a laserjet raster graphics file); For
    any printer that had model=hp2000d in its printdef
    entry, the contents of the file
    /usr/spool/iprint/init/hp2000d would be sent to the
    printer to initialize it before each job to be
    printed.  Printers without model defined or with a
    different model would receive no init information.



3.2.5 CLASSDEF

    The file /usr/spool/iprint/classdef describes the various 
    classes recognized by the spooler.

    The class information consists of a class letter and colon,
    followed by 'name=value' fields.  

    The possible  field names and their values are as follows:

     banner   -  Print Banner Page
     ------
       Value should be "yes" or "no".  Controls printing of the banner 
       page for jobs of that class.

     ff   -  Form Feed
     --
       Value should either "before", "after", "both", or "neither".
       Controls printing of formfeed before and/or after the job.

    Note that a formfeed is always inserted between a job's
    banner page and actual print data.
                                 
    The following example illustates a classdef file:

       A:
            banner=yes
            ff=after
   
       B:  
            banner=no
            ff=neither

3.3 Installation steps.
    You should be logged in as "root" to perform the installation.

3.3.1 Create the directory /usr/spool/iprint.  

    This is where the Print Queue will look for configuration files 
    and write its work files.  Use the following command:

	# mkdir /usr/spool/iprint

3.3.2 Create the configuration files ilpdef, prtdef, formdef, and
    classdef.  

    Enter the appropriate configuration information into these
    files as described in the above sections.  After creating
    these files, you can run idaemon.  If there were any errors
    in any of the files, they will be reported in the errs file.

    If you make changes to any of these files while idaemon is
    running, it is not necessary to stop and start idaemon.
    Idaemon will automatically reread any configuration file
    which is modified.

3.3.3 Create a user named "ilp".

    This step is optional.  It is only needed if you wish to use
    the ilpsrv and ilpremote programs described in appendix B.
    Use your standard procedure (it varies from system to
    system) for creating this user.  Then assign ownership of
    /usr/spool/iprint and all files in it to that user.  You can
    use the following command for this:

	# find /usr/spool/iprint -print | xargs chown ilp


3.3.4 Move programs to run locations.

    You can either run the Print Queue programs from the WISP
    distribution bin/ directory, or copy them to a standard Unix
    command directory.  If you wish to do the latter, copy idaemon
    and ishut to /usr/lib and copy ilp and ilpman to /usr/bin
    using the following commands:

	# cp idaemon ishut /usr/lib
	# cp ilpman ilp /usr/bin

3.3.5 Set ownership and permissions.

    Both idaemon and ishut must run setuid root.  This means that they must
    be owned by root, and must have their setuid bits set.  To do this,
    use the following commands (you must be root to do this):

	# chown root idaemon ishut
	# chmod u+s idaemon ishut
	# chmod a+rx idaemon ishut
	# chmod a-w idaemon ishut

3.3.6 Run idaemon.

    Use the following command to start the idaemon process:

	# /usr/lib/idaemon

3.3.7 Check the "errs" file.

    If there were any problems with the configuration, errors may be
    generated in the "errs" file.  Examine the file for any errors.

3.3.8 Edit the WISP OPTIONS file.

    Edit the WISP runtime OPTIONS file in $WISPCONFIG, and insert (or
    uncomment) the line "IDSIPRINTON" to enable usage of the Print Queue
    by WISP converted COBOL programs.



3.4 Additional installation instructions.

    If you need to relink you COBOL programs or runtime, you may need to
    copy libilp.a to /usr/lib.  Look at the build procedure you are using
    to determine where it expects libilp.a to be, and copy it there.

    If you are using a printer connected to a LAN server or terminal
    server, you will need to determine how to "attach" or "map" the server
    port to a local Unix tty.  This will vary from system to system.  You
    will need to know the name of the terminal server device, the name of
    the port, and the path of a local tty special file to map to.  With
    this information, mapping the port is usually accomplished by running
    a LAN control program and specifying this information.  On Ultrix, the
    name of this program is lcp (LAT Control Program).  An example of how
    to use lcp is given below:

	# lcp -h /dev/tty09:P4K0000C9006EFC:PORT_10

    After the -h flag, the path of the tty, name of the server, and
    name of the port are all specified, separated by colons.  
    You may verify this by using the following command:

	# lcp -p /dev/tty09

    This will report any current mapping for the tty path specified.




APPENDICES

A  Troubleshooting

    If you are having trouble with the Print Queue, always check the 
    "errs" file first.  The idaemon process writes all error messages
    to that file.  If you cannot figure out why you are having a 
    certain problem, try shutting it down (ishut) and starting it again.

A.1 The Printer Management screen (from ilpman) does not list
    all the printers defined in the prtdef file.

    Consult the errs file to see if a syntax error was encountered
    in the prtdef file.  If a syntax error occurred somewhere in the
    file, idaemon will stop loading the file at the point of the error.
    Printers defined below the error in the file will not appear
    to be configured.

A.2 More that one job prints simultaneously on the same printer.

    Make sure you do not have multiple printers using the same Unix
    print device.  idaemon will write a warning message into the errs
    file if it detects this situation, but it will not prevent you
    from mapping several printers to the same device.

A.3 Printout contains garbage.

    Make sure that your baud rate and other communications parameters
    are set properly to match the printer.  Parity errors generally 
    appear as random garbage characters scattered through the printout.


B  ILPSRV and ILPREMOTE

    Ilpsrv and ilpremote are two shell scripts which are provided
    as an example of the use of printers that are type program.
    Ilpsrv acts as a print server, and ilpremote acts as a client to it.

    They allow a form of network printing between idaemons on networked 
    systems.  Ilpsrv runs as a background process on the system
    which will actually be physically printing the jobs, watching for
    files to arrive from other systems.  The files are sent by
    an ilpremote running on the remote system.  When a file arrives,
    ilpsrv submits it to the local idaemon for printing.

B.1 To use ilpsrv and ilpremote, after running idaemon.  Run ilpsrv in
    the background.  You should be the super user when you run ilpsrv.
    Change directory to the location of your ilpsrv script, and use the
    following command:

	# nohup ./iplsrv &

    NOTE: If you did not create the ilp user in step 3 of the installation,
    you must do so now. The ilp account must be accessible to other
    machines in your network.  There are several ways to accomplish
    this.  One way is to make sure that the ilp user has no password.

    Another way is to put a list of trusted users (and their machine
    names) in the .rhosts file in the home directory of the ilp
    user.  The final way is to insert the name of the
    remote system into the /etc/hosts.equiv file to make it a
    trusted host.  (See your Unix documentation on the hosts.equiv
    file for information on trusted hosts)

    The reason the ilp account must be accessible over your network
    is because ilpremote uses the rcp and rsh commands to do its
    work. For more information about rcp and rsh permissions
    with regard to ilpremote, consult the Unix "man pages" for rcp and 
    rsh on your system.  

    Ilpsrv watches the directory /usr/spool/iprint/auto, and prints
    any files it finds there.  The class and form it uses are 
    modifiable. Just edit ilpsrv and change the appropriate values,
    which are defined at the top of the script.

    Now you should be able to run ilpremote on another system, provided
    the two systems are connected via TCP/IP and the rcp command is 
    available.  

B.2 Usage of ilpremote is as follows:

	$ ilpremote hostname filename <filename
	$ cat filename | ilpremote hostname filename

    In the above usage, substitute the target TCP/IP hostname where 
    "hostname" appears, and the filename of the printfile where "filename"
    appears.

    Examples of using ilpremote to print a file named ".profile" on a 
    system named "zaphod" are given below:

	$ ilpremote zaphod .profile <.profile
    --or--
	$ cat .profile | ilpremote zaphod .profile

    Additionally, you can create a printer whose lp is 
    "ilpremote machine $n", where "machine" is the desired remote machine.
    A complete example of the appropriate definition (which would go in
    the prtdef file) is a follows:

	remote:
	     lp="ilpremote zaphod $n"
	     class=X
	     type=program    

    Now, any job printed to "remote" actually gets sent to zaphod to
    be printed by the ilpsrv process running on zaphod.
    More information about the use of type=program (including the meaning of
    the "$n") in the prtdef file, see the discussion of the prtdef 
    in section 3.1.2.


IDSI PRINT QUEUE RELEASE NOTES                     10/27/93

>> As of WISP 3.3 the library libilp.a is no longer used.  
>> Therefor it is no longer necessary to relink your WISP 
>> runtime when you receive a new print queue 
>> distribution.

>> Make sure that the programs ilp and ilpman are on
>> your $PATH.  WISPed programs now execute these programs
>> when the users wishes to print a file or manage the
>> queue.

>> You must add the following line to your ilpdef file:

    default_mode=wang

>> This insures that ilpman will run in the desired 'wang-like' 
>> mode. (see 'Features' section for version 3.00)

NOTES:

   1. This release of the Print Queue (V3.01) is incom-
      patible with Print Queue versions prior to V2.20.
      You must make sure that all of your users are run-
      ning the latest version of the Print Queue software.

      This release of the Print Queue (V3.01) is incom-
      patible with versions of WISP prior to V3.2x11.

*** *** *** *** *** *** *** *** *** *** *** *** *** *** ***

   2. If you are upgrading from version 2.18 or prior
      to version 3.00, existing queue data (spooled
      files, etc.) will be lost when version 3.00 is
      installed.  If you are upgrading from version
      2.20 or later, queue data will not be lost.

*** *** *** *** *** *** *** *** *** *** *** *** *** *** ***

   3. IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT

      If you are running AIX version 3.2.0 through 3.2.5,
      and any Print Queue version PRIOR TO V2.26,
      you must set the following shell variable just before
      running idaemon:

             # MALLOCTYPE=3.1
             # export MALLOCTYPE

      This should fix up any idaemon crash problems under
      AIX 3.2 for the IBM RS6000.  This flag is not necessary
      with Print Queue Version 2.26 or later.

------------------------------------------------------

    Print Queue Release notes for V3.01

    BUGS FIXED

    - when printing a range of pages, formfeeds were 
      ignored: page counting was only being based on
      line counts.  This was fixed.

    - when selecting 'other' information from the 
      management screen, the ilpman program would
      sometimes abort.  This was fixed.

------------------------------------------------------

    Print Queue Release notes for V3.00

    BUGS FIXED

    - when changing queue or printer items ilpman would
      sometimes momentarily revert back to old data
      if the master process was slow about updating the
      shared memory area.  This was fixed.

    - moving an item in the queue sometimes produced 
      unpredictable results.

    - print files occasionally lost from the queue or
      printers stuck on "Printing" mode indefinitely 
      was fixed.

    - occasional runaway or crashed idaemon when a job's
      file is deleted from the disk by another process

    - printing a directory with mode=delete no longer
      deletes the directory

    - stopping a print job, slave process for that printer
      using too much CPU.. fixed this

    - if a job was printed using -d<dest> and the user
      changes dest to spaces from ilpman, job would never
      print.. fixed.
      
    - if user attempted to change the form on a printer
      with wrong form status by Modifying the printer and
      typing in the new form, it didn't work.  fixed

    - ilpman occasionally not updating it's queue info
      for long periods of time (if queue activity is very
      light).. fixed to update properly

    - printers sometimes broken on AIX after idaemon 
      prints to them. This was due to incorrect handling
      of the printer devices by idaemon.  This was fixed.


    NEW FEATURES

    - ilpman will reconnect with idaemon if it is shut
      down and comes back up.

    - user can scroll info back and forth to see
      enter file name or printer command/device using
      [ and ] keys.

    - user can edit printer command or device name.

    - ilp copy before print mode produces unique filenames

    - idaemon prints configuration errors at startup and
      in log file.  More information is given about the 
      location of syntax errors in the config files.

    - using the word ALL now in  place of 99999 in page ranges.

    - on systems which support it, printer name is now
      shown in 'ps' command info for each slave process.

    - ilpman runs in two modes, 'normal' and 'wang'.  The
      default mode is 'normal', which maps function keys
      slightly differently than past versions.  To run
      ilpman in 'wang' mode, specify the -w flag on the 
      command line, or add the following line to ilpdef:
      
           default_mode=wang

   
------------------------------------------------------

    Print Queue Release notes for V2.27

    BUGS FIXED

    - Change of forms behavior fixed.

    - ILP Copy before print fixed.

------------------------------------------------------

    Print Queue Release notes for V2.26

    BUGS FIXED

    - MALLOCTYPE flag no longer needed.

    - Print Queue performance improved, CPU usage has been
      reduced. 

------------------------------------------------------

    Print Queue Release notes for V2.25

    BUGS FIXED

    - Occasional idaemon shutdown due to semaphore failure
      fixed.

    NEW FEATURES

    - Banner and Disposition field are underlined when
      editing queue items.  This makes it more obvious
      that they are modifiable.

    - Multiple group and effective user id permissions are
      determined correctly.

    - The limit of 32 printers has been increased to 1024.

------------------------------------------------------

    Print Queue Release notes for V2.24

    BUGS FIXED

    - Occasional idaemon shutdown behavior exhibited
      in V2.23 has been fixed.

------------------------------------------------------

    Print Queue Release notes for V2.23

    BUGS FIXED

    - Overall performance has been improved.  CPU impact
      has been reduced.

    - Idaemon behavior when heavily loaded has been improved.
      In earlier releases the idaemon master process would
      sometimes get confused when heavily loaded.
      

------------------------------------------------------

    Print Queue Release notes for V2.21

    BUGS FIXED

    - Occasionally the queue and/or printer list would
      blank out.  Also, sometimes a message would be printed 
      saying an incompatible version of the idaemon was running.
      These two were related and have been fixed.

    - Occasionally, the idaemon would lose client requests
      (this would usually happen when queuing several files
      at once, ie, "ilp -dlp0 *.c").  This has been fixed.

    - Error handling and reporting when using printers
      that are "type=program" has been improved slightly.

    NEW FEATURES

    - Print Queue performance should be noticeably better
      as of release 2.21.  

    - A new version of ilpremote is included which makes
      use of the new macros that were made available as
      of version 2.17.  This ilpremote does not require
      an ilpsrv process on the remote system.  It passes
      the form name and printer name to the remote system.
      Instructions on how to use the new ilpremote are 
      found at the beginning of ilpremote itself.  Edit the
      file or print it to see these instructions.

------------------------------------------------------

    Print Queue Release notes for V2.20

    BUGS FIXED

    - Under AIX 3.2 idaemon would randomly shut down
      with a signal 11 error message in the errs file.  This
      has been fixed.

    NEW FEATURES

    - Ilp now supports copy of file before printing.  This
      is the default behavior if internet addressing is
      used.  

      This allows ilp and ilpman clients to correctly
      interact with an idaemon running on a server 
      machine (in an HP Cluster).

      Two flags were added to ilp:

          -c    force file copy when not using Internet
                addressing.
          -N    override file copy when using Internet 
                addressing.

    - A new field was added to the classdef file.  It 
      allows the user to specify that a formfeed should
      be printed between copies of a multiple copy 
      print job.  To enable this functionality, insert
      the following line into the definition for the 
      appropriate class:

            ff=between

      If you already have a line for formfeed behavior,
      leave it in the definition.  Multiple "ff=" lines
      are allowed.

    - If the user does not assign a class to a particular
      print job, that job will be given a class when it
      is printed.  The class given to the job is the first 
      class in the printer's class list.
    
------------------------------------------------------


    Print Queue Release notes for V2.18
    
    BUGS FIXED

    - Printer type=program status now handled better.
      If the program exits with a non zero status code,
      idaemon will flag the printer with an error 
      status.

    - All/mine behavior was sometimes unpredictable.

    NEW FEATURES

    - Support for Internet addressing

      To use this functionality, add the following 
      line to the ilpdef file on the server machine
      (the machine on which idaemon will run):

      ip_port=<number>

      <number> must be a number larger than 5000.  It
      does not matter what number is used, as long as
      it does not conflict with any other TCP/IP processes
      on the system.  Look in the /etc/services file to
      see which ports are already in use.

    - Maximum length for printer and filter commands 
      has been changed to 1024

--------------------------------------------------------

    Print Queue Release notes for V2.17
    
    BUGS FIXED
    
    - Move item in queue now works properly.  
    
    - Intermittent idaemon shutdown fixed
    
    - Printer handshaking is done properly
    
    NEW FEATURES
    
    - New macros added for filter strings and
      printer type=program strings.  Macros added:
    
      $filename - name (without full path) of file
      $fullpath - full path of file
      $pagelen  - pagelen in lines of current form 
      $userid   - name of user who submitted job
      $username -     "    "     "     "
      $usernid  - numeric id of user who submitted job
      $printer  - name of printer
      $form     - name of form for this job
      $class    - class of this job
      $copies   - copies for this job
      $stpage   - start page number
      $endpage  - end page number
      
      $n, $u, and $l are still the same.
    
    - Ilpman now asks for confirmation on PF8 Delete or
      PF12 remove

