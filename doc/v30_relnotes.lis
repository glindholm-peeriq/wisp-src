							   v30_relnotes.lis


	RELEASE NOTES FOR WISP VERSION 3.0
	==================================

	- IDSI introduces WISP to MS-DOS using Micro Focus COBOL/2.
	  The MS-DOS version of WISP is currently in field test and
	  will be shipping shortly.  For further info please contact
	  IDSI.

	- WISP 3.0 contains support for AIX VS COBOL Compiler/6000 for
	  the IBM RS6000, and for Micro Focus COBOL on other UNIX platforms.

	- Support for ACUCOBOL 2.0 with the Vision 3 file system has been 
	  added for UNIX.

	- The IDSI Print Queue for UNIX is released with WISP 3.0.
	  The components are:
		ilp	- the "lp" command to spool a file for printing.
		ilpman	- the full-screen queue manager.
		idaemon	- the ilp daemon (background process).
		ishut	- the command to shutdown idaemon.

	  Features include:
		- Full screen print queue manager.
		- Multiple printer support.
		- Forms and Class control.
		- Displaying of queue jobs.
		- Stopping and starting of printing jobs.
		- Hold, release and requeuing control.
		- Copies, banner and formfeed control.

	  The IDSI Print Queue is fully described in a separate document.

	  NOTE: The default printing method is to issue "lp" commands.
		To use the IDSI Print Queue you must install it and
		set IDSIPRINTON in the OPTIONS file.

	- The Enhanced Development Environment (EDE) is supported with
	  this release. EDE is a set of tools and utilities that
	  allow you to build a "pull-down" and "pop-up" menuing interface
	  to your software which includes a calculator, calendar, notepad,
	  day-planner and clock. EDE is available through IDSI as a separate
	  product.

	- The Wang utilities CONTROL, REPORT, INQUIRE and DATENTRY have
	  been ported to run under ACUCOBOL and are now available through
	  IDSI as separate products.

	- VMS: The WISP.HLP and WISP.CLD files have been updated and must
	  be re-installed.

	- WISP now generates compressed screens as the default.
	  A new flag has been added -Z which is equivalent to the
	  VMS switch /NOCOMPRESS.

	- WISP now accepts lowercase COBOL.

	- WISP was generating incorrect code if the keyword CHARACTERS
	  was missing from the RECORD clause in the FD.  Additionally
	  WISP was incorrectly handling FDs that contained multiple 
	  clauses on the same line.  This has all been fixed.

	- WISP now accepts a path with the -I flag. The path is written
	  as a series of directories separated by colons. (-I dir:dir:dir )

	- WISP now allows the user to specify a WORDFILE which contains
	  a list of reserved words that were used as data names on the
	  Wang VS.  To specify a wordfile use the "-W wordfile" flag or
	  the "/WORD_FILE=wordfile" switch on VMS.  When a WORDFILE is
	  used it OVERRIDES the internal list of reserved word (See
	  Chapter 2 of the WISP manual -- "COBOL Reserved Words".)
	  The shipping kit includes a file "words.def" which is a wordfile
	  that contains the same words as the internal list of reserved 
	  words.

	- WISP has been enhanced to better handle multiple statements
	  on the same line.  It previously would "miss" the second
	  statement if the first statement required no special processing.

	- WISP now allows users to specify an OPTIONAL clause on a
	  SELECT statement.

	- WISP previously had a small limit for the number of 2 byte
	  user defined figurative constants that it could handle, this
	  has been fixed.

	- WISP was occasionally generating "LINE TOO LONG" messages
	  on comment lines. This has been corrected.

	- WISP was generating incorrect code for DISPLAY AND READ
	  statements if there was an ON PFKEY clause with NO imperative
	  statement. I.e. "DISPLAY AND READ SCN1 ON CRT ON PFKEY 16."
	  WISP was treating the next statement as the imperative for
	  the ON PFKEY clause.  This has been corrected.

	- WISP now generates improved, cleaner OPEN logic.  The logic
	  that was performing the bit sets and clears before an OPEN
	  has been removed.  WISP now generates a call to wfopen3()
	  which contain an additional argument that describes the type
	  of OPEN being performed.  Previously WISPed code will continue
	  to work as the older wfopen2() and wfopen() are still supported.

	- WISP now will only insert the MOVE WITH CONVERSION paragraphs
	  when a MOVE WITH CONVERSION is used.  It used to alway insert.

	- WISP now generates meaningful FAC names in the conversion
	  of DISPLAY-WS screens.

	- The version numbers in the generated copybook names have been
	  changed. When you WISP you will see new ".cpy" files generated.

	- MESSAGE vssub was not setting return code to 12 when it
	  was interrupted by a key press. This is fixed.

	- Added two new options to the runtime OPTIONS file.

		MAXPRBPAGES  40		(Valid values 10-200)
		MAXPRBPARMS  128	(Valid values 32-512)

	  These are used by PUTPARM/GETPARM and the shared memory manager
	  to determine the dimensions of shared memory to use for the
	  storing of Parameter Reference Blocks (PRBs) or putparms.
	  The value of MAXPRBPAGES (default 40) is the number of 512 byte 
	  pages to allocate.  The value of MAXPRBPARMS (default 128) is 
	  the maximum number of PRBs that can stored.  

	  WARNING: Never change these values while programs are running.
		   On UNIX you must run wsysinit after these are changed.
		   On VMS you must delete the .GBL files.

	  NOTE:	   The "ratio" of parms to pages should be keep at 
		   approximately 3:1.  If you change this ratio you will
		   get wasted memory.  Example: If you change pages to 10
		   and leave parms at 128 the parm table will use up most
		   of the memory and you may only be able to store 10-15
		   putparms before you run out of memory.

	- Embedded FACs in fields that started in column 1 were not
	  correctly returning the data entered. This has been fixed.

	- UNIX: The WISPSORT routine was using an incorrect file creation
	  mask.  This has been fixed.

	- DISPLAY utility was issuing a second Initial GETPARM if there
	  was an error in opening the file. These was incorrect. It now
	  correctly issues a Respecify GETPARM if there was an error.

	- BACKWARDS REFERENCING of PUTPARMs is now supported. When a 
	  labeled putparm is used it is no longer deleted, instead it
	  is kept around so others can extract its values.  When a COBOL
	  OPEN is performed that uses a labeled putparm, the actual 
	  values for FILE, LIBRARY and VOLUME are update or added to the
	  putparm.

	- WPUTPARM utility has been enhanced with 3 new functions

		GET	get the value of a labeled putparm
		DUMP	dump the shared memory to a file
		ISHOW	show the internals

	  The GET function is for Backward Referencing. DUMP is a 
	  debugging aid.  ISHOW is a debugging aid that can be used
	  to assist you in selected values for MAXPRBPAGES and MAXPRBPARMS.

	- Maximum length of ACP buffer has been increased from 255 bytes
	  to 2048 bytes.

	- Enhanced the ERROR GETPARM to make it easier to identify the
	  error. Added the COBOL filename to the error message. Changed
	  the PRNAME to be FILESTAT when caused by a file status code.

	- The MOVE WITH CONVERSION logic was treating embedded dashes ("-")
	  as the sign instead of giving an error. This has been corrected.

	- WSXIO vssub was failing to timeout on a wait, also if the wait 
	  time was less then 1 second it would not wait. These are now
	  working correctly.

	- The WISP LIBRARY version has been changed to 30 (was 20) this
	  is to reflect changes to the OPEN logic and SCREEN logic.
	  We will continue to support version 20 so you will only need
	  to update if you re-WISP with version 3 of WISP.

	- Changed the behaviour of WISPSORT, if no sortkeys are given
	  it will simply unload the input file to an unsorted flat file.

	- DISPLAY utility was incorrectly handling formfeed characters
	  when they occured in the middle of the line.

	- UNIX: If PFKEY 16 is pressed from a FILE GETPARM to exit the 
	  program the exit code will be set to 16.

	- UNIX: You can now make a program behave like it is in background
	  without using SUBMIT.  This is done by setting the shell variable
	  WISPBACKGRD=yes (it doesn't actually check for "yes", any value
	  is allowed.) then doing an "export WISPBACKGRD". This will
	  prevent the program from doing any screen I/O and will cause
	  the program to abort on attempted screen I/O.

		Example: 

			$ WISPBACKGRD=yes
			$ export WISPBACKGRD
			$ wrun SAMPLE &
			$ unset WISPBACKGRD

	- New utility DISPRINT emulates the Wang VS utility. It is written
	  in Wang VS COBOL (.wcb) so it can be WISPed and compiled for
	  any WISP supported environment.

	- The VSX utility has been improved to skip over unrecognized 
	  filetypes (instead of aborting.)

	- VCAPKEYS is a new UNIX utility that assists you in creating
	  videocap files. It prompts you to press keys and records
	  the escape sequence in a file that can then be combined with
	  the videocap terminal "capabilites" to form a videocap file.

	- The WRUN frontend utility now saves the current stty state of
	  the screen and restores it on program termination. This should
	  prevent the terminal from ever being left in "raw" mode as long
	  as wrun is used.

	- UNIX: The videocap file std.def has been changed to stddef
	  for compatiblity with other systems (std.def will still be
	  supported.)

	- UNIX: New utility WPFKEY when run will wait for the user to
	  press a PF key and return the value of the key as a number.

		$ echo 'Press PFKEY to make selection'
		$ keypressed=`wpfkey`
		$ if [ $keypressed = 16 ]
		> then ......

	- New OPTION file option ALLSTATUSKEYS, this option causes WISP
	  to pass through all file status codes to the user coded 
	  declaratives. Normally WISP will intercept file status codes
	  that would not have occured on the Wang or represent "logic errors"
	  and put up an error getparm even if user coded declaratives exist.

	- PERSONALITY files were storing the actual pseudo blank 
	  character, this was causing problems if the user used multiple
	  terminal types. This has been changed, the pseudo blank
	  selection character is now stored instead.  Additionally
	  for standardization, the selection characters have been
	  changed to "B1234" for all platforms. The 'B' is for BLANK
	  and the '1' - '4' correspond to the 4 characters in the
	  videocap string "pseudo_blanks".

	- The DISPLAY utility was occasionally highlighting random lines
	  in the file. This has beed corrected.

	- The printing of psuedo blanks on a screen print has been
	  improved, it occasionally was printing garbage characters.

	- The HELP screen has been modified to look like the Wang Command
	  Processor. When a WUSAGE DISPLAY is issued or the help key is
	  pressed, the new Command Processor shell will be displayed.
	  There is also a new command:  WUSAGE SHELL which will also 
	  initiate the shell.

	- The ability to RUN a program from the Command Processor Shell 
	  (WUSAGE SHELL) will give you a Wang like interface to your system.
 	  This is part of the new "help" screen where you can run any 
	  program and then return back to the Command Processor Shell.  

	- The option to CANCEL Processing has been added to the Command
	  Processor Shell when activated from within a running program.
	  This option can be disabled by use of the wusage flag CANCEL.

	- The wusage flags that control the Command Processor options
	  have been renamed to correspond to the new look of the Command
	  Processor Shell.  (The previous flags are still supported.)
	  The flags can be set to Y or N to enable or disable the option.

		HELP		- Command Processor Shell
		SETFILE		- SET File Usage Constants
		SETPRINT	- SET Print Mode Defaults
		SETSUB		- SET Submit Procedure Defaults
		QUEUES/PRTQUE	- Manage QUEUES/PRINT QUEUE
		SYSTEM		- Manage SYSTEM
		DISPLAY		- Use DISPLAY utility
		UTILS		- GENERAL Utilities
		GOOD		- GOODIES Utilities
		TERMINAL	- Configure TERMINAL
		PSEUDO		- PSEUDO blank characteristics
		CURSOR		- CURSOR characteristics
		SCREEN		- SCREEN characteristics
		COMMANDS	- Enter COMMANDS
		SAVE		- SAVE environment
		PRINTSCR	- PRINT PROGRAM/COMMAND screen
		CANCEL		- CANCEL Processing

	  The Manage QUEUES/PRINT QUEUE option will appear if available.
	  The Manage SYSTEM option will envoke the System Administration
	  program if available. On the RS6000 SYSTEM runs SMIT.  The UTILS
	  option displays a menu for general utilities: DISPLAY, EDIT, 
	  DISPRINT, REPORT, INQUIRY, CONTROL and DATENTRY. Currently
	  DISPLAY and DISPRINT are available and in your WISP kit.  EDIT
	  will be available shortly.  The remaining utilities are add on 
	  products that can be purchased through IDSI.

	  The GOOD option will add the GOODIES utilities to the UTILITIES
	  menu. The GOODIES utilities are only available as an 
	  add on product called EDE (Extended Development Environment).
	  The utilities available are CLOCK, CALCULATOR, CALENDAR,
	  NOTEPAD, amd PUZZLE.

	  The Enter COMMANDS options will give you the ablity to enter
	  native commands.  On UNIX and MS-DOS this will start a shell,
	  on VMS this will allow you to enter DCL commands.



	RELEASE NOTES FOR WISP VERSION V3x (Version 3 prerelease)
	=========================================================

	- *** NOTE ***: There are three new VIDEOCAP entries that must
	  be defined in your videocap files. The videocap files that are
	  distributed with this release have them defined -- but if you
	  have created your own videocap files these entries need to be
	  included.
		SCREEN_NORMAL		- Normal screen background
		SCREEN_REVERSE		- Reversed screen background
		GRAPHSTR		- Graphics characters (13 chars)
	  Graphstr is 13 characters long and defines line drawing chars etc.
	  These characters are written in graphics mode.
	  The characters are: 
		 1 Vertical bar
		 2 Horizontal bar
		 3 Upper left corner
		 4 Upper right corner
		 5 Lower left corner
		 6 Lower right corner
		 7 Upper Tee
		 8 Lower Tee  
		 9 Left  Tee
		10 Right Tee
		11 Cross
		12 Left pointer
		13 Right pointer

	- WISP is now ported to the SUN SPARC Station.

	- When a CLOSE is performed on a print file it is spooled with the
	  form number that was in the usage constants at time of the OPEN.

	- The DISPLAY utility was double spacing when it saw carriage
	  return and line feed together; this has been fixed.

	- UNIX: The VSSUB FIND was giving unpredictable behavior when
	  it was reading a directory that had filenames greater than 
	  20 characters long; this has been corrected.

	- VMS: A call "LINK" to a .COM file was exiting with an incorrect
	  return code; this has been fixed.

	- VMS: If terminal device is not in TTMAP.DAT, or TTMAP.DAT does
	  not exist WISP will now set the device number to 0 instead of
	  giving an error message.

	- The VSSUB WSXIO now will return the AID character in IOSW.

	- Background jobs that attempt screen I/O will now have the
	  screen written to the WISP error log.

	- UNIX: The VSSUB FIND will no longer return a separate item
	  for .idx files. This should only affect LPI and AIX COBOLs as
	  these use CISAM files that create 2 files for an indexed file.
	  Previously FIND would find 2 items for every indexed file, now
	  it doesn't find the .idx part.

	- Fixed the VSSUBs BITUNPK and BITPACK; BITUNPK was writing the 
	  bits in reverse order, and BITPACK was reading the bits in reverse
	  order.

	- UNIX: The WISPSORT routine was performing character comparisons
	  using "char" type characters, this has been changed to use
	  "unsigned char" type characters. On some systems "char" is 
	  considered as a signed character, this resulted in 8-bit
	  characters being treated as negative values and the sort order
	  was incorrect.

	- UNIX: The LINK with CANCELEXIT was not working correctly if
	  there was a LINK to a shell script between the CANCELEXIT
	  and the LOGOFF. The intermediate shell script caused WISP
	  to lose track of the CANCELEXIT so a LOGOFF would not
	  be caught. This has been corrected.

	- The VSSUBS WSXIO and SCREEN were failing if called before the
	  first vwang() call; this has been fixed.

	- Two new vwang() functions have been added to allow reads and
	  writes with DISPLAY AND READ style pseudo-blank processing.
	  The new functions are WRITE_ALL_PB (11) and READ_ALL_PB (12).

	- UNIX: The READACP timeout logic has been corrected.

	- Fixed the default keyboard setting to be locked. It was set to
	  default to unlocked. If a READ of the workstation is done before
	  a WRITE it was erroneously stopping and waiting for input.

	- VMS: The VSSUBS FIND and SCRATCH were occasionally failing
	  to find the file; this has been fixed.

	- VSSUB WSXIO now allows arg5, the Order-Area-Length, to be optional.

	- UNIX: Added a new option to wrunconfig:
		COBOL=ACU	(default)	ACUCOBOL
		COBOL=AIX			AIX VS COBOL
	  This option tells wrun which cobol is in use and should be
	  added to your wrunconfig file.

	- UNIX: On a file GETPARM or an error GETPARM, if PF16 is pressed
	  to terminate the program, WISP will set the retcode = 16.

	- On the WISP HELP screen under "Terminal Attributes" there is now
	  an option for setting the default screen background.  This 
	  requires the videocap entries SCREEN_NORMAL and SCREEN_REVERSE.

	- The DISPLAY utility form-feed indicator has been changed to more
	  closely resemble the Wang's.  It was a "FF>----". It has been
	  changed to be a highlighted line.

	- UNIX: The VSSUB MESSAGE was not allowing different users to 
	  communicate with message if their default umask protections did not
	  allow writes. This has been corrected.

	- VMS: The VSSUB RENAME now does not allow a rename on a file
	  that is in use.

	- VMS: The VSSUB LINK will look first for a .COM and if not found
	  will then look for a .EXE. Originally LINK would look only for
	  a .COM; functionality was then added to look for an .EXE first.
	  This caused problems when there were files with both extensions
	  and the user was expecting LINK to select the .COM.

	- The WISP runtime error reporting routine now displays a reversed
	  error window instead of overwriting the top 2 lines on the 
	  screen.  It uses the box drawing characters in GRAPHSTR as
	  defined in your videocap file.

	- The VSSUB EXTRACT now supports the "P#" keyword which will
	  return the default printer number -- this does the same thing
	  as the keyword "PR".

	- On an OPEN with NORESPECIFY set in the SELECT statement WISP
	  was incorrectly intercepting certain file status codes and 
	  issuing an error GETPARM; this has been corrected so that no
	  file status codes will be intercepted on an OPEN if the program
	  includes DECLARATIVES for the file.

	- UNIX: Added support for PRMAP -- the printer number map for use
	  with constructing LP commands for printing.  The format is
	  identical to the FORMS file, a 3 character printer number 
	  followed by a character string to be inserted into the LP
	  command.  If a printer number is not found or the PRMAP file
	  is missing then nothing will be added to the LP command.

	- UNIX: The VSSUB READFDR will now recognize uppercase file and
	  library names. It will try all the 4 combinations of upper and
	  lower case names in the following order: 
		lib/file: lib/FILE: LIB/FILE: LIB/file

	- The VSSUB SCREEN was erroneously printing the contents of
	  protected fields; this has been corrected.

	- ACUCOBOL: An error GETPARM caused by a file status 34 was giving
	  an incorrect error message.  It was saying BOUNDARY VIOLATION; this
	  has been corrected to say DISK FULL.

	- There was an error introduced in 2.0f with embedded FACs. When
	  a modifiable field was created in the middle of a DISPLAY-WS
	  field the data was not being transferred back. This has been
	  corrected.

	- VMS: The symbol $W_RETURN_CODE was being set on a return from
	  LINK with the swapped value of RETURN-CODE this was incorrect
	  and has been fixed.

	- The translator now truncates the PROGRAM-ID at 8 characters.

	- WISP was writing bad copybook files when the /convert switch
	  was set. This is now corrected.

	- Filename extensions used by the translator have changed:
		OLD		NEW		Desrciption
		=========	=======		===========
		xxx_p.lib	xxx.dcl		Relocated declarative paras
		xxx_d.tmp	xxx.dtp		Temp declaratives file
		xxx_w.tmp	xxx.wrk		Temp work file

	- New WISP directives *$UNIX_CODE and *$UNIX_END have been added
	  which will include code when translated on UNIX for any COBOL.

	- UNIX: On an EXIT PROGRAM the RETURN-CODE was not being set
	  correctly because the call to setretcode() was inside a
	  conditional.  This has been corrected.

	- UNIX: The WISP-EXIT-PROGRAM and WISP-STOP-RUN paragraphs have
	  been simplified by replacing the calls to WEXITH, VEXIT and
	  ACUPARGS with a call to a single routine, WISPEXIT.

	- A new utility WSORT has been added.  This does an external file 
	  sort using SORTCALL on VMS and WISPSORT on UNIX. It accepts 
	  all parameters via GETPARMs so it can be used in a script.
	  It is very similar to the Wang VS utlity SORT, except it does 
	  not allow SELECT or MERGE logic.


