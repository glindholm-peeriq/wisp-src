


********************************************************************************
1	Header area
2 ------------------------------------------------------------------------------
3  row 0   |         |                  |    |                  |
4          |         |                  |    |                  |
5  col 0   |  col 1  |       col 2      |col3|       col 4      |    col 5
6          |         |                  |    |                  |
7          |         |                  |    |                  |
8          |         |                  |    |                  |
9          |         |                  |    |                  |
10         |         |                  |    |                  |
11         |         |                  |    |                  |
12         |         |                  |    |                  |
13         |         |                  |    |                  |
14         |         |                  |    |                  |
15         |         |                  |    |                  |
16         |         |                  |    |                  |
17         |         |                  |    |                  |
18         |         |                  |    |                  |
19         |         |                  |    |                  |
20         |         |                  |    |                  |
21------------------------------------------------------------------------------
22	Footer 
23
24
********************************************************************************

vlist(
	Function_code,		Is an unsigned long.
	list_id,		The ID of the list to build.
	item1,item2,...		Depend on the function.
     )

**** All parameters are passed as POINTERS. ****

There will never be more than 16 parameters passed, so you don't have to
use varargs, just accept function_code, list_id and 16 args (18 total args).


Function_code = 1;		Initialize a list. Clear internal structures.

vlist(	Function_code,		Unsigned long, Equal to 1
	list_id,		Unsigned long The ID of the list to build.
	rows,			Unsigned long, how many rows there will be.
	retcod			Unsigned long
				1 for created new list
				2 for cleared existing list.
     )



Function_code = 2;		Add Header Text.

vlist(
	Function_code,		Unsigned long, Equal to 2.
	list_id,		Unsigned long, The ID of the list to build.
	Num_items,		Unsigned long, number of text items to follow.
	Item_1,			Text item.
	Length_1,		Unsigned long, Length of item, '0' = null term.
	Item_2,			etc...
	Length_2...		Only allow a max of 4 Items.
	Retcod			Unsigned long. use 0 for success.
     )

Function_code = 3;		Add Footer Text.

vlist(
	Function_code,		Unsigned long, Equal to 3.
	list_id,		Unsigned long, the ID of the list to build.
	Num_items,		Unsigned long, number of text items to follow.
	Item_1,			Text item.
	Length_1,		Unsigned long, Length of item, '0' = null term.
	Item_2,			etc...
	Length_2...		Only allow a max of 4 Items.
	Retcod			Unsigned long. use 0 for success.
     )



Function Code = 4;		Add collumn to end of list.

vlist(
	Function_code,		Unsigned long, Equal to 4.
	list_id,		Unsigned long, The ID of the list to build.
	type,			Unsigned long, see note.
	width,			Unsigned long, Number of chars to display.
	Itemlist,		The array of items.
	length			Unsigned long, length in bytes of text item.
	Retcod			Unsigned long. use 0 for success.
     )

Notes:
	The arrays need to have the correct number of items as specified by
	the num_items in the function code 1 call to initialize the lists.

	Type value		Means
	----------		-----

	0			Unsigned short
	1			Signed short
	2			Unsigned long
	3			Signed long
	4			Text items
	5			Text item, column seperator. Itemlist is
				just a character string.

Function Code = 5;		Insert collumn into list.

vlist(
	Function_code,		Equal to 5.
	list_id,		The ID of the list to build.
	type,			Unsigned long, same as code=4
	width,			Number of text positions allowed to display.
	Itemlist,		The array of items.
	length			For text items, length in bytes of each item.
	column_number,		Unsigned long. Column to replace, zero-based.
	Retcod			Unsigned long. use 0 for success.
     )


Function Code = 6;		Delete collumn from list.

vlist(
	Function_code,		Equal to 6.
	list_id,		The ID of the list to build.
	column_number,		Unsigned long. Column to Delete.
	Retcod			Unsigned long. use 0 for success.
     )


Function Code = 7;		Replace collumn in list.

vlist(
	Function_code,		Equal to 7.
	list_id,		The ID of the list to build.
	type,			Unsigned long, same as code=4
	width,			Number of text positions allowed to display.
	Itemlist,		The array of items.
	length			For text items, length in bytes of each item.
	column_number,		Unsigned long. Column to replace.
	Retcod			Unsigned long. use 0 for success.
     )

Function code = 8;		Resize list, just change the number of rows.

vlist(
	Function_code,		Equal to 8.
	list_id,		The ID of the list to build.
	rows,			Unsigned long. Number of rows.
	Retcod			Unsigned long. use 0 for success.
     )

Function code = 9;		Set Function key definitions.

vlist(
	Function_code,		Equal to 9.
	list_id,		The ID of the list.
	key_array,		The keys and their definitions.	
	Retcod			Unsigned long. use 0 for success.
     )

	key_array is an array of struct {
						short meta_key;
						short list_function;
					}

	The meta_key is a VIDEO meta_key value.
	list_function is a value defined by the following constants
	The last meta_key is zero, defining the end of the list.

	ALLOW_KEY	0	Allow this key to terminate input.
	UP_PAGE		1	Scroll up a complete page.
	DOWN_PAGE	2	Scroll down a complete page.
	TOP		3	Go to top of list.
	BOTTOM		4	Go to bottom of list.
	RIGHT_PAGE	5	DIsplay next invisible columns on right.
	LEFT_PAGE	6	Display Next invisible columns on left.
	SELECT_ROW	7	Select this row.
	DESELECT_ROW	8	Deselect this row.

Function code = 0;		Display List.

vlist(
	Function_code,		Equal to 0.
	list_id,		The ID of the list,
	Starting_row,		Unsigned long, First row displayed.
	Starting_col,		Unsigned long, First Column displayed.
	Cursor_row,		Unsigned long, row where cursor is.
	Cursor_column,		Unsigned long, column where cursor is.
	Result_list,		Unsigned long array, result codes.
	Key_value,		Unsigned long, Meta key pressed
	Retcod			Unsigned long. use 0 for success for now.
     )


	When a list is displayed, the cursor is restricted to the center text
area, which is a scroll region. The cursor is moved by the arrow keys, and when
it is in the first row, and up arrow is pressed, the screen should scroll down
one line. Same for the bottom of the screen. Left and right boundarys should
just stay in the left or right column.
	When the SELECT_ROW function is used, that row should be highlighted
in some way. Make it bright, for example.
	The RESULT_LIST is a bit mask field, for now, give the item a value of
1 if the row is selected. Be sure to init it to zeros when the call starts.

