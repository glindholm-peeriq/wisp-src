	Copyright (c) Shell Stream Software LLC, All Rights Reserved.
	
	====================================================================
	
	Title:		WISP SUPPORT FOR NON-ASCII CHARACTERS
	
	Document:	nonascii.txt
	Last Updated:	11 Jun 1998
	Products:	WISP
	Versions:	4.3.0 (AND LATER)
	
	Summary:	WISP support for non-ASCII characters.
			CHARMAP and OPTIONS file configuration.
			Implementation issues.
			Supporting routines.

	====================================================================
	

	WISP SUPPORT FOR NON-ASCII CHARACTERS
	===================================== 

	This document describes the support WISP provides for the use of
	non-ASCII single byte characters.  The primary use is for
	displaying of certain European characters which are not part of
	the ASCII 7-bit character-set.  These characters include the
	British pound sign and letters with diacritical marks, etc.


	Non-ASCII Characters on the Wang VS
	-----------------------------------

	The Wang VS workstation will only display characters with values
	in the range 1-127 (7-bit).  High value 128-255 (8-bit) are
	considered to be FAC characters not data.  On a Wang VS
	workstation non-ASCII characters are represented with values 1-31,
	and 123-127 which are "unused" by the ASCII character-set.

	See appendix A of the Wang VS Programmer's Introduction for a
	table showing the workstation character set.


	Non-ASCII Characters on Unix and Windows
	----------------------------------------

	On Unix and Windows, non-ASCII characters are usually represented
	with values in the range 128-255.  These non-ASCII characters in
	the range 128-255 would be confused with FAC characters and would
	not be displayed by the WISP screen handler.  

	In order to display non-ASCII 8-bit characters, WISP provides a
	CHARMAP configuration file that allows 8-bit characters to be
	mapped into unused values of the Wang VS workstation character
	set.


	CHARMAP - Character Map Configutation File
	==========================================

	The CHARMAP character map configuration file is used to map Wang
	7-bit characters into Native and Terminal 8-bit characters.

	The Wang 7-bit character set is used by the WISP screen handler to
	emulate Wang workstion IO.  The Native character set is the
	character set used natively by the computer, this is usually the
	ANSI character set with "Latin 1" extensions.  The Terminal
	character set is character set use by the terminal (this may be
	the same as the native character set).

	The WISP screen handler will use the mappings defined in CHARMAP
	to translate keyboard input from the terminal 8-bit character set
	into the Wang character set.  It will also translate the Wang
	character set into the terminal character set when it displays the
	character.  If the NATIVECHARMAP option is specified, the WISP
	runtime will translate between the the Native character set and
	the Wang character set when passing data between the application
	and the WISP screen handler.  See the NATIVECHARMAP option
	description below.

	The file is named CHARMAP and is placed in the WISPCONFIG
	directory.  

	    $ vi $WISPCONFIG/CHARMAP

	If an individual user needs a custom CHARMAP file then set the
	environment $CHARMAP to point to the custom map file.

	    $ CHARMAP=$HOME/wisp/MYCHARMAP
	    $ export CHARMAP

	If the CHARMAP file is not found or contains no mappings then no
	character translations will take place and no 8-bit characters can
	be used.

	Each mapping line contains three decimal numbers. The first number
	is the 7-bit Wang workstation character value (1-127).  The second
	number is the corresponding 8-bit native character value (1-255),
	this is usually ANSI. The third number is the corresponding 8-bit
	terminal character set value (1-255).  The character value 0 can
	not be mapped.

	Comment lines begin with a hash (#) character.

	It is recommended that you restrict Wang VS character values to
	those which are not printable characters in the ASCII standard
	(1-31,127). You could additionally use values that are different
	between Wang and ASCII (94-96,123-126).

	It is strongly recommended that you do not remap any of the
	standard ASCII displayable characters (32-93,97-122). You should
	also not use value 11 which is the pseudo-blank character and is
	handled with a special mechanism.  Additionally the values 8 - 13
	are very common ASCII control characters (CR,LF,TAB,FF,etc.) and
	if remapped may cause problems when using the DISPLAY or VSEDIT
	utility.

	Any character values which are not listed in the CHARMAP will not
	be translated.  These characters are considered to have the same
	value in the both the native and the Wang character sets.  As an
	example the character 'A' has the value 65 in all ASCII based
	character sets.

	Character values in the non-ASCII range (1-31,127) are considered
	invalid unless they are listing in the CHARMAP file.  For this
	reason unused or invalid character values in the non-ASCII range
	should not be listed in the CHARMAP file (they may be commented
	out).  If a value is listed then it is considered a valid input
	value and will be accepted as input, an invalid value will ring
	the bell when entered.  In the example below values 1 - 13 are
	unused and commented out so they will be considered invalid.

	Duplicate character mappings are not permitted and will be
	ignored.  Invalid entries will be ignored.  A wisperr.log trace
	with WISPDEBUG=FULL will show the character mappings used and
	report any invalid enties.

	On most Unix systems the Native and the Terminal character values
	will be the same.  On most Windows systems the Native character
	values are from the ANSI character set (Windows code page 1252),
	and the Terminal character values are from the OEM character set
	(Windows code page 437).

	The sample CHARMAP file provided is a close approximation to the
	default Wang VS workstation character set.  The native character
	values used are from the ISO 8859-1 Latin 1 character set which is
	also compatible with the Windows Latin 1 character set (Microsoft
	calls this ANSI).

	You can test any changes you make to the sample CHARMAP file by
	running wshell and pressing PF28 from the main menu.  The will
	display a screen which displays all characters in the Wang
	character set (1-127).

	Using the sample CHARMAP below, if a user is entering data on a
	screen and pressing the British pound sign key the WISP screen
	handler will receive the value 156 from the terminal.  The WISP
	screen handler will tranlate the value 156 (terminal character
	set) into the value 124 (Wang character set) and store the value
	124 into the screen display buffer.  When the read of the
	workstation completes the COBOL application will receive the
	screen buffer and it will contain the value 124.  If the
	NATIVECHARMAP option is specified then the value 124 will be
	translated into the native character set and the application will
	receive the value 163.

	The following is the sample CHARMAP file for Windows NT/95:

	##########
	#
	# CHARMAP - Character Map
	#
	# Wang    Native  Terminal 	Description
	#(1-127)  (1-255) (1-255)
	#------------------------------------------
	#1	  1	  1	# (unused)
	#2	  2	  2	# (unused)
	#3	  3	  3	# (unused)
	#4	  4	  4	# (unused)
	#5	  5	  5	# (unused)
	#6	  6	  6	# (unused)
	#7	  7	  7	# (unused)
	#8	  8	  8	# (unused) Backspace
	#9	  9	  9	# (unused) Tab
	#10	 10	 10	# (unused) Linefeed
	#11	 11	 11	# (unused) Psuedo-blank
	#12	 12	 12	# (unused) Formfeed
	#13	 13	 13	# (unused) Carriage return 
	14	223	225	# Beta mark
	15	182	 20	# Paragraph mark
	16	226	131	# a + circumflex
	17	234	136	# e + circumflex
	18	238	140	# i + circumflex
	19	244	147	# o + circumflex
	20	251	150	# u + circumflex
	21	228	132	# a + umlaut
	22	235	137	# e + umlaut
	23	239	139	# i + umlaut
	24	246	148	# o + umlaut
	25	252	129	# u + umlaut
	26	224	133	# a + grave accent
	27	232	138	# e + grave accent
	28	249	151	# u + grave accent
	29	196	142	# A + umlaut
	30	214	153	# O + umlaut
	31	220	154	# U + umlaut
	94	 94	 94	# Circumflex (unchanged)
	95	 95	 95	# Underscore (unchanged)
	96	176	248	# degrees symbol
	123	167      21	# Double S
	124	163     156	# British Pound sign
	125	233     130	# e + acute accent
	126	231     135	# c + cedilla
	127	162     155	# Cent sign
	##### END OF CHARMAP #####


	IMPLEMENTATION ISSUES
	=====================

	It is important to understand that the WISP screen handler only
	understands the Wang character set (values 1-127).  The WISP
	screen handler will internally translate between the Wang
	character set and the terminal character set when it is
	communicating with the terminal.

	On the Wang VS all text data within an application and in data
	files is encoded in the Wang VS workstation character set.

	With migrated applications you have a choice of keeping all text
	data in the Wang character set or the native character set.

	If you choose to keep your text data in the Wang character set
	then there is two areas which may cause a problem.  These areas
	are printing, and sharing data with non-WISP migrated
	applications.  You may need to modify your applications print
	logic to translate text data into native character set as the
	print files are written.  See the WWANG2ANSI routine below.
	Alternatively you could create a "filter" program which translates
	your print files on there way to the printer.

	If you choose to keep your data in the native character set then
	you must ensure that all data is translated as it is passed
	between the application and the WISP screen handler.  The
	NATIVECHARMAP option automates this process for DISPLAY AND READ
	statements, GETPARMS (including ACCEPT and DISPLAY verbs), and the
	DISPLAY and VSEDIT utilities.  If your applications perform READ's
	and REWRITE's of the workstation, or WSXIO calls, or use embedded
	FAC characters in DISPLAY AND READ screens then you applications
	will need to be modified to translate between the native character
	set and the Wang character set.  The routines WANSI2WANG and
	WWANG2ANSI described below are provided to assist in translation. 

	The SCREEN VSSUB will return the screen buffer in the Wang
	character set.

	The screen print facility will write the print file using the
	native character set.



	OPTIONS File Options
	====================
	The following OPTIONS file options affect non-ASCII characters.

	NATIVECHARMAP

	The NATIVECHARMAP option instructs the runtime and utilities that
	text data within the application is encoded using the "native"
	character set based on CHARMAP the character map configuration
	file.  If this option is not specified then the default behaviour
	is to encode text data using the "Wang" character set.  When this
	option is set the "DISPLAY AND READ" processing (through the
	wscreen routine), the GETPARM VSSUB, and the DISPLAY and VSEDIT
	utility will automatically convert between "native" and "Wang"
	character set encoding and "native" character set encoding will be
	returned to the applications (or saved in the file).

	The workstation operations READ, REWRITE, and WSXIO are not
	affected by this option and will use the "Wang" character set.
	Embedded FAC's can not be used with "DISPLAY AND READ" screens as
	they will be confused with non-ascii data.


	CHARMAP Support Routines
	========================

	WANSI2WANG
	----------
	Usage:		CALL "WANSI2WANG" USING Buffer, Length.

	Description:	This routines uses CHARMAP to translates a buffer
			that is encoded in 8-bit native character set into
			Wang character set encoding.

			Any characters in the buffer that do not have
			CHARMAP translations will be unchanged.

	Parameters:
	Buffer		Alpha(var)	The buffer to tranlate.
	Length		Int(2)		The length of the buffer.

	Example:
			01  DISPLAY-LINE	PIC X(79).
			01  BUFF-LEN		BINARY.

		       * Translate to Wang character set before screen IO.
			MOVE 79 TO BUFF-LEN.
			CALL "WANSI2WANG" USING DISPLAY-LINE, BUFF-LEN. 
			MOVE DISPLAY-LINE TO WSXIO-LINE-BUFF.

			CALL "WSXIO" USING ...

	WWANG2ANSI
	----------
	Usage:		CALL "WWANG2ANSI" USING Buffer, Length.

	Description:	This routines uses CHARMAP to translates a buffer
			that is encoded in 7-bit Wang character set into
			native 8-bit character set encoding. 

			Any characters in the buffer that do not have
			CHARMAP translations will be unchanged.

	Parameters:
	Buffer		Alpha(var)	The buffer to tranlate.
	Length		Int(2)		The length of the buffer.

	Example:
			01  PRINT-LINE		PIC X(133).
			01  BUFF-LEN		BINARY.

		       * Translate to Native character set before printing.
			MOVE 133 TO BUFF-LEN.
			CALL "WWANG2ANSI" USING PRINT-LINE, BUFF-LEN. 

			WRITE PRINT-LINE.


	========================= END OF DOCUMENT ==========================
