	Copyright (c) Shell Stream Software LLC. All Rights Reserved. 
	====================================================================
	
	Title:		WISP PORTING INSTRUCTIONS FOR UNIX
	
	Document:	portunix.txt
	Products:	WISP/UNIX, EDE, KCSI
	Versions:	5.1.xx 
	
	Summary:	How it port WISP (and others) for unix.
			Building a shipping kit.

	====================================================================
	

	WISP PORTING INSTRUCTIONS FOR UNIX
	==================================

	This document describes the action needed to port WISP to a
	UNIX platform.


	NEEDED COMPONENTS
	=================

	The following components are required to port WISP.

	[ ] Acucobol COBOL compiler or runtime (or renamed as Micro Focus Extend)
		
	[ ] C and C++ compiler

		Ubuntu:
			cat /etc/os-release
			lsb_release -a
			sudo apt-get update
			sudo apt-get install build-essential
			sudo apt-get install ncurses-dev
			sudo apt-get install bison flex
			sudo apt-get install ncompress
			
		Centos 7 (64-bit)
			cat /etc/os-release
			sudo yum groupinstall 'Development Tools'
			sudo yum install ncurses-devel
			sudo yum install ncompress


	INSTALL THE COBOL
	=================

	If COBOL is not already on the system then install it.

	[ ] Install ACUCOBOL (a.k.a. Micro Focus Extend)
	
		- upload the setup_acucob* file
		
			export ACUDIR=$HOME/work/acu/acuXXXX
			mkdir -p $ACUDIR
			# upload setup_acucob* $HOME/work/acu
			chmod +x setup_acucob*
			./setup_acucob* -d $ACUDIR
			$ACUDIR/bin/activator
	

	[ ] Find version of ACUCOBOL
		$ $ACUDIR/bin/runcbl -v
	
	LOAD THE WISP SOURCE KIT
	========================

	[ ]	CREATE THE WISP DIRECTORY

		Make a base WISP directory to hold all the WISP related
		files. (If a WISP directory already exists don't recreate.)

		Example:
			$ mkdir -p ~/work/wisp

	[ ]	DELETE or RENAME THE OLD SOURCE DIRECTORY

		If a previous port of WISP exists on this machine then
		rename or delete the old source directory.

			$ mv src src.old

	[ ]	LOAD THE NEW SOURCE KIT

	 	Load the source kit from external media using tar.
		Then uncompress it and un-tar it to create the "src"
		directory.

		cd  ~/work/wisp

		From git:

			$ git clone git@bitbucket.org:glindholm/wisp-src-main.git src
            $ cd src
            $ git branch -r
            $ git checkout {BRANCH}

		From tar.gz:

		    $ tar -xzvf wispXXXX.src.tar.gz
		
		From cpio.Z
		    $ uncompress -c wispXXXX.src.cpio.Z | cpio -icvd
			
			

	[ ]	SET ENVIRONMENT VARIABLES

		Create a startup file to set ACUDIR to the ACUCOBOL directory.

			$ vi ~/startup_xxx.sh
				export ACUDIR=~/work/acu/acuXXXX
				export WISPDIR=~/work/wisp/src
	
			$ chmod +x ~/startup*.sh
			$ . ~/startup_xxx.sh


		Change directory to the wisp/src/port and run portenvs.sh
		to set the WISPSRC and WISPDIR variables.

			$ cd $WISPDIR/port
			$ ./portenvs.sh

		This will set the variables WISPSRC and WISPDIR.

				*** IMPORTANT *** 
		You will need the variable WISPSRC set for the whole porting 
		process.  Alway ensure that it is set correctly.

			$ WISPSRC=${HOME}/work/wisp/src 
			$ WISPDIR=${WISPSRC}
			$ ACUDIR=/usr/local/acucobol
			$ export WISPSRC WISPDIR ACUDIR


	MODIFIY WISP SYSTEM DEPENDENT FILES
	===================================

	There are a couple of files which will have to change when you
	do a port, these contain system dependent information.


	[ ]	${WISPSRC}/port/make.include
		- Uncomment the correct system flags.
		- For example: Search for the section named "LINUX (64-bit)"
		- Each system type starts with a 'SYSDEF =' variable
		- Uncomment all the variables for that system type
		- Ensure that no other systems are uncommented

	[ ] Verify version of ACUCOBOL
	    $ ${ACUDIR}/bin/runcbl -v
		
	[ ]	${WISPSRC}/acu/acucobol.include
		- Search for:
		  "****  CHANGE PLATFORM SETTINGS HERE ****"
		  ACUOTHER=
		  SYSCCFLAGS=
		  "****  CHANGE ACUCOBOL VERSION SETTINGS HERE ****"

	The following are only done on a port to a new platform. You
	will probably need to get everything else working first before
	modifying these files.

	[ ]	${WISPSRC}/wisplib/isexec.c		** NEW PORT **
		Add a system dependent EXECMAGIC entry.

	[ ]	${WISPSRC}/wisputils/wsysconf.c		** NEW PORT **
		Add system configuration device info.


	BUILD ALL WISP COMPONENTS
	=========================

	Change to the port directory and start the super-make that will
	start all the makefiles to build all the components.  This however
	does not build the COBOL runtime systems or SAMPLE.

	[ ]	$ cd ${WISPSRC}/port
		$ ./maketail.sh clean		# remove previous builds and make.err
									# Ctrl-C to exit from maketail.sh
			
		$ ./maketail.sh shipkit		# build WISP & EDE
									# Ctrl-C to exit from maketail.sh
		
		
	[ ] IF ACUCOBOL COMPILER 
		
		$ ./maketail.sh kcsi_acu	# To build KCSI for ACU		
		
		$ ./maketail.sh all_acu		# WISP, EDE, KCSI/ACU		
		
	[ ] IF NO ACUCOBOL COMPILER 
		
		$ ./maketail.sh kcsi_acu_nc	# To build KCSI for ACU	(NO ACUCOBOL COMPILER)

		$ ./maketail.sh rts_acu	    # To build WISP Acucobol RTS
	
	[ ] IF MF COMPILER
	
		$ ./maketail.sh all_mf		# WISP, EDE, KCSI/MF		

	[ ]	$ vi make.err				# ensure no errors

	On any error you will have to fix the problem and re-issue the
	above command.


	INSTALL WISP (QA)
	=================

	Install the new version of WISP so you can test in an installed
	environment.  We will install under the name ${WISPSRC}/QA so as 
	not to disturb others who are using the currently installed version.

	[ ]	*** Install to ${WISPSRC}/QA ***
		$ cd ${WISPSRC}/port
		$ ./installqa.sh
		
		*** You may need to export CC ***
		$ export CC=gcc


	QA TEST WISP
	============

	Perform the QA testing of WISP through the building and running
	of the program SAMPLE.  If any errors are found and corrected
	then move the modified source files to their appropriate source
	directories and repeat the above steps starting at the BUILD step.

	[ ]	Follow "doc/qawisp.txt" checklist to test WISP.


	INSTALL THE NEW WISP
	====================

	Install the new fully QA'ed version of WISP.
	Write protect everything.

	[ ]	$ cd ${WISPSRC}/QA
		$ mv wisp_XXXX /usr/local/wisp_XXXX
		$ ln -s /usr/local/wisp_XXXX /usr/local/wisp


	MOVE SHIPPING KITS
	==================

	Move the shipping kits into the shipping area on DEVEL.
	There are 3 ship kits:

	[ ]	 ${WISPSRC}/wisp_XXXX.ship
	[ ]	 ${WISPSRC}/kcsi/kcsi_acu_XXXX.ship
	[ ]	 ${WISPSRC}/kcsi/kcsi_mf_XXXX.ship

	[_] copy ship kits to Shipping


	========================= END OF DOCUMENT ==========================
