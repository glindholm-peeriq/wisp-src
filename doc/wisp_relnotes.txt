Copyright (c) Shell Stream Software LLC, All Rights Reserved.
====================================================================

Title:          RELEASE NOTES FOR WISP VERSION 5.1

Document:       wisp_relnotes.txt
Products:       WISP for UNIX, WISP for Windows (WIN32)
WISPVER:        5.1.12

Summary:        Release notes for changes to WISP since version 3.3c.

====================================================================

        Shell Stream Software LLC
        586 Lakewood Drive
        Oldsmar, FL 34677
        USA

        Voice (813) 425-6344
        Fax   (813) 425-6344
        Web   www.shellstream.com
        Email wisp@shellstream.com
        FAQ   http://www.shellstream.com/faq


CHANGES FOR RELEASE 5.1.12
==========================
The following items describe corrections and improvements that have
been made to the WISP toolkit for release 5.1.xx.

On Intel (Little-Endian) machines WPROC was returning the wrong value for
the EXTRACT RECORDS statement.



CHANGES FOR RELEASE 5.1.11
==========================
The following items describe corrections and improvements that have
been made to the WISP toolkit for release 5.1.11.

On Windows READFDR/READFDR4 could fail with a Return Code 44 on a Vision file 
that was opened SHARED by another program.


CHANGES FOR RELEASE 5.1.10
==========================
The following items describe corrections and improvements that have
been made to the WISP toolkit for release 5.1.10.

Support for (Acucobol) Extend 9.1 and 9.0 has been added.

Printing on Windows with no printer specified was failing without 
reason if the user had not set a default printer. This has been 
changed to correctly report the issue.

Add support for runing under WinSSHD SSH server on Windows. 
See \etc\WISP_WinSSHD.pdf for complete information.

Developed WPRINT64 for printing on 64-bit Windows Server 2008. 
At the time of this writing there is a bug on all versions of Windows 64-bit 
servers that prevents multiple users from printing with 32-bit programs. The 
WISP runtime is a 32-bit program. If you have multiple users running WISP 
migrated applications on a 64-bit Windows server then you will need to use 
a 64-bit print utility to avoid this problem. Shell Stream Software has 
developed the utility WPRINT64 to address this issue. This utility is 
available for no charge to licensed WISP users upon request.

If you use WCONFIG to configure the WISP runtime via registry keys it is 
highly recommended that you run WCONFIG as an administator. To run WCONFIG as
an administrator right-click on wconfig.exe and select "Run as administrator".
With current versions of Windows it is recommended you use environment 
variables to configure the WISP runtime instead or registry keys via WCONFIG.


CHANGES FOR RELEASE 5.1.00
==========================
The following items describe corrections and improvements that have
been made to the WISP toolkit for release 5.1.00.

The version numbers of utilities that are released with this version
or WISP are:

    KCSI   v4.2.00

Copyrights have been changed to Shell Stream Software LLC.

Support for Acucobol 8.1 and 7.2 has been added.

Added support for Windows 7.

Fixed a file access security exception on Windows Vista and Windows 
Server 2008.

Changed VSSUB LINK using linktype='P' to behave like linktype=' ' (space)
when both the program library and the volume are blank.

Added OPTIONS file option NOTITLE. The NOTITLE option will disable 
the WTITLE routine. This will prevent calls to WTITLE from changing 
the Window title in a Co*STAR or Windows environment.

WPROC will now record it's error messages to the wisperr.log file.

WDIAG would incorrectly report $PATH warnings if the $PATH was 
greater then 1024 bytes long. This has been corrected.

WDIAG now displays the Print configuration files LPMAP, PRMAP 
and FORMS if present.

WDIAG was broken on Microsoft Vista and was incorrectly reporting 
most folders and programs as "UNABLE TO ACCESS".

WDIAG has been enhanced to handle variations of the CODE_PREFIX 
configuration entry in the Acucobol config file. It now understands 
mixed case and both '-' and '_' seperators. It also understands 
that the $CODE_PREFIX environment variable can also be used.
It also understands OS specific path separators (':' on unix 
and ';' on Windows) and quoted directories with embedded spaces.

VSEDIT utility Move or Copy lines command would fail to detect 
an error condition of needing a RENUMBER before the insert if 
only one line was being moved. The line being moved might then
be lost without warning. This has been fixed.

There was a defect processing configuration files PRMAP, FORMS,
SCMAP, and CQMAP when the last line in the file was missing 
the End Of Line character (NL). The last character of the last 
line was being removed. This has been corrected.

The WCONFIG utility on WIN32 has been enhanced to support 
the Microsoft Vista operating system.  On Vista the Registry 
Keys will be written under "HKEY_CURRENT_USER\Software\Classes\
VirtualStore\MACHINE\SOFTWARE" instead of "HKEY_LOCAL_MACHINE\SOFTWARE"
where they are in earlier releases of Windows. If you manually 
import the Registry settings to "HKEY_LOCAL_MACHINE\SOFTWARE" 
then the WCONFIG utility will not be able to edit them.

The "SAVE Environment" command from Command Processor (WSHELL or 
HELP) was failing to write PERSONALITY files that contained 
embedded spaces.  It was terminating the file name at the 
first space character. This has been corrected.


Changes to the WISP Translator:

When translating for NATIVE SCREENS and the last statement in the 
LINKAGE SECTION is a COPY statement then the translator would 
incorrectly generate the SCREEN SECTION into the copybook file.
This has been fixed. 

The WISP translator now defaults to using ".cob" as the file 
extension for the internally generated copybooks (was wcXXXXXX.cpy).
It now follows the same rules for filename extensions as with 
translated copybooks including obeying the #COPYBOOK_EXT_CPY or 
#COPYBOOK_EXT_LIB options.

The WISP translator was reporting errors for paragraph names that
consisted of all digits. This has been fixed.

The WISP translator was aborting on an improperly formed OPEN 
statement that was missing the Open Mode keyword. This has been 
fixed.

The WISP translator was reporting an error if it found a comment 
in the middle of a continued literal. 

The WISP translator now recognizes the "BY VALUE" syntax of 
arguments in a CALL statement.


CHANGES FOR RELEASE 5.0.01
==========================
The following items describe corrections and improvements that have
been made to the WISP toolkit for release 5.0.01.

The WFILECHK3 routine was incorrectly generating ERROR screens 
instead of passing control to the DECLARATIVES.  The problem appears 
to only effect applications that do not code "INVALID KEY" clauses 
on READ statements etc. and rely on coded DECLARATIVES to handle 
this type of condition. This has been corrected.


CHANGES FOR RELEASE 5.0.00
==========================
The following items describe corrections and improvements that have
been made to the WISP toolkit for release 5.0.00.

The version numbers of utilities that are released with this version
or WISP are:

    KCSI   v4.1.00

This release supports the following Cobol Compiler releases:
    - Acucobol-GT 6.0
    - Acucobol-GT 5.2
    - Acucobol-GT 5.1
    - Acucobol-GT 5.0
    - Micro Focus Server Express 2.1
    - Micro Focus Object Cobol 4.1

This release of WISP supports Acucobol-GT 6.0, 5.2, 5.1, and 5.0, 
earlier releases of Acucobol are not supported.  The WISP 
translator will by default use features of Acucobol-GT 5.2 that 
are not available in Acucobol-GT 5.1 or 5.0.  For this reason it 
is recommended that you upgrade to Acucobol-GT 5.2 or 6.0 .  If 
you cannot upgrade then you will need to use the WISP translator 
option "-u ACU51" or "-u ACU50" when translating.


Changes to licensing on Unix:

On Unix the location of the WISP license file has changed.  The 
old license file was "/lib/wisp.license".  The new license file 
is located in the $WISPCONFIG directory.

    Old: /lib/wisp.license
    New: $WISPCONFIG/wisp.license

If you are upgrading from a previous release of WISP you will 
need to create the new license file(s) by running the wlicense
utility (or by copying and renaming the old license file).
If upgrading you can use the same License Key and Validation 
Code, use "cat /lib/wisp.license" to view there values. 

If you have more then one $WISPCONFIG directory you will need
to create a license file in each location.  Once a license file
has been created you can copy it to each $WISPCONFIG location.

In order to run the wlicense utility the variable $WISPCONFIG 
must be set and you must have priviledges to write into the 
$WISPCONFIG directory.

The old WISP UNLIMITED runtime licenses are no longer supported 
and have been replaced with ENTERPRISE licenses.  If you have 
an UNLIMITED license please contact Shell Stream Software to 
have it replaced by an ENTERPRISE license.


Changes to the WISP distribution kit on UNIX:

  Changed:
  All the the Cobol source file names are now uppercase.
  All Acucobol object file will have a .acu extension.
  acu/xterm.a_termcap    - Replaces old xterm.acu

  Added:
  acu/sub85_acu50.c      - WISP sub85.c for Acucobol 5.0
  acu/sub85_acu51.c      - WISP sub85.c for Acucobol 5.1
  acu/sub85_acu52.c      - WISP sub85.c for Acucobol 5.2
  acu/sub85_acu60.c      - WISP sub85.c for Acucobol 6.0
  acu/wacu.umf           - New makefile for WISP Acucobol objects
  acu/wisp_sub85_inc.c   - WISP include file for sub85.c
  acu/ACULINK.acu        - The built ACULINK object file
  acu/ACUUSING.acu       - The built ACUUSING object file
  acu/WACUDISPLAY.acu    - The built WACUDISPLAY object file
  acu/WACUERROR.acu      - The built WACUERROR object file
  acu/WACUFAC2SCREEN.acu - The built WACUFAC2SCREEN object file
  acu/WACUGETPARM.acu    - The built WACUGETPARM object file
  acu/WACUGETPFKEY.acu   - The built WACUGETPFKEY object file
  acu/WACUHELP.acu       - The built WACUHELP object file
  acu/WACUWSB.acu        - The built WACUWSB object file
  mf/wisp4400.c          - C file for obsolete interfaces
  mf/wisp4400.o          - Object file for obsolete interfaces

  Removed:
  acu/sub85.c            - replaced by sub85_acuXX.c files
  bin/which              - removed as is a standard OS utility
  bin/makemsg            - obsolete
  config/wispmsg.dat     - obsolete
  config/wispmsg.txt     - obsolete
  mf/wrunmf.c            - obsolete
  mf/wrunmf.o            - obsolete
  acu/wispacn.txt        - Incorporated in WISP manual
  etc/nonascii.txt       - Incorporated in WISP manual


Changes to the WISP distribution kit on Windows:

  Changed:
  All the the Cobol source file names are now uppercase.
  All Acucobol object file will have a .acu extension.

  Added:
  acu\acu50\             - Build files for Acucobol 5.0
  acu\acu51\             - Build files for Acucobol 5.1
  acu\acu52\             - Build files for Acucobol 5.2
  acu\acu60\             - Build files for Acucobol 6.0
  acu\wacu.mak           - New makefile for WISP Acucobol objects
  acu\wisp_sub85_inc.c   - WISP include file for sub85.c
  acu\ACULINK.acu        - The built ACULINK object file
  acu\ACUUSING.acu       - The built ACUUSING object file
  acu\WACUDISPLAY.acu    - The built WACUDISPLAY object file
  acu\WACUERROR.acu      - The built WACUERROR object file
  acu\WACUFAC2SCREEN.acu - The built WACUFAC2SCREEN object file
  acu\WACUGETPARM.acu    - The built WACUGETPARM object file
  acu\WACUGETPFKEY.acu   - The built WACUGETPFKEY object file
  acu\WACUHELP.acu       - The built WACUHELP object file
  acu\WACUWSB.acu        - The built WACUWSB object file

  Removed:
  acu\wwruncbl.mak       - obsolete
  bin\makemsg.exe        - obsolete
  config\wispmsg.dat     - obsolete
  config\wispmsg.txt     - obsolete
  lib\videom.lib         - video.lib is now multi-threaded
  lib\wispm.lib          - wisp.lib is now multi-threaded
  acu\wispacn.txt        - Incorporated in WISP manual
  etc\nonascii.txt       - Incorporated in WISP manual
  etc\nttelnet.txt       - Incorporated in WISP manual
  etc\vcolors.txt        - Incorporated in WISP manual


The makefile instructions for building ACULINK.acu, ACUUSING.acu, 
and the Acucobol Native Screens objects has been move to wacu.mak 
on Windows and to wacu.umf on Unix.

The distribution file $WISPDIR/acu/xterm.acu has been renamed to 
xterm.a_termcap. The extension has been changed so as not to be 
confused with an Acucobol object file.

The file wispmsg.dat, wispmsg.txt and makemsg have been removed 
from the distribution.  They are no longer used.

All Acucobol object files are compiled with -Z50 options to allow
them to be run with Acucobol-GT 5.0 or later runtimes. 

All of the WISP changes needed to sub85.c have now been moved 
into the file wisp_sub85_inc.c.  This file is then included 
into sub85.c.  The new WISP version of sub85.c is now the same
as the Acucobol version with the exception of some comments and
three places where #include "wisp_sub85_inc.c" has been inserted.
The purpose is to simplify the changes needed to sub85.c so
that future release of Acucobol will be easier to support.


Changes to the WISP Translator:

When translating for Acucobol the WISP translator defaults to
inserting calls to "C$GETLASTFILEOP" to retrieve the last file
operation. If you are using an earlier version of Acucobol that
does not support "C$GETLASTFILEOP" then you will need to use 
the new #NOGETLASTFILEOP translator option when translating. 
(Using the "-u ACU50" or "-u ACU51" option has the same effect.)
It appears that "C$GETLASTFILEOP" was added in Acucobol-GT 5.2.0.

If you are translating for Micro Focus or use the 
#NOGETLASTFILEOP translator option then the file IO operation 
name is moved into the WISP-LASTFILEOP field. Previously a 
code was moved into the WISP-DECLARATIVES-STATUS field.

The WISP translator has been changed for "READ WITH HOLD" to 
no-longer generate calls to "wfwait". Instead for Acucobol it
generates calls to "C$SLEEP" and for Micro Focus it generates
a call to "SLEEPONE" to cause a 1 second wait before it
retries the READ.

The WISP translator now generates file logic that uses an
attribute field (ATTR-{filename}) instead of the previous
status field (S-{filename}).  The attribute field contains
a list of single character attributes instead of status
field bitmask.  These attributes are easier to read and
understand then the status field values. The attributes 
are used to identify the type of file and current state.
This table describes the attributes:
   "P"  Printer file
   "I"  Indexed file
   "S"  Sequential/Sequential file
   "Y"  Sequential/Dynamic file
   "R"  Relative file
   "Z"  Sort file
   "D"  Database file
   "O"  Opened for OUTPUT
   "U"  Opened for IO
   "X"  Opened EXTEND
   "G"  Initial GETPARM has been done
   "E"  Error GETPARM needed
   "W"  WORK file
   "#"  Scratch file (#xxxx)
   "T"  Temp file (##xxxx)
   "N"  NORESPECIFY
   "!"  File has DECLARITIVES

These routines have been replaced to use the ATTR-xxx attribute 
field instead of the S-xxx status field.
   SETFILE   -> SETFILE2
   X4DBFILE  -> X4DBFILE2
   WFOPEN3   -> WFOPEN4
   WFNAME    -> WFNAME2
   WFILECHK2 -> WFILECHK3

The WISP Translator will now preserve 77 level numbers instead of
changing them to 01 unless the #CHANGE_LEVEL77 translator option is
specified. 

The WISP Translator will move 01 and 77 level numbers to Area-A
(column 8) unless the #DONT_FORCE_AREA_A_LEVELS translator option is
specified.

The WISP Translator will remove the SOURCE-COMPUTER and
OBJECT-COMPUTER paragraphs unless the #KEEP_CONFIG_COMPUTER translator
option is specified.  Additionally the paragraphs will be
un-translated unless the #TRANSLATE_CONFIG_COMPUTER translator option
is specified.

The WISP Translator will use the file extension of ".cob" for
generated copybook files. Previously it was using ".lib" which is
inappropriate on Windows.  You can optionally instruct it to use the
extension ".cpy" or ".lib" by specifying the translator option
#COPYBOOK_EXT_CPY or #COPYBOOK_EXT_LIB respectively.

The WISP Translator will delete the "DATA RECORDS ARE" clause from
FD's and SD's if the #DELETE_DATA_RECORDS translator option is 
specified.

The WISP Translator will now generate uppercase copybook files if the
source copybook file was uppercase.

Removed word "LENGTH" from the WISP Translators internal list of COBOL
reserved words (words.def) that it will automatically translate.

The WISP Translator has changed the FAC OF and ORDER-AREA OF data
names to be FAC-OF-xxx and ORDER-AREA-xxx. Previously it used
F-xxx and O-A-xxx which was shorter but less natural.

The WISP Translator for Micro Focus will insert the clause "NUMERIC 
SIGN IS TRAILING SEPARATE" into the SPECIAL-NAMES paragraph if the
#SIGN_TRAILING_SEPARATE translator option is specified.  Use this
option if you used the SEPSGN=YES compiler option on the Wang. 
This is equivalent to the Acucobol compiler flag "-Ds".

The WISP Translator supports a new command line option '-E' will 
echo the command line and OPTION file options in use to stdout.  
This option is useful for displaying which options were used when 
build results are being logged in a build tool.

The WISP Translator now allows you to specify any of the OPTION 
file translator options on the command line with 
the '-u option[=value[,value]]' option.  Multiple '-u' options can 
be specified.  The leading '#' character of the option name is not 
required.  (It is difficult to specify '#' in a unix command line 
as the '#' character is usually defined as the comment character.)  
If the option requires a value then the value should follow an '=' 
character with no whitespace characters 
(e.g '-u SORT_FILE=MY-SORT-FILE'). 

The WISP translator no longer recognizes the obsolete $WANG_PROC
directive.  To set the file extension call the WSETFILEXT routine.

If the WISP translator is given a path to the source file to translate
it will use that path as it's working directory (pwd). All relative
paths supplied for copy libraries etc. will be calculated relative to
the location of the source file.  This allows you to translate
without having to be located in the same directory as the program
source file.

The WISP translator was aborting if a DISPLAY AND READ statement was
missing the required "ON crt" clause. The has been changed so it
reports a meaningful message then terminates.

The WISP translator was aborting if an OPEN statement was missing the 
required open mode. The has been changed so it reports a meaningful 
message then terminates.

The WISP translator could on occasion generate a data name that ended
in a dash "-" character, this would cause a compiler warning. It has
been corrected.

The WISP translator now recognizes and removes "END PROGRAM {progid}."
sentences. 

The WISP translator no longer issues YEAR2000 warnings for
calls to DATE, DAY or READFDR. (See DATE6 support in this document.)

The WISP translator now recognizes the ACCEPT statement 
syntax  "ACCEPT xxx FROM DATE YYYYMMDD" and 
"ACCEPT xxx FROM DAY YYYYDDD".  These are now supported in
both Acucobol and Micro Focus Cobol.

The WISP translator will now warn if a horizontally repeating field 
in a DISPLAY-WS record will not fit across the screen. It will also
warn if a VALUE clause literal on a screen field is too big for  
the PIC clause.

For Micro Focus changed the calls to WVASET to a simpler form
using WVASETV which takes a numeric literal passed by VALUE.
    CALL "WVASETV" USING VALUE nn
The older form of WVASET is still supported for backwards 
compatibility.

Switch to INITWISP3 that has a simpler interface then INITWISP2.
INITWISP3 has been added to the library. INITWISP2 will still be
supported for backwards compatibility.



Changes to WISP configuration:

On WIN32 the environment variable $WISPCONFIG can now be used to 
override the Registry value of WISPCONFIG to identify the location
of the WISP Configuration Directory.  This change will allows you 
to run multiple configurations at the same time on a server. 

On WIN32 all the registry settings now have corresponding environment 
variables. This allows you to configure the WISP runtime without 
having to make changes to the registry (via WCONFIG utility).
The following environment variables can be used to override
(or replace) the registry settings. These are the same variables
that are used on Unix.
   $WISPCONFIG         - WISP configuration directory
   $WISPDIR            - WISP installation directory
   $WISPSERVER         - WISP network license server (WIN32 only)
   $WISPUSERSDIR       - Parent of User's directories (WIN32 only)
   $WISPLINKPATH       - Path for LINK type 'S'
   $WISPTMPDIR         - WISP temp file directory
   $WISPSYSTMPDIR      - System temp file directory
   $WISPTERM           - WISP terminal type
   $WISPSORTMEM        - Memory to use for file sorts.
   $WISPSHAREDIR       - WISP share directory for MESSAGE (WIN32 only)
   $WISPCPU            - CPU number for EXTRACT "C#"
   $WISPNETID          - Network Id for EXTRACT "W$"
   $WISPSCRATCHMODE    - SCRATCH behaviour flag
   $WISPDISPLAY8BIT    - 8-BIT characters flag
   $WISPEDITOR         - Editor to use from Manage Files.
   $WPROC              - Path to procedure interpreter.
   $WPROCDEBUG         - Wproc debug flags
   $VIDEOCAP           - Videocap directory

The default for WISPSORTMEM has been changed to 2048K (2 meg).

The $WEDITOR environment variable has be changed to $WISPEDITOR.

The $WISP_DISPLAY_8BIT envvar has been changed to $WISPDISPLAY8BIT.
The $WISP_SCRATCH_MODE envvar has been changed to $WISPSCRATCHMODE.

On Unix you can change the location of temporary files by setting
the variables $WISPTMPDIR and $WISPSYSTMPDIR.
   $WISPTMPDIR         - Defaults to /usr/tmp
   $WISPSYSTMPDIR      - Defaults to /tmp
If you change WISPTMPDIR to something other then '/usr/tmp' then 
it is important that the $WISPTMPDIR environment variable is 
set to the same value for all users including for when 'wsysinit'
is run. 

Replaced the OPTIONS file ERRFLAG option with WISPDEBUG option that
can be set to "FULL", "ERRORS", or "NONE". The environment variable
WISPDEBUG can be set to the same values in order to override the
OPTIONS file values. The default behavior (ERRORS) of logging only
errors remains the same.

A number of OPTIONS file options have been added that previously 
could only be specified by setting environment variables.  The order
of priority for all of these is; first environment variable, then
on WIN32 registry setting (if available), then OPTIONS file, then
finally default values.  See the OPTIONS file and the WISP manual
for detailed documentation on each of these options.

  WISPTMPDIR
  WISPSYSTMPDIR
  WISPSORTMEM
  WISPCPU
  WISPNETID
  WPROC
  WPROCDEBUG
  ACPCONFIG
  ACPMAP
  WISPSCRATCHMODE
  WISPDISPLAY8BIT

The OPTIONS file option DISPLAY8BIT has been replaced by 
WISPDISPLAY8BIT to match the envvar $WISPDISPLAY8BIT.

The new OPTIONS file option WISPPS1 allows you to specify 
the shell prompt by setting the PS1 environment variable 
value to use when you "shell out" from the WISP Command 
Processor on Unix with the "(11) Enter Commands" option.  
If WISPPS1 is not specified then PS1 is not changed.


Changes to the WISP Runtime Library:

There have been a number of changes to WISP library routines.
Most routines that had lowercase names have been shifted to 
uppercase and many have been renamed to be more appropriate.
If you are using Acucobol and upgrading from a previous release
the SUB85 interface will automatically translate the old names
to the new.  If you are using Micro Focus Cobol and upgrading
from a previous release you can either re-translate your 
applications or you can include wisp4400.o when building the
runtime to provide the translation from the previous API's.
See wrunmf.umf makefile with target "rtsx4400".

The following list summarizes WISP Runtime Library changes:

  Old Name      New Name
  --------      --------
  wpause        PAUSE
  wrename       RENAME
  bit_off       BIT_OFF
  lbit_off      LBIT_OFF
  bit_on        BIT_ON
  lbit_on       LBIT_ON
  bit_test      BIT_TEST
  getwfilext    WGETFILEXT
  initwisp2     INITWISP2       Deprecated (last used 4.4)
  mwconv        MWCONV
  setprogid     SETPROGID       Deprecated (last used 4.4)
  setretcode    SETRETCODE
  setwfilext    WSETFILEXT
  setwispfilext WSETFILEXT
  w2rowcol      WGETCURPOS
  wexith        WISPEXIT
  wfclose       WFCLOSE
  wfilechk      WFILECHK        Obsolete (last used 3.3.19)
  wfilechk2     WFILECHK2       Deprecated (last used 4.4)
  wfname        WFNAME
  wfopen        WFOPEN          Obsolete (last used 2.0B)
  wfopen2       WFOPEN2         Obsolete (last used 2.0C)
  wfopen3       WFOPEN3         Deprecated (last used 4.4)
  wfwait        WFWAIT          Deprecated (last used 4.4)
  wmemcpy       WMEMCPY         Deprecated (last used 4.4)
  wscreen       WSCREEN
  wsetstat      WSETSTAT        Deprecated (last used 4.4)
  wvaset        WVASET          Deprecated (last used 4.4)
  x4dbfile      X4DBFILE        Deprecated (last used 4.4)
  xx2byte       W99TOX
  wswap         WSWAP           'C' only routine


  New           Description
  ---           -----------
  WSETFACBLINK  Sets the BLINK bit in a FAC
  WS_CLOSE      Workstation CLOSE 
  WS_READ       Workstation READ 
  WS_READ_ALT   Workstation READ ALTERED 
  WS_REWRITE    Workstation REWRITE 

  INITWISP3     Replaces INITWISP2
  DATE6         VSSUB
  SLEEPONE      Pause for one second, replaces WFWAIT
  SETFILE2      Replaces SETFILE
  X4DBFILE2     Replaces X4DBFILE
  WFOPEN4       Replaces WFOPEN3
  WFNAME2       Replaces WFNAME
  WFILECHK3     Replaces WFILECHK2
  WVASETV       Replaces WVASET

  Removed
  -------
  wdfinish      Not used with Unix or Windows 
  wdinit        Not used with Unix or Windows 
  wfswait       Not used with Unix or Windows 


Added support for VSSUB DATE6. DATE6 accepts all the same
functions as DATE4 except it use 2 digit years for all date
parameters.  The century is calculated based on a 100 year
floating window. The current year is considered to be in 
the middle of this 100 year floating window. To manually 
set the century window see YYPIVOTYEAR in the OPTIONS file.

The VSSUBS DATE and DAY now default to using DATE6 internally
(unless the OPTIONS file USEOLDVSDATE option is used.)

In VSSUB DATE2 and DATE4 using functions "AJ" and "EJ" the 
input date argument was incorrectly being changed into system
format. And in functions "GD", "AD", "ED", and "JD" the day
of week was incorrectly being returned as an Alpha(9) field
instead of an Alpha(11).  These problems have been fixed.

On Unix the shared memory processing used by GETPARM/PUTPARM has
been replaced with an implementation that uses temporary files
(this is the same mechanism that is used on WIN32). If you 
require compatibility with older utilities that use shared memory 
for PUTPARM data then you can use the OPTIONS file 
option USESHAREDMEMORY, see the OPTIONS file for a complete 
description.

If you are using Shared Memory then the "out of sync" error 
messages will now only be displayed if the logic to automatically
correct the problem fails.

The WISP screen handler now handles the special case of DISPLAY-WS 
screens with horizontally repeating PIC X(79) fields being treated
as vertically repeating fields.  The following example is written 
as a horizontally repeating field but it will be displayed as if 
it were a vertically repeating field. This is an undocumented  
behavior on the Wang.

  Example: Horizontally repeating field:

  05 sc-field PIC X(79) OCCURS 10 ROW 10 COLUMN 2 SOURCE ws-field.

  Treated as Vertically repeating field:

  05 FILLER OCCURS 10.
     10 sc-field PIC X(79) ROW 10 COLUMN 2 SOURCE ws-field.

Very early releases of WISP before release 3.2 (circa 1992) 
used a screen representation that is no longer supported in 
this release. If you upgrading from a very early release of 
WISP the Cobol will need to be retranslated.

On UNIX the LINK vssub could fail with an access error if you 
attempt to run a system executable that had execute permission 
but not read permission. This has been corrected.

Corrected a problem with Acucobol Native Screen support where
a DISPLAY AND READ of a screen with a LOCKED keyboard was not
being displayed.

The WISP runtime defines a number of "pseudo" volumes that
are not explicitly specified in LGMAP.  The volumes and 
locations are:
    (CFG)    The WISP configuration directory
    (CWD)    The current working directory
    (HOME)   The users home directory
    (ROOT)   The root directory of the file system
These pseudo volumes can be used the same as any other 
volumes.  If the directory path for any of these exceeds
the LGMAP translation size then the volume will not be 
enabled.  In earlier releases the pseudo volume "CONFIG" was
defined, this has been replaced by "(CFG)".

The WISP runtime will now report any errors encountered 
while loading LGMAP.  

In the VSSUB READFDR/READFDR4 with keyword "IV" the value "V5" will
be return for Acucoobl Vision 5 files.

The VSSUB FIND was failing to find a file with an extension (like a 
print file) if no wildcard characters were specified in the file 
portion.  This has been corrected.


Changes to Utilities:

The WISP DISPLAY utility now issues a hidden GETPARM "OPTIONS"
with field RECSIZE that allows you to specify the starting
record size. A value of 0 means variable sized (line terminated)
which is the default.  The records size can be changed with
PF11.  This option is not used when the DISPLAYUTIL option
is used to specify a different display utility.

In VSX fixed warning message regarding Unrecognized fdr1filesection
for DMS/TX files.

VSX now defaults to creating uppercase file names. Use the "-lc"
option to create lowercase names.

VSX now defaults to including the Volume name in the path. Use the
"-nv" to not include the volume name.

VSX now logs all messages to the file vsx.log in the current
directory.

VSX no longer uses a default tape device, you must supply the input
device for file.

In VSX fixed misleading error messages regarding Missing EOT Block

The WPROC utility could on occasion reset the PROGLIB and PROGVOL 
usage constants to blank while executing a RUN statement. This would 
cause the RUN statement to fail.  This condition has been fixed.

The WPROC utility was not properly returning a return code when 
a proc was CALL "LINK"ed from a COBOL program. This has been fixed.


CHANGES FROM 4.4.06 TO 4.4.07
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.06 to release 4.4.07.


If upgrading on platform "HP/Compaq TRU64 Alpha (OSF/1)" the
Machine Id has changed and you will need to get new Validation
Codes.

The wusage utility would leave the terminal in raw mode after
reporting an error (such as a mis-formed command). Certain
misformed "SET" commands could cause an memory fault.  These
problems have been fix.


CHANGES FROM 4.4.05 TO 4.4.06
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.05 to release 4.4.06.

The previously separate releases of CRID and CREATE utilities have 
been combiled into a single KCSI release.  This release of WISP
adds support for the KCSI v4.0.00 release.

The WLICENSE utility will now display the current license info and 
machine id if available before beginning the licensing process.


CHANGES FROM 4.4.04 TO 4.4.05
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.04 to release 4.4.05.

Support has been added for "huge" files (above 2gig) on 32-bit 
systems that support the _LARGEFILE64_SOURCE standard (HP-UX 11, 
AIX 4.3/5, Solaris 8, and LINUX.) 

Fixed a conflict with the "Wide Characters" libraries on Unix. The 
Wide Characters libraries are not normally linked into the Cobol
runtime system. However, some third party facilities like Oracles 
ProCOBOL will cause the Wide Character libraries to be included.
There were two WISP routines, wmemcpy and wstrdup that caused a
conflict. The routine wmemcpy has been renamed WMEMCPY. The 
routine wstrdup is internal and is no longer visable.  The WMEMCPY
routine is used as part of the translation of "REWRITE CRT". 

If you have Micro Focus Cobol that was translated by an earlier
version of WISP then you will need to either retranslate with 
the latest release or you will need to edit mf/wispmf.c and 
uncomment the "#define OLD_WMEMCPY" before you rebuild the runtime.
For Acucobol user the translation is automatically performed 
in the sub85.c file.

The WSORT utility was reporting that it was unable to access the 
file when attempting to sort a consecutive (non-indexed) files.  
The problem was introduced in release 4.4.00 with the READFDRV1
changes and is now fixed.  


CHANGES FROM 4.4.03 TO 4.4.04
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.03 to release 4.4.04.

Support has been added for Micro Focus Cobol Shared Object
files. Files with and extension of ".so" (".sl" on HPUX) are now
recognized by the "LINK" routine as being Micro Focus Shared Object
files and can be run like ".int" or ".gnt" files.


CHANGES FROM 4.4.02 TO 4.4.03
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.02 to release 4.4.03.

File sorts were failing on Unix for files with character '$' in the
file name.  The file was being reported as "Not Found".  A similar
problem could occur when printing or submitting a file with a '$'
character.  There operations can involve issuing a shell command
on the file and the $ was being treated as the begining of a macro
that was then expanded.  This has been fixed, all filenames that are
using in shell commands are now 'quoted' to prevent macro expansion. 


CHANGES FROM 4.4.01 TO 4.4.02
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.01 to release 4.4.02.

The version numbers of utilities that are released with this version
or WISP are:

    CRID   v3.0.02
    CREATE v3.5.01

Added support for Acucobol-GT 5.2.

For Acucobol users the distribution file $WISPDIR/acu/sub85.c is now
specifically for use with Acucobol-GT 5.2 and is incompatible with
earlier versions of Acucobol. A new file $WISPDIR/acu/sub85_acu51.c is
provided for use with Acucobol 5.1 and earlier, it will need to be
renamed to sub85.c before it can be used.  The instructions are
provided in the file.

Added COBOL language options "-V MFSE" to the WISP translator for
Micro Focus Server Express (MFSE).  The language option "-V MF" will
now refer specifically to Micro Focus Object Cobol (MFOC).  Micro
Focus Server Express has language syntax that is not available in
MFOC.

When translating with "-V MFSE" an "OPEN SHARED" for a sequential file
will now support shared access.  When translating with "-V MF" a
warning will be issued noting that Micro Focus Object Cobol does not
support shared access to sequential files.

Corrected a problem when printing from COBOL with Mode=HOLD; the
disposition was incorrectly defaulting to "DS" (SAVE).  Fixed to
default disposition "DX" (DELETE AFTER).  This problem was introduced
in WISP 4.3.02 and applies only to printing from COBOL, it does not
affect printing with the PRINT vssub.

On WIN32 made fixes to the WISPtran Graphical interface to the
translator and compiler.  Fixed the problem on Windows 2000 of
asterisks being display in place of the output text.  Fixed the
mismatched background colors. Add the option flag to the option
text. Added WISP options /X and /M. Fixed issue with truncated
output. Incremented the version number to 1.4. 

Fixed the WDIAG utility for Micro Focus to check the correct variable
for the shared libray path.  On AIX it uses $LIBPATH, on HP-UX it uses
$SHLIB_PATH on all other Unix systems it uses $LD_LIBRARY_PATH.

Enhanced the WDIAG utility for Acucobol to display the vesrion of the
VUTIL utility.  This allows WDIAG to report the Acucobol version even
if the runtime has not been successfully built.


CHANGES FROM 4.4.00 TO 4.4.01
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.4.00 to release 4.4.01.

On Unix the VSSUB EXTRACT keyword "NA" was failing on some systems
if the runtime was built to be multi-threaded as is done with 
Acucobol 5.1.  This has been corrected.


CHANGES FROM 4.3.06 TO 4.4.00
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.06 to release 4.4.00.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC  v2.0.00
    CRID   v3.0.00
    CREATE v3.5.00

The following changes have been made to the WISP shipping kit:

    etc/wproc.txt                  Renamed from etc/wproc.lis
    etc/wisp_install_unix.txt      Installation notes
    config/videocap/*.vcap         Added .vcap extension to videocap
                                   files
    bin/hexed                      Added the hex editor utility.

This release supports Acucobol-GT 5.1 and Micro Focus 4.1 and Server
Express 2.1

Occasionaly on some UNIX systems users would get the WISP runtime
error: 

   "( 59836) %SHAREMEM-F-SHMAT Error getting PUTPARM shared memory 
   address, shmid=xxxx, errno=13"

This problem indicates shared memory (ipcs -m) is out of sync with the
shared memory control files (ls /usr/tmp/wpparms/*).  This can be
caused by programs being aborted or by not running "wsysinit"
regularly.

The "shmid=xxxxx" represents the shared memory identifier. To correct
this problem you can remove the shared memory segment by running
"ipcrm -m xxxxx" as root.  Logging off and back on will also often
correct the problem.

The WISP runtime has been enhanced to better detect and automatically
correct this problem.

Temporary file names for return codes, link parameters, WPROC global
files, and shared memory keys that used a process id or process group
id as part of the name have been changed to also include the user
id. This should prevent premission problems if the the temporary file
is not properly deleted in the case of a program aborting.

The link parameter file is no longer being created when linking to a
shell script as it is not needed and it could result in a large number
of temporary files persisting for extended durations.  This was on
occasion causing problems if programs were aborting or not being
terminated cleanly.

The "wusage flags" facility now supports flags BATCHQ, ERRLOG, and
SUBMIT for controlling Command Processor menu options for 
"Manage BATCH QUEUE", "SHOW Error Log", and "SUBMIT procedure".

The WISP translator for Micro Focus now translates the statement 
"ACCEPT xxx FROM DATE4" into "ACCEPT xxx FROM DATE YYYYMMDD".

A new flag (-X) has been added to the WISP translator that causes a
cross reference table file (named xxx.tab where xxx is the root source
file name) to be created.  Each line in the .tab file contains the tab
separated fields: PROGRAM-ID, FILENAME, LINENUM, TYPE, VALUES. The
TYPE of references are "CALL", "COPY", "OPEN", and "PROGRAM-ID".  The
VALUES field contains the name of the program called, copybook file,
file opened, and program id respectively. The .tab files from all the
programs in a system can be concatenated and loaded into a
spread-sheet or database to create a cross reference of the entire
system.

To use the Micro Focus animator with Server Express you need to follow
the instuction in the Micro Focus manuals on "Cross-session
Debugging".  You will need to login with two session and run the
animator in one and your program in the other.  You will need to set
the COBANIMSRV variable per. instructions and start your program with
the runtime (wrunmf) not with the wrun frontend. If you use the
animator with xterm it will open a second window for controlling the
animator.

Fixed bug in DISPLAY AND READ picture clause processing for zero
suppression with '*' asterisks to the right of the decimal point.

On Solaris and SCO the machine id logic has been changed to use
hardware machine serial numbers instead of a simulated machine id
based on an i-node number.  Perviously, updates or reinstallation of
the Operating System on these machines would result in a different
machine id being generated.  WISP uses the machine id for licensing,
new license validation codes will be needed when you upgrade an
Solaris or SCO machine to this release.

On Unix the PAUSE/WPAUSE vssub now sleeps in 1/100 second increments,
previously it rounded to the nearest second.

All the videocap files now have a .vcap file extension. WISP and VIDEO
now look first for videocap files to end with .vcap, if not found they
will look for videocap files with no extension (backwards compatable).

The videocap files wincon, w4w_vt220, vt220, and vt100 have been
enhanced to accept VT220 8-bit key escape sequences in addition to the
VT220 7-bit key escape sequences they previously accepted.

Blank lines in videocap files were previously being reported as
errors, this has been corrected.

Errors detected by VIDEO are now written to the WISP error log file
($HOME/wisperr.log) as well as displayed on the screen.

The Manage FILES/LIBRARIES facility entry screen now lists Volume
mappings as a single column instead of two columns to allow display of
longer directory path mappings.

The WISP translator logic that uncomments conditional code has been
changed to only apply to regular comment lines with an asterisk ('*')
in column 7.  Conditional lines that aren't regular comments are
passed through unchanged.  This allows you to place special compiler
comments that require a '$' in column 7 within conditional code
blocks.  E.g. The Micro Focus $SET compiler directive can be placed
inside a $MF_CODE conditional code block.

    010010*$MF_CODE
    010020$SET IDXFORMAT"4"
    010030*$MF_END

The WISP translator was incorrectly discarding blank lines so that they
were not written to the output .cob file, this has been fixed.

The DISPRINT utility has been changed to use READFDR4 (the Y2K
compilate version) instead of READFDR.

The VSSUB READFDR/READFDR4 has had a number of changes to better
support Acucobol Vision 2, 3, and 4, Micro Focus FHISAM 3, 4, and 8,
and C-ISAM files.  

   - The keyword "FT" (File Type) now returns "A" for all Alternate
     indexed files.
   - All Vision and C-ISAM files support keyword "RC" (Record Count). 
   - FHISAM files do not support keyword "RC" (Record Count) and
     return code 40 (Unsupport function).
   - Relative and Sequential FHISAM files support keywords "FT",
     "RL/RL", and "RT". 
   - Files that do not contain a header with structure information
     such as Acucobol sequential or relative files now return code 24
     when structure infomation is requested.  (See Option READFDRV1.)

In the VSSUB READFDR/READFDR4 added support for keyword "IX" to
retrieve the file system type of a file into an Alpha(1) field.
The file header is read to determine the type. Fixed length sequential
and relative files usually have no header and will return as Unknown. 

    V - Acucobol Vision
    C - C-ISAM (Used by Micro Focus)
    M - Micro Focus FHISAM
    U - Unknown

In the VSSUB READFDR/READFDR4 added support for keyword "IV" to
retrieve the file system version of a file into an Alpha(2) field.
The file header is read to determine the type. Fixed length sequential
and relative files usually have no header and will return as Unknown.

    V2  Acucobol Vision 2
    V3  Acucobol Vision 3
    V4  Acucobol Vision 4
    C0  C-ISAM Indexed (Used by Micro Focus)
    R0  Micro Focus FHISAM Relative
    S0  Micro Focus FHISAM Sequential
    I3  Micro Focus FHISAM Indexed 3
    I4  Micro Focus FHISAM Indexed 4
    I8  Micro Focus FHISAM Indexed 8
    U0  Unknown (no header)

A new OPTIONS file option READFDRV1 is available. It causes
READFDR/READFDR4 to behave as it did pre-release 4.4 regarding
Sequential and Relative files without known headers that describe the
structure.  Specifically:

   "FT" returns "C"
   "RC" returns 0 or 1
   "RS" returns 256
   "RT" returnS "V"

The WISP file sort facility (WISPSORT, SORTCALL, SORTLINK, and wsort
utility) with Micro Focus Server Express will use the "rebuild" utility
instead of "fhconvert" to unload indexed files for sorting.  If you have
both Micro Focus Server Express and an earlier version of Micro Focus that
has "fhconvert" on the path then you need to use the "UNLOADREBUILD"
option in the runtime OPTIONS file to force the use of the "rebuild"
utility. 

The wdiag utility now correctly reports COBVER for Micro Focus Server
Express.  It also tests for "rebuild" if "fhconvert" is not found.

Changed the location of temporary defaults files on unix to
/usr/tmp/wisptmp instead of /usr/tmp and renamed them to start with
the prefix "DEFS_" for both unix and WIN32.

The WIN32 release has been certified compatible with Windows 2000.

On Windows 2000 if using WISP in console mode (without CoStar) you
will need to set the Command Prompt Properties to disable the Edit
Options "QuickEdit Mode" and "Insert Mode" as these interfere with
mouse click processing. See the document wispntsetup.txt for complete
instructions.

The WCONFIG utility on WIN32 was aborting if the user did not have
administrator rights to write into the registry.  It now displays an
approriate error message.

On WIN32 fixed a printing problem where parts of the previous page
were showing up on following pages.  The problem occured following
pages with overstrike lines.

On WIN32 the UTILSWINDOWS option no longer applies to VSEDIT. This 
was needed because of problems with GETPARM processing by VSEDIT.

On Windows 2000 when running under telnet console input was filtering
out Escape (0x1b) and Newline (0x0a) characters. This was causing
keboard prcessing to fail if the keys generated Escape or Newline
characters.  A workaround was to use VT220 8-bit terminal emulation 
as it doesn't use these characters.  The problem has been fixed in
this release.



CHANGES FROM 4.3.05 TO 4.3.06
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.05 to release 4.3.06.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC  v1.16
    CRID   v2.98
    CREATE v3.4

On WIN32, support has been added for ACUCOBOL-GT 4.3.  This release of
ACUCOBOL-GT has changed the nature of the runtime from a statically
linked executable to a multi-threaded DLL plus a small exe file.
Several new files have been added to the release:

    wispm.lib         - WISP library with multi-threaded DLL support.
    videom.lib        - VIDEO library with multi-threaded DLL support.
    wrun32wisp.mak    - Makefile for building the ACUCOBOL-GT 4.3
                        runtime.

NOTE: You can not use the WISP NT Telnet support with ACUCOBOL-GT 4.3
as this version does not support building an "Alternate Terminal
Manager" runtime.

On WIN32 when using console I/O without Co*STAR a problem with colors
has been corrected.  Characters that should be displayed in bold (or
other non-default attributes) would on occasion be display with the
default attribute.

The DISPRINT utility has been changed to display the "Modified" date
of the file instead of the "Created" date.  The created date is not
actually stored by the system and previously what was being displayed
was the date of the last status change.

The WISP Command Processor Manage Files and Libraries facility was
aborting if you attempted to navigate down a filepath that was greater
then 80 characters long.  The aborting has been fixed however most of
the functions (rename, copy, etc) are not usable with filepaths
greater the 80 characters.


CHANGES FROM 4.3.04 TO 4.3.05
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.04 to release 4.3.05.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC  v1.16
    CRID   v2.97
    CREATE v3.4

This version of WISP has been verified to be compatible with
ACUCOBOL-GT 4.2.0.

Support for the VSSUB DATE4 has been added. In the WISP implementation
the routine DATE4 is the same routine as DATE2.  The DATE4 functions
"GG", "AG", and "EG" have been added for retrieving the system date
and time. The second argument is the returned current date in modified
Gregorian format, the third argument is the returned system time.

    CALL "DATE4" USING "GG", YYYYMMDD, HHMMSSHH.
    CALL "DATE4" USING "AG", MMDDYYYY, HHMMSSHH.
    CALL "DATE4" USING "EG", DDMMYYYY, HHMMSSHH.

Support for VSSUB READFDR4 has been added. READFDR4 has the same
parameters and restrictions as READFDR except the functions CD, ED,
and MD return the date as an alpha(8) field in YYYYMMDD format. The
function ED always returns 99991231 for the expiration date.

A bug was discovered in the WISP file sort facility (WISPSORT,
SORTCALL, SORTLINK, and wsort utility) when sorting files with
variable length records where the file was too large to sort in memory
(the file size was larger then the WISPSORTMEM setting). It also
required the file contained short records that were less then half the
length of the largest records in the file.  Under some circumstances
the sort facility would create a temporary file that grew until it
consumed all the disk space then it would abort. This problem has
been corrected.  If you are using an earlier version of WISP the
workarounds are; (1) Increase WISPSORTMEM to allow the sort to occur
in memory, (2) Create the file with fixed length records instead of
variable length records.

The WTITLE routine has been enhanced to set the Co*STAR for WISP
windows title when Co*STAR is in use.

The WTITLE routine was aborting on WIN32 when used with Co*STAR for
WISP. This has been corrected.

On UNIX if you were using the Acucobol +e option and ran a sub-shell
(e.g. "Enter Commands" from Help) the shell would not display command
prompts.  This was caused because the Acucobol +e option redirects
STDERR to a file and the shell only displays prompts if STDERR is a
tty.  To circumvent this problem, the WISP runtime now tests if STDERR
is a tty before running a sub-shell.  If STDERR is not a tty but
STDOUT is then STDERR is re-directed to a duplicate of STDOUT while
the shell is being run.

On UNIX, if STDIN is not a tty then the WISP runtime will now assume
the process is being run in background.  This allows the runtime to
automatically detect some cases where it is being run in
background. This only effects situations where a program is being run
in background by some other means then SUBMIT or WSUBMIT.  Note, this
can not detect the situation where the program is run with an '&'
ampersand, this still requires you to set the WISPBACKGRD=true
variable. 

The program name displayed on GETPARM screens ("Information required
be XXX") was often incorrect and misleading, it was the name of the
program that last call "initwisp2".  The name displayed has been
changed to be the "run name", that is the name of the first (highest
level) program of the current link level.

The WDIAG utility has been enhanced to clearly distinguish between
errors and warnings.  All errors are now prominently displayed and
the summary lines give a total number of errors detected.
Additionally if an Acucobol environment is detected then WDIAG will
not check the Micro Focus configuration and vice versa.

On WIN32, if running in console IO mode (without Co*STAR) you will now
see a red "W" icon on the left side of the title bar.  You can replace
this icon for COBOL programs by overwriting your own icon in the file
acu\wispicon.ico then rebuilding the Acucobol RTS. You can not replace
the icon in WISP utilities such as WSHELL, WPROC, WSORT, etc.

A bug was discovered in the pseudo-blank processing when using a
videocap file that did graphic-mode processing (e.g. vt220 and
vt100).  If typing into a lower case field the backspace or delete
keys could leave the terminal in graphics mode and following
characters would be incorrectly displayed using the graphics character
set.  This has been corrected in this release.  Additionally a
workaround was to edit the videocap file and disable the graphics mode
processing. See the "ansi" videocap file for an example of a vt100
compatible videocap that has graphics mode disabled, the fields
affected are: enter_graphics_mode, exit_graphics_mode, pseudo_blanks,
and graphstr.

On WIN32 the WISPTRAN utility had a problem on Windows NT with the
registry that would cause it to abort on start up.  This has been
corrected. 

A problem was discovered on Solaris 2.6 where the Acucobol runtime was
built using the BSD version of the C compiler (/usr/ucb/cc).  This
results in several odd issues including problems with LGMAP and 
READVTOC.  The solution is to always use the ANSI C compiler "c89" to
build the runtime, it is usually found at /opt/SUNWspro/bin/c89. Be
sure to include "/opt/SUNWspro/bin" on your $PATH before "/usr/ucb"
and set the environment variable CC=c89.

    $ PATH=/opt/SUNWspro/bin:$PATH
    $ CC=c89
    $ export PATH CC

The SCRATCH VSSUB was failing to delete the index portion of a two
part file if it was unable to file the data portion or if the file
path contained a '.' character.  This has been fixed and SCRATCH has
been changed to always attempt to deleted both the data and the index
file even if one half is missing.

The FIND VSSUB was failing to find the index portion of a two part
file if the data portion was missing. This has been corrected.

The OPTIONS file now allows you to specify a full path to the Acucobol
vutil utility with the VUTIL option.


CHANGES FROM 4.3.03 TO 4.3.04
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.03 to release 4.3.04.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC  v1.16
    CRID   v2.96
    CREATE v3.4

The vssub DATE2 functions "E+" and "A+" were incorrectly returning the
new date in "G" format.  The routine has been corrected to return the
new date in the correct "A" or "E" format.  A workaround to this
problem was to first convert the date to "G" format and use the "G+"
functions then convert the result back to the desired format.

The WISP runtime handling of the WORKLIB has been enhanced to better
emulate the Wang VS behavior.  Single "#" work files (e.g. #ABCD) will
be automatically deleted when the link level they are created in
terminates.  Double "##" temporary files and other files that are
created on the WORKLIB will automatically be deleted when the highest
link level terminates. (This excludes print files that are not created
in the WORKLIB.)  If you do not want the WORKLIB to be automatically
deleted when the highest link level terminates you can prevent it by
setting the KEEPWORKLIB option in the OPTIONS file.  Previously all
files accessed in the WORKLIB would be deleted when the link level
terminated and the WORKLIB was never automatically deleted (except on
WIN32). (In 4.3.02 a previous WORKLIB bug was "corrected" which caused
work files to be deleted when a link level terminated.)

On UNIX the tty control logic has been changed to perverse the stty
settings for IXON, IXOFF, IXANY, and IMAXBEL.  Previously IXON and
IXOFF would be turned on and IXANY and IMAXBEL would be turned off.
This is the default settings and most users will not notice any
difference.  Now, these stty settings will be preserved by the WISP
screen handler.

Windows NT telnet support has been added to the WIN32 version of WISP.
The telnet support allows WISP migrated applications to be run on a
Windows NT server from a remote client using telnet.  A full
description of WISP support for NT telnet is included in the file
wisp\etc\nttelnet.txt.

On WIN32 the utility WRUNT.EXE is now included in the shipping kit. It
is a console version of WRUN.EXE and is included to support telnet.

On WIN32 the additional videocap files ANSI and XTERM are now included
to support telnet.

On WIN32 the BELL vssub has been fixed work properly with Windows and
with Co*STAR.


CHANGES FROM 4.3.02 TO 4.3.03
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.02 to release 4.3.03.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC  v1.15
    CRID   v2.95
    CREATE v3.3

Support has been added for Microsoft Windows 98.  The NT version of
WISP now is supported on Windows 95, Windows 98, and Windows NT.  This
is generically referred to as the WIN32 platform.  Earlier versions of
WISP may also work on Windows 98 but two issues were discovered and
corrected in testing.  The first issue is that the wrong window would
get the "focus" when returning from a CALL "LINK". This was caused by
differences in the way Windows 98 handles windows "Z-orders".  The
second issue is, on occasion parameter passing to the procedure
interpreter (WPROC) would fail to find the correct parameter file.
This appears to be caused by differences in the way environment
variables are handled on Windows 98.  If you experience these problems
on Windows 98 you should upgrade to at lease version 4.3.03 of WISP.

Support for "soft links" has been added to the UNIX versions of WISP
for both Acucobol and Micro Focus COBOL.  The OPTIONS file options
USESOFTLINK and USEHARDLINK as well as the routines of the same names
now work on UNIX as well as WIN32.  Soft links are documented in the
WISP manual (and release notes) as available only on WIN32, the same
documentation now applies to UNIX.  The documentation refers to a
problem with recursive calls, with Acucobol you can set the
configuration file (ACUCONFIG) entry "RECURSION 1" to allow recursive
calls. 

On WIN32 when using Costar and LINK'ing to a .BAT file a unwanted and
empty command processor window would appear. This has been corrected.

On WIN32 if Acucobol attempted to display a message box when the
runtime was started (e.g. a license warning etc.) the message box
would be hidden and cause the process to hang without any warning.
The task manager would show the process was still running but it would
not have any visible windows.  This has been fix so that Acucobol
message boxes are now displayed.

On WIN32 the logic that captures the output from a print PQCMD or a
submit command and writes it to the wisperr.log file was not working
and the output from these commands was not being written. This logic
is now working but note, it is only active when WISPDEBUG=FULL tracing
is being used.

The file OPEN GETPARM logic has been corrected so that the initial
hidden GETPARM is only issued the first time the file is opened.  The
logic was previously, incorrectly, issuing the hidden GETPARM
every time the file was opened.  Under certain circumstances this could
result in GETPARM screens not being satisfied because the open logic
for one file was using multiple PUTPARMS.

The WISP translator when processing DISPLAY AND READ was incorrectly
splitting a long list of PFKEYS. The start of the literal was placed in
the wrong column thus causing embedded spaces in the continued
literal.  This has been corrected. Additionally a workaround was to
ensure the DISPLAY verb started in column 12.

The WISP translator has been changed for Acu4GL (-VACU -4) to generate
COMMIT statements instead of FREE ALL statements.  This is needed
because the ACUCOBOL statement FREE ALL when used with Acu4GL does not
release Oracle locks.

The WISP translator has been enhanced to support the END-OF-PAGE
clauses on the WRITE verb.  It also recognizes the LINAGE clause in
the FD statement needed to use the END-OF-PAGE clauses.

The WISP translator was incorrectly translating SORT verbs that used
the same file for the USING and GIVING clause. This caused the PF3
getparm screen to be issued at runtime.  This problem was introduced
in version 4.2.01 and has now been corrected.

The Wconfig utility for WIN32 has been modified to remove the unused
ACP tab.  The USERDIR: now defaults to C:\users for a local
installation and to \\SERVER\users for a network installation.

The WPROC procedure interpreter SCRATCH statement now defaults to
OUTLIB and OUTVOL when the library or volume are not specified.  This
now matches the behavior specified in the Wang Procedure Language
Reference manual.  Previously the blank library or volume would be
passed to the VSSUB SCRATCH, which is invalid, and an error would
occur. 


CHANGES FROM 4.3.01 TO 4.3.02
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.01 to release 4.3.02.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC  v1.14
    CRID   v2.95
    CREATE v3.3

CRID for Micro Focus was failing to properly mark a relative record
deleted. This has been corrected.

On SCO, ELF executable files were not being recognized as executable
so call LINK's were failing.  This has been fixed.

The DISPLAY utility was crashing occasionally when the PF11 record
length was set to less then 80.  This has been fixed.

The generic_clear_field and generic_clear_after keys when used with
READ and REWRITE screen IO were incorrectly doing an erase to end of
line.  This has been corrected.

The default print command (ulp) when using UniQue Print Queue now
includes the "-q" option for "Quiet Mode" printing.  This will stop
all the wisperr.log print messages for successful prints.

On Windows NT/95 when using the USESOFTLINK option there could be
problems opening temporary files (##xxxx).  This would happen when
multiple linked to programs would open temp files then unlink then
relink and open more temp files.  This problem does not occur when
hard links are used or when CALL's are used.  It has been corrected.

A new generic print queue mechanism has been implemented using the
PQCMD OPTIONS file option.  The PQCMD option is used as a template for
the print queue command.  The template should contain a number of
macros which are substituted with the actual runtime values.

There are three types of macros, "simple", "map", and "optional".  The
simple macros (e.g. %FILE%) are always replaced by there substitution
values.  The map macros (e.g. %LPMAP%) lookup there value in a map
file, if a map file entry is not found then it substitutes to nothing.
The optional macros (e.g. %HOLDOPT%) only have a value when a certain
condition is true, otherwise they substitute to nothing. The value of
optional macros is defined by OPTIONS file entries.

The order of macro substitution is optional macros first, map macros
second, then simple macros.  Optional macro values may contain map and
simple macros but can not contain optional macros.  Map macro values
may contain simple macros but can not contain optional or map macros.

The following OPTIONS file options are used to define the generic
print queue interface.

    Option          Meaning
    ------------    -------
    PQCMD           The print command template. The first part of the
                    command must be an executable program.
    PQCLASSOPT      %CLASSOPT% macro when class is not " " (blank)
    PQCOPIESOPT     %COPIESOPT% macro when copies not 1
    PQPRTNUMOPT     %PRTNUMOPT% macro when printer number not 000
    PQFORMOPT       %FORMOPT% macro when form number not 000
    PQHOLDOPT       %HOLDOPT% macro when mode is 'H' (hold)
    PQDELOPT        %DELOPT% macro when disp is "DX" (delete)
    PQREQOPT        %REQOPT% macro when disp is "RS" (requeue)
    PQDELETELOCAL   Delete file locally if disp="DX" and not hold.
                    Use when the print command doesn't support a
                    delete after option and the print command has
                    taken a copy of the file.
    PQNOHOLD        Don't issue print command if mode='H'. This is
                    used when the print queue does not support a hold
                    option.

The following macros can be used in defining the generic print queue
command.

    Macro           Meaning
    -----           -------
    %FILE%          The file to print (fully qualified)
    %CLASS%         The PRTCLASS value "A"-"Z" and " "
    %FORM%          The FORM_NUM value "000"-"999"
    %COPIES%        The number of copies to print
    %PRTNUM%        The PRINTER value "000"-"999"
    %LINES%         The LINES per page value "000"-"999"
    %DISP%          The disposition "DS", "DX", "RS"
    %MODE%          The mode "S" or "H"
    %XID%           The EXTRACT "ID" value. (3 char user id)
    %XNA%           The EXTRACT "NA" value. (Long user name)

    (Optional macros)
    %CLASSOPT%      PQCLASSOPT when %CLASS% is not " ".
    %COPIESOPT%     PQCOPIESOPT when %COPIES% is not 1.
    %FORMOPT%       PQFORMOPT when %FORM% is not 000.
    %PRTNUMOPT%     PQPRTNUMOPT when %PRTNUM% is not 000.
    %HOLDOPT%       PQHOLDOPT when %MODE% is "H". (Hold)
    %DELOPT%        PQDELOPT when %DISP% is "DX". (Delete)
    %REQOPT%        PQREQOPT when %DISP% is "RS". (Requeue)

    (Map file macros)
    %LPMAP%         LPMAP file entry based on PRTCLASS
    %PRMAP%         PRMAP file entry based on PRINTER
    %FORMMAP%       FORMS file entry based on FORM_NUM

The following examples show how you would implement an interface to
the UniQue Print Queue on unix, lp on unix, and UniQue on NT.

    #
    # Example 1) Implementation for UniQue Print Queue on UNIX
    #
    PQCMD ulp -q %CLASSOPT% -f%FORM% -n%COPIES% %PRTNUMOPT% \
        %HOLDOPT% %DELOPT% %REQOPT% %FILE%
    PQCLASSOPT  -C%CLASS%
    PQPRTNUMOPT -P%PRTNUM%
    PQHOLDOPT   -M hold
    PQDELOPT    -M del
    PQREQOPT    -M re

    #
    # Example 2) Implementation for LP on UNIX
    #
    PQCMD lp -c -s -n%COPIES% %FORMMAP% %LPMAP% %PRMAP% %FILE% 
    PQNOHOLD
    PQDELETELOCAL

    #
    # Example 3) Implementation for UniQue Print Queue on NT
    #
    PQCMD ulpr.exe -Huniquehost -p515 -q %CLASSOPT% -f%FORM% \
            -n%COPIES% %PRTNUMOPT% %HOLDOPT% %REQOPT% %FILE% 
    PQCLASSOPT  -C%CLASS%
    PQPRTNUMOPT -P%PRTNUM%
    PQHOLDOPT   -M hold
    PQREQOPT    -M re
    PQDELETELOCAL

NOTE: The above PQCMD configuration for UniQue Print Queue on NT was
tested with version 3.31.23 of UniQue Print Queue for NT.  Please use
this version or later of UniQue on NT.  The "-M del" option on this
release does not delete the file so the PQDELETELOCAL options needs to
be specified.  The "-Huniquehost" must be modified to specify the
actual host machine where the UniQue Print Queue is running.  See the
UniQue Print Queue documentation for complete information on the
"ulpr.exe" client program.

The new PQMANAGER option allows you to specify the command that gets
run when the "Manage Print Queue" option is selected from the WISP
Command Processor.  (This options is only used on UNIX, on NT you
would start the queue manager is a separate window.)
This example shows the UniQue Print Queue manager.

    PQMANAGER /usr/spool/uprint/unique -q -w

On Windows NT/95 a new batch file WDIAG.BAT has been added. When you
run wdiag.bat it will run the Wdiag.exe program and display the
results using Notepad.exe.


CHANGES FROM 4.3.00 TO 4.3.01
=============================
The following items describe corrections and improvements that have
been made to the WISP toolkit from release 4.3.00 to release 4.3.01.

The version numbers of utilities that are released with this version
or WISP are:

    WPROC v1.14
    CRID v2.94
    CREATE v3.3

Mouse support for Co*STAR and Windows has been added to WPROC. The
W4WMAP file will now also apply to screens displayed by the WPROC
procedure interpreter when using Co*STAR or when on Windows NT/95.

Problems with CRID and CREATE for Micro Focus COBOL have been found
and corrected.  See the CRID and CREATE release notes for a complete
description of the changes.  The following new releases are available:

    CRID/MF   2.94
    CREATE/MF 3.3

The WDIAG utility has been enhanced to perform more detailed
diagnostics.  This gives the user and technical support better
information for detecting and correcting configuration problems.

The WISP runtime now allows space characters in filenames. This allows
you to reference files in standard Windows directories such as
"C:\Program Files".  When translating Wang style file names the only
place embedded spaces are allowed is in the volume translation as
specified in LGMAP.  Embedded spaces are not allowed in the file or
library components.

The WLICENSE utility on NT/95 has been enhanced to allow a network
license server to be licensed from a client. Previously WLICENSE had
to be run from the server.

The printing facility on NT/95 has been greatly enhanced with a number
of new FORMS file keywords:

    Keyword   Description                       Default
    =======   ===========                       =======
    points    Point size of characters.         0
              0=calculate from cpi & lpi
              n=point size (eg. 9,10,12)

    face      Face name of the font to use.     "Courier New"
              Maximum length is 31 characters.
              It must match installed font name
              exactly and be enclosed in quotes
              if it has embedded spaces.

    wrap      Flag to wrap long lines.            0
              0=truncate long lines
              1=wrap 

    tm        Top margin. Value is in lines.      2
              Used to vertically center the 
              printable area of the page.

    lm        Left margin. Value is in columns.   0
              Used to horizontally center the
              printable area of the page.

The points keyword is used to specify the size of the characters in
72/100ths of an inch.  Common points values are 9, 10, and 12.  If
points is not specified the character size will be calculated to fit
based on the lpi and cpi.

The face value must match exactly the name of the font type face.  It
will normally need to be a fixed pitch font unless the data being
printed was specifically designed to be printed with a variable
pitched font. If the name contains spaces it must be enclosed in
quotes (e.g. face="Letter Gothic").

Page length (lpp) is the number of lines that will be printed on a
page and does not include the top margin (tm) value.  Page width (pw)
is the number of columns that will be printed and does not include the
left margin (lm) value.  These values should be calculated by
multiplying the printable area of the page by the lpi or cpi values.
The printable area of a page is usually 0.5 - 1.0 inches less then the
full size of the page.

The defaults for standard letter paper:
    pw  = (width  - margin) * cpi =  (8.5 - 0.5) * 10 = 80
    lpp = (length - margin) * lpi = (11.0 - 1.0) *  6 = 60

You must ensure that lpp+tm and pw+lm will fit onto the printable area
of a page.  If they do not fix then lines or columns will be "lost"
off the edges of the paper without any warnings.

The maximum page width (pw) plus left margin (lm) value is 500.  The
maximum page length (lpp) plus top margin (tm) value is 500.

When overstriking (AFTER ADVANCING 0 LINES) each overstrike line is
offset 2 pixels.  Each overstrike line counts against the maximum page
length.  If text wrapping is enabled then overstiking will be
disabled.

The default page length (lpp) value has been changed to 60 it
previously was 66 which was too large and caused pages to be cut-off.

The cpi and lpi settings were previously not being calculated
accurately, this has corrected.

NOTE: Previously the lpp value included an undocumented default 2 line
top margin and 2 line bottom margin that made the lpp value very
difficult to calculate.  If you are upgrading from an earlier release
you should recalculate the lpp values in your FORMS files.

The vssub SET now supports keywords JC, JL, and JS. Wproc also support
SET of JOBCLASS, JOBLIMIT, and JOBQUEUE.

On Windows NT/95 if a child processes window was moved the change was
not reflected in the parent processes window.  When the child
terminated the parents window would "jump" back to where it originally
was before the child started.  This was distracting and has been
corrected.

The WISP translator had problems with the NO_FDFILLER (-f) and
NO_WSFILLER (-w) options if the total number of FILLER fields exceeded
1224 (sequence "X0").  This has been corrected and the names of the
generated fields have changed to "WISP-FILL-xx" where "xx" is a
sequential number that can grow to as many digits as needed.

The WISP translator now recognizes the READ PREVIOUS statement syntax.

The WISP translator now add an "AFTER ADVANCING 1 LINE" clause to
WRITE statements for PRINTER files that do not have an advancing
clause.  On the Wang this was the default behavior.

In the WPROC procedure interpreter, a CALL statement where the label
being called was an expression, instead of a literal, was failing to
properly setup the return address for the END statement. When the END
statement was executed the logic would branch to an invalid location
in the procedure that would then abort. This has been corrected.

The WISP file sort facility (SORTCALL, SORTLINK, WISPSORT, and WSORT)
has been enhanced with a new sort key type "Y" that represents a two
digit year (01 YY PIC 99 DISPLAY.)  The sort value of a "Y" key is
calculated based on a pivot year.  As an example, a pivot year of 30
gives YY a range of 1931-2030.  This COBOL code fragment illustrates
the base pivot year concept for converting a 2 digit year into a 4
digit year.

    01  YY        PIC 99.
    01  YYYY      PIC 9999.
    01  PIVOT-YY  PIC S99 VALUE 30.

    IF YY > PIVOT-YY THEN
        COMPUTE YYYY = 1900 + YY
    ELSE
        COMPUTE YYYY = 2000 + YY
    END-IF. 

The pivot year is set by the YYPIVOTYEAR option in the OPTIONS file.
If not set then pivot year will default to "-1" that gives YY a range
of 1900-1999.

    YYPIVOTYEAR 30

When using ACUCOBOL native screens and running in background, a
correction GETPARM (from an OPEN file status) would hang the process
instead of aborting.  The WISP runtime has been changed so that if
running in background it uses WISP screen logic because it knows how
to handle screen IO requests in background.  It will write the screen
contents to the wisperr.log file then abort.  This only applies to
GETPARMS and to WISP generated screens, not to application screens.
It is up to the programmer to ensure that applications do not attempt
screen IO in background.

The VSX utility has been enhanced to support files with ACL's.
Previously the ACL was being mistaken for data and corrupting the
output file.


CHANGES FROM 4.2.02 TO 4.3.00
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.2.02 to 
release 4.3.00.

The version numbers of utilities that are released with this
version or WISP are:

    WPROC v1.10
    CRID v2.92
    CREATE v3.2

This release contains ACUCOBOL native screens support for Windows
NT/95.  See the document wispacn.txt in the wisp/acu directory for
a complete description of ACUCOBOL native screens support on
Windows NT/95.

Support has been added for ACUCOBOL Vision 4 files.  A Vision 4
file consists of two (or more) physical files that consists of a
data portion and an index portion.  The main data file by default
has no extension and the main index file has an extension of
".vix".  The WISP routine "wfname" (used by "wfopen3") will
generate the filename path (used in the ASSIGN TO clause) to the
main data file without any extension.  ACUCOBOL allows Vision 4
files to be separated so that the multiple physical files can
exist in different directories.  If a Vision 4 file consists of
more then the two main physical files or if the physical files do
not exist in the same directory then the routines "RENAME",
"SCRATCH", "FILECOPY" and the utility WCOPY will not work
correctly.

Support has been added for AcuServer on Windows NT using a WISP
for Windows NT/95 client.  This allows a WISP migrated application
running on Windows NT/95 to access files on a Windows NT server
using AcuServer.  To relink an AcuServer client enabled runtime
with WISP you will need a copy of ACUCOBOL-GT that is client
enabled plus the PC/TCP libraries (available from Acucorp).  The
command to relink a client enabled WISP runtime is:

    C:\WISP\ACU> NMAKE /F WWRUNCBL.MAK CLIENT= RTS

See the makefile WWRUNCBL.MAK for further information on building
an Acuserver client enabled version of the runtime.  
The WISP support for AcuServer on NT is the same as described in
the WISP manual for UNIX except that files must be accessible
using a Windows UNC name instead of NFS as used on UNIX.  As an
example let say your volumes are located on "SERVER" in directory
C:\VOLUMES which is shared with a share name of
"\\SERVER\VOLUMES".  The LGMAP would have UNC style entries:

    LGMAP:
        VOL100 \\SERVER\VOLUMES\VOL100
        VOL200 \\SERVER\VOLUMES\VOL200

You would then need an RVMAP which would translate the UNC style
file names into an AcuServer file name.

    RVMAP: 
        \\SERVER\VOLUMES\  @SERVER:C:\VOLUMES\

All of the AcuServer warnings and restrictions described in the
WISP manual also apply to the Windows NT version.  WISP does not
add any special support for "cross-platform" use of AcuServer for
use between Windows and UNIX. 

The runtime OPTIONS file option MOUSENONMOD has been added.  This
option instructs the runtime to allow you to mouse position to a
non-modifiable position on the screen.  Normally you can only
position into a modifiable field or a tab-stop.  This option is
only meaningful when used with Co*STAR or on Windows NT/95.

The record size limit for file sorting (WSORT,SORTCALL,WISPSORT)
has been increased from 2024 bytes to 9999 bytes.

The FORMS file on Windows NT/95 supports a new option "raw=1" that
allows printing of a file that contains raw (fully rendered) data.
This option is useful if your applications generate print files
that contain printer control codes for a specific printer such as
a postscript or PCL printer.  If this option is specified then the
file is sent to the printer without processing using the RAW print
driver.  If the "raw=1" options is used then all other FORMS
options will be ignored so none should be specified.

    Example FORMS file:

    012 pagelength=66 pagewidth=96 cpi=12 lpi=6 landscape=0
    017 cpi=16 lpi=8 lpp=88 pw=133 landscape=0
    200 raw=1

The runtime OPTIONS file option UTILSWINDOWS has been added.  The
UTILSWINDOWS option instructs the runtime to run utilities
(e.g. DISPLAY, VSEDIT, etc.) in separate windows.  This option is
currently only meaningful on Windows NT/95 and will be ignored on
other systems.

The runtime OPTIONS file options DISPLAYUTIL option allows you to
specify a substitute "DISPLAY" utility.  The substitute display
utility should be either on the PATH or it should be specified as
a fully qualified file path.  This utility must accept a single
command line argument which is the name of the file to display.
This utility will be used when a call "LINK" to "DISPLAY" is
performed or when a "Display" option is selected from "Manage
Files and Libraries".  The substitute display utility is expected
to not issue getparms, the getparms will be issued by the runtime
and translated into a filename before the utility is run.  On
Windows NT/95 the Notepad utility makes a good substitute.

    DISPLAYUTIL notepad.exe

The WISP translator has been enhanced with support for the
conditional code directives $ACN_CODE $ACN_ELSE and $ACN_END for
translating to ACUCOBOL native screens using the -VACN language
flag.

If a file is originally opened from COBOL as a "work" file,
meaning the file name starts with a '#' character or it is in the
WORKLIB on WORKVOL, then it was marked as a "work" file.  The
file, library, or volume names could later be changed so that it
was no longer a work file.  If it was re-opened WISP was
mistakenly thinking it was still a work file and it was adding
it's directory path to the WLIBLIST file.  This has been
corrected.

A bug was introduced in 4.1.03 which could cause files to be
incorrectly treated as "work" files and there directories added to
the WLIBLIST.  This would result in the PF3 GETPARM not being
displayed when the file was opened OUTPUT and already exists.

The non-ASCII character support introduced a problem when the
CHARMAP file was not being used.  Invalid input characters such as
the ESC character (27) were being treated as valid character data
and was entered into the field instead of ringing the bell.  This
has been corrected so that characters outside the normal ASCII
range (32-126, Space thru '~') are considered invalid unless they
are mapped in the CHARMAP file.

The CREATE utility does not obey the V-VERSION option in
the ACUCOBOL A_CONFIG file.  It was always creating Vision 4
files. It has been changed to default to creating Vision 3 files
unless the environment variable V_VERSION=4 is set.

A new Co*STAR for WISP attribute mapping mode has been added and
is referred to as "Version 2" mapping mode.  The runtime OPTIONS
file option COSTARV2 instructs the runtime to use version 2
attribute mapping when Co*STAR for WISP is used.  The version 2
attribute mapping preserves all of the Wang FAC attributes
including the UNDERLINE attribute which is not available in the
original (version 1) attribute mapping.  With version 2 all
"special" fields have the REVERSE attribute, protected fields are
unchanged, and modifiable fields have the REVERSE attribute added.
Hotspots are REVERSE+BLINK+UNDERLINE, and tabstops are
REVERSE+BLINK.  Note that on the Wang, the BLINK attribute is
actually BLINK+BOLD so the hotspot and tabstop attributes will not
conflict with any Wang attributes.  If you use the COSTARV2 option
you will also need to use a Co*STAR color scheme which is
compatible (e.g. "w4w_v2").  You can also specify version 2
attribute mapping by setting the environment variable W4W=2.  The
following table shows how the Wang field attributes are mapped
into Co*STAR attributes for both Version 1 and 2 attribute mapping
modes.  Use this table for customizing your color schemes.

  Wang                  Version 1          Version 2
  ====                  =========          =========
  Prot+Dim              Normal             Normal
  Prot+Bold             Bold               Bold
  Prot+Blink+Bold       Blink+Bold         Blink+Bold
  Prot+Line+Dim         Bold               Line
  Prot+Line+Bold        Bold               Line+Bold
  Prot+Line+Blink+Bold  Blink+Bold         Line+Blink+Bold
  Mod+Dim               Line               Rev
  Mod+Bold              Line+Bold          Rev+Bold
  Mod+Blink+Bold        Line+Blink+Bold    Rev+Blink+Bold
  Mod+Line+Dim          Line+Bold          Rev+Line
  Mod+Line+Bold         Line+Bold          Rev+Line+Bold
  Mod+Line+Blink+Bold   Line+Blink+Bold    Rev+Line+Blink+Bold
  (Hotspot)             Rev                Rev+Line+Blink
  (Tabstop)             Rev+Blink          Rev+Blink

NOTE: Very old versions of Co*STAR do not allow you to map each
individual combination of attributes.  This capability is needed
for version 2 mapping but was not available when version 1 was
originally produced.

EDE on Windows NT/95 uses the environment variable VIDEOHOME to
find the directory for the calendar and notepad data files. If
VIDEOHOME is not defined it used "C:\".

The WISP translator by default generates code which uses automatic
record locking mode.  It has been found that there are two cases
where automatic record locking will release a record lock which on
the Wang would not release the record lock.  If you do a READ WITH
HOLD then either a READ (without hold) or a WRITE on the same file
the record lock will be released where on the Wang the lock will
kept.  If you have applications that do the above then you should
consider retranslating them with WISP using the new "-M" option
for manual record locking.

The WISP translator has a new option "-M" for using "manual"
record locking mode.  The WISP translator will by default use
"automatic" record locking mode which has the problem described
above.  If manual records locking mode is specified then the
record locking will behave the same as on the Wang.  With manual
record locking mode a READ (without HOLD) or a WRITE on the same
file will not release a locked record the application previously
acquired with a READ WITH HOLD.  The "-M" option may not be used
with the "-S" (NODMS) option.

The WCOPY utility on NT/95 has been changed to ignore command line
arguments instead of displaying the "Usage" message.

Screen tab-stops and menu-picks that use a NUMPROT FAC (x86 or
x8E) followed by a pseudo-blank (x0B) were not working correctly
if the "Pseudo blank characteristics" used a BLANK for the
character options and an UNDERSCORE for the rendition setting. The
tab-stop that used to display as an underscore character was
not being displayed (it was displayed as a space character). The
problem was introduced in 4.2.00 and has now been corrected.


CHANGES FROM 4.2.01 TO 4.2.02
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.2.01 to 
release 4.2.02.

This release contains the second pre-release of ACUCOBOL native
screens support.  The WISP support for ACUCOBOL Native Screen is
described in the document wispacn.txt in the wisp/acu directory.

The VSX utility now has a "-v" option which will cause the VOLUME
name to be included as the first level of the output file path.
This is useful if the backup tape contains multiple volumes with
duplicate library and file names.

The WISP translator has been enhanced to better handle COBOL-85
reserved words which were not reserved in COBOL-74.  If a COBOL-85
reserved word is used as a data name in a data description entry
the WISP translator will automatically add it to the list of
reserved words.  The WISP translator will rename the keyword with
a prefix of "KW-" (earlier versions of WISP used "W-" which
conflicted too often with other data names).  The reserved words
CLASS, DEFAULT, OTHER, SCREEN, WAIT, and TAB were removed from the
internal default list.

The makefile for the ACUCOBOL runtime system on UNIX, wruncbl.umf,
now also copies the ACUCOBOL license file (runcbl.alc) to match
the new runtime system (e.g. wruncbl.alc).  See the ACUCOBOL
installation instruction for further information on the ALC files. 

The WISP translator was not recognizing qualified key names which
used the keyword "IN" instead of "OF".

The special hook for Co*STAR customization "W4WPOSTWRITE" was not
being activated following a "screen pop" which occurs when
returning from the HELP screen and from a GETPARM screen. This has
been corrected.

A new special hook for Co*STAR customization "W4WSCREENNAME" has
been added.  When this environment variable is set the api string
will be transmitted before the DISPLAY and READ logic is
performed.  The program name and the screen name separated by a
colon will be appended to the api string, the control character
(127) will be added to beginning and end of the string.

   <127><api string><program name>:<screen name><127>

The DATENTRY program, part of the CRID utilities, was not
correctly handling non-updateable fields that had occurs values.
This has been corrected in version 2.92 of CRID.

If the last statement in a COBOL program was a COPY statement and
copybook files was being generated (-C or -1 option) then the WISP
translator was generating it's ending logic into the copybook
file.  This has been corrected.


CHANGES FROM 4.2.00 TO 4.2.01
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.2.00 to 
release 4.2.01.

The WISP translator has been enhanced to recognize full Wang VS
COBOL 85 syntax as defined in the Wang VS COBOL 85 Reference
manual.  Earlier versions did not fully handle scope delimited
statements like END-IF, END-READ etc. and did not handle "NOT"
clauses like NOT INVALID KEY and NOT AT END etc.  Certain
statements are still not supported (e.g. HOLD LIST, BEGIN
TRANSACTION, etc.) but proper warning messages are displayed.

Earlier versions of the WISP translator when generating .lib
copybook files (-C or -1 options) would occasionally mis-place
statements into following (wrong) file, this would usually only
happen when consecutive COPY statements were used.  This has been
corrected.

The WISP translator has been enhanced to better handle complex
READ statements.  Previously complex READ statements where split
into multiple components and portions of the logic was relocated
into a separate paragraph which was then PERFORM'ed.  The READ
logic has been simplified and is now all performed in-line.

The WISP translator now attempts to resolve file organization and
access mode conflicts automatically.  A SEQUENTIAL file with a
RELATIVE KEY is changed to have an organization of RELATIVE.  A
SEQUENTIAL file without a RELATIVE KEY will be changed to have
SEQUENTIAL access mode.  Although WISP makes these changes
automatically it is highly recommended the original source code be
changed to ensure it is correct.

The WISP translator now correctly handles MERGE statements and
SORT statements with multiple input and output files.  

The WISP translator now correctly handles EVALUATE statements.

The WPROC utility had several problems relating to global
variables not being found and local variable with the same name as
global variables causing aborts.  These have all been corrected in
WPROC version 1.09.  See wproc.lis for additional details.

The WPROC utility was corrupting arguments on RUN statement that
passed more the 18 arguments.

The WISP translator now correctly handles READ's of the
workstation then include the AT END or INVALID KEY clauses.

The keyword DAY-OF-WEEK was removed from the default reserved
words file.  If your applications use DAY-OF-WEEK as a data name
you will need to add it to your words file.

The WISP translator was failing to correct the UFB argument in a
CALL "SCREEN" statement, this has been corrected.


CHANGES FROM 4.1.03 TO 4.2.00
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.1.03 to 
release 4.2.00.

Acucobol has just released version ACUCOBOL-GT 3.2. This release
contains a new indexed file system "Vision 4" which is radically
different from their earlier indexed file system "Vision 3".  Any
customer that upgrades to ACUCOBOL-GT 3.2 (or later) will need to
set the Acucobol configuration entry "V-VERSION 3" to instruct the
Acucobol runtime to use Vision 3 files as the default file type.
The WISP runtime does not yet support Vision 4 files so vssubs
like READFDR, RENAME, SORTCALL, and utilities WCOPY and WSORT may
not work correctly.  See appendix F of the Acucobol-GT 3.2 manual
for information on changes, and section 6.1.3 of the User's Guide
for information on Vision 4 files.  WISP support for Vision 4
files is planned for the next release.

The WISP toolkit is now fully Year 2000 compliant. See the
document titled "WISP Toolkit Year 2000 Compliance" for a complete
description. 

WISP support for non-ASCII characters has been enhanced with a new
configuration file CHARMAP that provides character set
translation.  A full description of CHARMAP and non-ASCII
character support is available in the document etc/nonascii.txt as
part of the WISP distribution kit. 

The WISP for NT/95 release now includes the WDIAG utility.

The Windows NT/95 network licensing was failing with an "Invalid
License" message if the name of the server was less then 6
characters long.

The runtime OPTIONS file option EXTDISPLAY has been added to
enable external LINKs to the DISPLAY utility.  The default is
still to treat all LINKs to DISPLAY as calls to the internal
DISPLAY routine.

    EXTDISPLAY

The WISP runtime can be instructed to use only pfkeys (1) to (12)
for internally generated screens instead of the 32 pfkeys that
were used on the Wang VS.  When the PFKEYS12 option file option is
used then internal screens like OPEN GETPARMS use only pfkeys (1)
to (12) and they use pfkey (12) as the EXIT key instead of the
Wang VS standard of pfkey (16).

    PFKEYS12

(The PFKEYS12 option does not currently effect CRID, CREATE, or
VSEDIT.) 

The runtime OPTIONS file option DISPLAY8BIT has been added to
replace the WISP_DISPLAY_8BIT environment variable.  This option
instructs the DISPLAY utility to display 8-bit characters. The
environment variable WISP_DISPLAY_8BIT (or registry entry on
Windows) will override the OPTIONS file entry.

    DISPLAY8BIT

The NT/95 version of WFNAME was adding a ".DAT" extension to newly
created data files.  This has been changed to match the WISP
documentation and not add an extension.

The WISP for NT/95 utility WISPTRAN.EXE had a number of problems
which would cause it to crash, these have been corrected.

The command processor now has a screen that displays the full
(0-127) screen character set mapping. Press PF28 from the main
command processor screen (or PF9 from the Extras screen).  This
screen is useful for verifying non-ASCII character mapping.

On HP-UX 10.20 with Micro Focus COBOL 4.0 the standard CURSES
library (-lcurses) does not work correctly.  You need to use a
COSE compliant library, either the Color CURSES library
(-lcur_colr) or the HCURSES library (-lHcurses).  Be sure to check
your wrunmf.umf makefile to be ensure you are using a correct
library.

The VSX documentation in the WISP Version 4.0 manual contains an
error.  The "-bs <size>" option allows you to specify the block
size for the tape.  The size is in bytes and the maximum allowed
value is 102400 which is also the default value.

The following are additions to the WPROC section of the WISP
manual under "Current Limitations". 

    The MESSAGE statement requires at least one message-line.

    The string concatenation operator "!!" requires string
    constant operands be in quotes.

It has been discovered that Micro Focus COBOL's fhconvert utility
does not correctly convert Indexed 3 (I3) files that are
compressed into Sequential (S0) files.  The file sort routines
SORTCALL, WISPSORT, and the WSORT utility rely on fhconvert and
hence do not work with I3 compressed files.  It is recommended
that until fhconvert is corrected you do not use compression with
I3 files.


CHANGES FROM 4.1.02 TO 4.1.03
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.1.02 to 
release 4.1.03.

This release contains a pre-release version of ACUCOBOL native
screens support.  It is described in the document wispacn.txt in
the wisp/acu directory.

The DATE2 vssub has been enhance with two new functions HG and HJ
which return the current date in modified Gregorian (YYYYMMDD) and
in modified Julian (YYYYDDD) formats.  This functions can be used
instead of ACCEPT FROM DATE and ACCEPT FROM DAY which are not
Year2000 compliant.

    CALL "DATE2" USING "HG", YYYYMMDD.
    CALL "DATE2" USING "HJ", YYYYDDD.

The READFDR vssub has ben enhanced for YEAR2000 compliance. The
fields CD and MD will continue to return the year-of-century in
the format YYMMDD.  Your applications can safely assume that years
greater then or equal to 50 use a century 1900 and years less then
50 use century 2000. Thus YY represents the years 1950 thru 2049.
Two new fields have been added CX and MX which are the same as CD
and CM but return a 4 digit year in the format YYYYMMDD.

    CX   Alpha(8)   The creation date in YYYYMMDD format.
    MX   Alpha(8)   The modification date in YYYYMMDD format.

The WISP translator now issues the following YEAR2000 warnings:

   Features of "DATE" are not YEAR2000 compliant
   Features of "DAY" are not YEAR2000 compliant
   Features of "READFDR" are not YEAR2000 compliant
   ACCEPT FROM DATE is not YEAR2000 compliant
   ACCEPT FROM DAY is not YEAR2000 compliant

Calls to "DATE" and "DAY" should be changed into calls to "DATE2"
which supports 4 digit years and is fully YEAR2000 compliant.

The ACCEPT FROM DATE4 statement is translated for ACUCOBOL into
ACCEPT FROM CENTURY-DATE.  For Micro Focus COBOL an error message
is issued.

Re-opening a work file was failing if the value of the WORKVOL had
changed since the file was created.  This has been corrected.

The VSX utility has been enhanced to now fully recognize all the
different Wang file types.  It still can only correctly process
CONSEC files but now it does not try to unload PROG and REL files.
The report generated now looks much closer to the VS BACKUP
report.

The WPROC demo file ed.wpr is no longer included in the WISP
shipping fit.  It can be generated by compiling ed.wps using the
command "wproc -c ed.wps".


CHANGES FROM 4.1.01 TO 4.1.02
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.1.01 to 
release 4.1.02.

NT/95: The WISP interface to the Argent Queue Manager (AQM) batch
queue management software package has been enhanced.  There was a
number of problems in the first release, these have been corrected
and enhanced.  The configuration files and options have also
changed significantly.  The corrected configuration and usage
instructions are in the document "aqmwisp.txt", please see this
document for further information.

UNIX: Update routines to recognize I3 and I4 indexed files for
Micro Focus COBOL version 3.2.  The routines effected are
SORTCALL, SORTLINK, WISPSORT, READFDR, and utility WSORT.

The Micro Focus version of the C.R.I.D. and CREATE utilities have
been enhanced to use the Micro Focus External file handler.  This
enables them to access all the Micro Focus supported file types
including I4 and I3.  This functionality is available in CRID
version 2.90, CREATE version 3.0 (and later).

The WISP Command Processor now has "(12) SUBMIT procedure" option
which issues a SUBMIT, and "(8) Display Error Log" which displays
the WISP error log file.

The runtime OPTIONS file option IDSIPRINTOFF has been replace by a
new option PQLP to indicate that printing will be done using the
LP command.  The option IDSIPRINTOFF and IDSIPRINTON are still
valid but they will be removed in future releases.

The GETPARM vssub has been enhanced to support a Keyword field
Data_type of "B" which uses the BLANK display attribute (Hex 98)
for use in non-display fields like a password field.

NT/95: The LINK vssub was not properly closing process handles
when they were no longer needed.  Many calls to LINK would cause
many handles to be left open which could cause a process to
use excess system resources.  This has been corrected.

EXTRACT vssub now supports "JN" (JOBNAME) for Unix and NT/95.

EXTRACT vssub now supports "S$" (SYSTEM NAME) which returns the
computers name.

Special hooks have been added to the Wang workstation emulation
routines to support Co*STAR for WISP customization.  These hooks
allow Co*STAR api's to be issued before and after each individual
read and write of the workstation.  To enable one of the hooks you
set an environment variable equal to the api string you want
transmitted at that point.  The api strings will have the control
characters (127) added to the beginning and end of each string.
Some operations like a "DISPLAY AND READ" from COBOL perform both
a WRITE and a READ of the workstation.
The four environment variables are:

    Environment Variable   API Transmitted
    --------------------   ---------------          
    W4WPREWRITE            Before a WRITE to the workstation
    W4WPOSTWRITE           After a workstation WRITE completes
    W4WPREREAD             Before a READ of the workstation
    W4WPOSTREAD            After a workstation READ completes

A aid to debugging videocap function key problems has been added.
You can now instruct the WISP runtime to dump the metakey tables
to file "vcapdump.txt" by setting the environment variable
"VCAPMETADUMP" and then running your programs or wshell.  The file
vcapdump.txt can then be used to debug how escape sequences are
mapped to function keys.


CHANGES FROM 4.1.00 TO 4.1.01
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.1.00 to 
release 4.1.01.

WISP for NT/95 console I/O (non-Co*STAR) support for videocap
keymaping has been improved to allow greater flexibility.
Non-ASCII keys (function keys and special keys) now return true
scan-codes prefixed by the special lead character ("\X") and
optional "state" characters.  The state characters represent the
SHIFT, CONTROL, and ALT keys in the following order.

       SHIFT    =  "\052"
       CONTROL  =  "\035"
       ALT      =  "\070"

   Examples:

       F1            = "\X\073"
       Shift+F1      = "\X\052\073"
       Shift+Ctrl+F1 = "\X\052\035\073"
       Ctrl+Alt+F1   = "\X\035\070\073"

A new WINCON videocap file contains function key mapping for these
new scan-codes.  The Escape key is now treated as a scan-code
("\X\001") so it can be mapped to the Help key.  The new WINCON
videocap file adds the following key mappings:

       HELP         =  Escape Key
       Clear Field  =  Control + Up Arrow
       Clear After  =  Control + Right Arrow
       Backtab      =  Control + Tab

UNIX: The WPUTPARM utility was incorrectly incrementing the
link-level of PUTPARMS that it created.  This was causing the
PUTPARMS to be deleted at the wrong "unlink". This has been
corrected. 


CHANGES FROM 4.0.00 TO 4.1.00
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 4.0.00 to 
release 4.1.00.

WISP for NT/95 now has support for Co*STAR 32 for WISP using
"Console Program" mode.  See the "Co*STAR for WISP" documentation
for further information.

The C.R.I.D. utilities for ACUCOBOL now support the Acu4GL
interface for database access.

WISP for NT/95 now allows customization of colors through the
VCOLORS environment variable.  See the document ETC\VCOLORS.TXT in
your WISP distribution kit for additional information.

WISP for NT/95 default videocap keymapping has changed to not
allow the escape key to be used as the "Help" key.  The escape key
was conflicting with the Co*STAR function key mapping.  By making
this change the same videocap file (WINCON) can be used with and
without Co*STAR.

When using Co*STAR or WISP for NT/95, mouse positioning would
occasionally fail and write the mouse-click position information
into a screen field.  This problem was introduced in version
4.0.00 and has been corrected.

On terminals where the BLINK display attribute is being simulated
by colors (i.e. Co*STAR, WISP for NT/95, and some PC terminal
emulators), the SPACE character was having the BLINK attribute
removed.  This was causing the blink text to be displayed with the
"blink color" but the spaces between the words to be displayed
without the "blink color".  This has been corrected.

If using Co*STAR (W4W=1) a submitted job that performed a call to
the "LINK" VSSUB would sometimes abort due to invalid terminal
I/O.  The background jobs were incorrectly attempting to
communicate with the Co*STAR terminal emulator.  This has been
corrected. 


CHANGES FROM 3.3.19 TO 4.0.00
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 3.3.19 to 
release 4.0.

The WISP toolkit has been ported to Windows NT/95 for Acucobol-GT.
This is a WIN32 port and it supports Windows 95, Windows NT 3.51
(Intel) and Windows NT 4 (Intel). 

The WISP for Windows product has been renamed to Co*STAR for WISP.

The WISP Procedure Interpreter WPROC is now included as a standard
part of the WISP toolkit.

The WUSAGE utility has been split into the two utilities WUSAGE
and WSHELL.  The new utility WSHELL is the WISP Command Processor,
this previously was accessed with the "wusage shell" command.  The
WUSAGE utility now only contains the Usage Constants maintenance
functions. You can still run "wusage shell" to have WUSAGE spawn a
process to run WSHELL, this is provided for backwards
compatibility but it is better to run WSHELL directly. The old
shell script wshell.sh is no longer available.

Type-ahead was not working correctly on AIX 4.1 To correct the
problem we switched to using posix style terminal control
routines.

Added a debugging environment variable VBUFFERING=OFF which when
set will turn off the video buffering.  This can be used to
correct certain types of drawing errors caused by optimization. 

EDE: Correct certain line drawing errors which could under certain
circumstances corrupt the screen.

Acucobol: The wruncbl.umf makefile has been enhanced to support
Acucobol-GT version 3.1 without requiring manual modifications.
This makefile now has an "include" of the file "acucobol.include"
which contains Acucobol version information.  This file may need
to be modified if you are using a different version of Acucobol.

A cobol STOP verb is now translated into a call to WSTOP which
issues a Wang VS style STOP GETPARM.

The new year 2000 compliant DATE2 vssub has been added to the
runtime. 

NT/95: A new wispsub WTITLE has been added which allows a COBOL
program to change the title of the window. On UNIX this routine
has no effect.

A new wispsub WISPPLAT has been added which will return which
platform it is currently running on.  This allows you to write
conditional code based on which platform the software is running
on (eg Windows NT vs UNIX).  A new COBOL copybook WISPPLAT.WCB is
included in the WISP toolkit which will assist you in using the
WISPPLAT subroutine.

Two new wispsubs USESOFTLINK and USEHARDLINK control how the LINK
vssub behaves.  When soft links are enabled (and available) a LINK
vssub from one COBOL program to another COBOL program will be
implemented as an internal call within the same RTS and will not
spawn a new RTS.  Soft links are much faster and much more
efficient then a hard link which spawns a new RTS, however there
are some programming consideration when using soft links.
Currently soft links are only available on Windows NT/95, on other
systems these routines have no effect.

Two new options USESOFTLINK and USEHARDLINK have been added to the
OPTIONS file to control the default link type.

The WISPDEBUG=FULL tracing facility has been greatly improved. The
trace log now provides much more useful information.

EDE: A facilite has been added to edeoldoc.c which allows you to
add a custom menu selection to the standard menu bar.  

EDE: The PUSHSCREEN routine was causing a Signal 11 on 64-bit
machines (eg. DEC Alpha).

CRID: On occasion the "add footer" logic was causing a crash.

CRID: All of the on screen pfkey tags have been standardized so
they work correctly with Co*STAR for WISP and with Windows NT/95. 

CRID: The INQUIRY program can now save the query as a Wang style
procedure which can be run with the WPROC procedure interpreter.
The default on UNIX is to generate a shell script, to force a
procedure to be generated set the environment variable
KCSIGENWPROC=YES.  On Windows NT/95 the default is to generate a
procedure.

CRID: The maximum number of fields has been increased from 300 to
500 fields.

The EXTRACT vssub now supports "G#" on all platforms.

The file extensions ".cbx" and ".acu" are now recognized as
Acucobol object files.

Fixed the vssub GETPARM so it doesn't crash when Message_Text is
greater then 80 characters.

Fixed a bug on some systems where pressing the help-key from
within the command processor (help) screen was causing a crash. 

Fixed an error in the processing of monkey-bar menus which was
causing portions of the screen to be erased.

Fixed a bug when working with Co*STAR (WISP for Windows), hidden
fields were incorrectly being displayed.

The DISPLAY verb now generates a Wang VS style DISPLAY getparm.

WISP processing of DECLARATIVES now generates a call to wfilechk2
which supports long extended file status codes.  This is
especially useful when using Acu4GL for retrieving the full
database error code.  Extended file status codes can now be up to
10 characters long (previous limit was 4).

The WSORT utility and the SORTLINK vssub was failing if 8 sort
keys were specified and the STABLE sort option was used.

The WISP Command Processor (WSHELL or HELP screen) now contains
several hidden screen which display debugging and configuration
information.  The pfkeys needed to access these screen are not
displayed. 

    PF32   - Copyright, platform, and version information
    PF31   - Internal information
    PF30   - Usage constants
    PF29   - Environment variables

The WISP translator previously removed or modified CALL statements
to special routines in an attempt handle them automatically.  This
was causing more problems then it was solving so WISP now issues a
warning message which contains a recommended action and leaves the
CALL statements unchanged.  The special routines affected are
@WSOPEN, @WSCLOSE, @WSTIME, @MSTIME, @MSVALUE, and @MSTIME.

The WISP translator was aborting with a "twiddle" error when it
encountered a source line that contained a mod-code greater then
11 characters long.

The WISP translator was not correctly translating an empty
DISPLAY-WS record.

The WRUN utility now correctly recognizes the "-K kkk" flag as an
Acucobol runtime flag.

The WRUN utility now displays more useful information when run
without a program name.

The wac.sh script which is used with VSEDIT had problems when
compiling with Micro Focus COBOL for debug. It was incorrectly
moving the .cob file so that it could not be listed.

WPROC would sometimes abort or crash on exit in the following
situation: Program COBOL-A would run proc-B that runs proc-C with
parameters.  When proc-C exits there would be a memory overwrite
which would sometimes cause WPROC to crash or would sometimes
cause proc-B to abort or experience misc. errors.

WPROC: The MESSAGE verb was incorrectly attempting screen I/O when
in background and this was causing it to abort.

WPROC: The RUN command was incorrectly always setting the
CANCEL-EXIT flag.

WPROC was aborting when the mouse was clicked on the screen when
used with Co*STAR for WISP (WISP for Windows).

WPROC: The maximum number of parameters to a submitted procedure
has been increased from 8 to 32.  The 8 parameter limit was due to
the earlier mechanism used for submitting with parameters.

WPROC: If a procedure is submitted with REQUEUE then don't DESTROY
the temp proc as it will be needed again.



CHANGES FROM 3.3.18 TO 3.3.19
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 3.3.18 to release
3.3.19.

- WISP has been enhanced to support AcuServer.  AcuServer is an
  add-on product available from Acucobol which gives your COBOL
  applications network file access without the performance
  degradation which can occur when using NFS.  
  See version 4 of the WISP manual for complete details.

- ACUCOBOL: The makefile wruncbl.umf has been enhanced to support
  the new distribution files in ACUCOBOL-85 version 2.3.3 and
  version 2.4.  The documentation in wruncbl.umf has also been
  enhanced. 

- A new configuration file RVMAP (Remote Volume MAP) has been
  added to the $WISPCONFIG directory to add support for remote
  volumes (i.e. AcuServer from Acucobol and FileShare from Micro
  Focus.)
  See version 4 of the WISP manual for complete details.

- The DISPLAY utility can now be instructed to display 8-bit
  "foreign" characters by setting the environment variable
  WISP_DISPLAY_8BIT=YES.

- The NetronCap long screens would incorrectly scroll if the
  message line was set to greater the 24.

- UNIX: The mechanism used to process RETURN-CODE was generating
  a lot of unneeded stat() calls.

- UNIX: A GETPARM would sometimes fail with a SIGNAL 10 if it was
  satisfied by a PUTPARM that was generated from WPROC and
  contained multiple backwards references to individual keywords.

- UNIX: The WSORT utility now uses the same signal handler that
  the runtime uses.

- Logic has been added to detect and report unexpected EOF in
  WORKING-STORAGE DIVISION.  Previously WISP would hang.


CHANGES FROM 3.3.17 TO 3.3.18
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 3.3.17 to release
3.3.18.

- UNIX: Errors that occurred while printing with UniQue were being
  reported as ILP errors.

- UNIX: The SUBMIT vssub was failing if the total length of the
  generated shell command was greater the 255 bytes, this would
  normally only occur if the SETSUBMIT wispsub was used.

- The WSFNM subroutine would fail with a Signal 11 on some
  platforms when displaying a long screen and you pressed enter to
  go to scroll to the next screen.

- The VSEDIT utility has been enhanced automatically handle
  missing line numbers without having to renumber the entire file.

- The VSEDIT utility would loose changes made when in MODIFY mode
  and you pressed (2) or (15).

- The VSEDIT utility would incorrectly reset the start and end
  line numbers after each COPY command.

- A CALL with greater the 500 arguments would fail with an
  internal limit exceeded.

- The SET FAC OF XXX statement would not be correctly translated
  if the tokens FAC OF occurred on a separate line then the XXX.



CHANGES FROM 3.3.16 TO 3.3.17
=============================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 3.3.16 to release
3.3.17.

- This release contains support for the initial release of
  "WISP for Windows".  WISP for Windows is a supplemental product
  which runs on Microsoft Windows 3.1 and provides a graphical
  frontend to your WISP converted programs running on UNIX or VMS.
  WISP for Windows provides a MS-Windows look and feel which includes
  sunken data well entry fields, raised button function key hotspots,
  mouse enabled, optional function key icons, and customizable 
  button bars.  You can connect your PC's to your application server
  using TCP/IP, or most other standard PC networks, or with serial
  data lines.

- A new videocap function key GENERIC_MOUSE has been added which
  defines a mouse escape sequence prefix.

- The vt220 videocap file has been enhanced to recognize the
  alternate arrow escape sequences.

- The bldmf utility was not correctly handling the special
  characters '@', '#', and '$' in un-quoted file names in COPY
  statements.

- WISP was not correctly handling the special characters '@', '#',
  and '$' in un-quoted file names in COPY statements.



CHANGES FROM 3.3c TO 3.3.16
===========================
The following items describe corrections and improvements that
have been made to the WISP toolkit from release 3.3c to release
3.3.16.

- The WISP support for Acu4GL has been enhanced to include runtime
  identification of database files and support for ORACLE.

- The WSORT utility has been given a new user interface which more
  closely emulates the Wang SORT look and behavior including better
  detection and correction of error conditions.  The VMS version
  has also been enhanced to support SELECT and multiple input files
  using the underlying VMS SORT services.

- UNIX: The IDSI Print Queue (now call UniQue) has been logically 
  separated from the WISP library and runtime.  It will continue
  to behave the same, however there are no version dependencies
  so updates to WISP and UniQue can be made independently.  A new
  release of the print queue can be installed without having to
  rebuild your runtime system.

- UNIX: The OPTIONS file option for selecting which print queue
  to use now defaults to PQUNIQUE to select UniQue.  If you are
  still using ILP you will need to set the PQILP option.

- EDE: Older versions of the EDE library are not compatible with 
  this version of the WISP library, you must also upgrade your EDE 
  to the latest version.  If you attempt to build an executable
  using an older EDE library and this WISP library you get 
  unresolved symbols.

- WPUTPARM utility was incorrectly shifting all values to uppercase.
  This was making it impossible to pass a lowercase string into
  a GETPARM.  If your scripts were relying on WPUTPARM to shift
  these values to uppercase they will need to be corrected.

- UNIX: The old menu-ing package described in Chapter 9 of the WISP
  manual is no longer supported.  The routines are still available
  in the WISP object libraries but the makefiles to build the COBOL
  runtime systems no longer pull in these routines.

- The WSORT utility now reports errors when unsupported options are
  requested, it does this by issuing a respecify GETPARM and forcing
  unsupported options to be respecified.  In previous version, 
  unsupported options were just ignored without warning.

- UNIX: The videocap routines now first read the Terminfo database
  before they load the videocap files.  This allows you to create a
  videocap file that consists of only the custom keyboard mapping
  and options you require.

  The videocap routines can be instructed to not read the terminfo
  database by setting the environment variable $VNOTERMINFO.  This
  option is provided in case there is a conflict between the
  terminfo definitions and the videocap definitions.

        $ VNOTERMINFO=1 export VNOTERMINFO

- The EXTRACT vssub now supports the keyword "W$" and returns
  the value it finds in the environment variable "WISPNETID".

        'W$'    Alpha(8)        Return the value of environment 
                                variable WISPNETID.

- UNIX: The LINK vssub now reports an error if the ACULINK or MFLINK
  file is not found. It will also set the return code to 80.

- The LINK vssub now supports linking to other vssubs.  The vssubs
  that can be linked to are:

        BELL, BITPACK, BITUNPK, DATE, DAY, EXTRACT, FIND, HEXPACK,
        HEXUNPK, LOGOFF, MESSAGE, PAUSE, PRINT, READFDR, READVTOC,
        RENAME, SCRATCH, SCREEN, SEARCH, SET, STRING, WSXIO

  Add OPTIONS file option LINKVECTOROFF to disable the linkvector()
  routines which vector calls "LINK"s to VSSUBS into direct calls.

- ACUCOBOL: Native file paths with leading '@' are now recognized as
  being AcuServer file names, this causes the WISP name resolution 
  logic to bypass the access checking and go directly to the
  COBOL OPEN statement.

- The VSX utility on SOLARIS now supports the option -3480 for the
  3480 tape drive.

- The WSORT utility has been given a new user interface which more
  closely resembles the Wang utility.  It also now accepts all the
  hidden getparms and reports errors when options have been selected
  which are not supported.

- The VSEDIT utility has been rewritten with extension changes.
  See the Version 4 of the WISP manual for full details.

- The VSEDIT utility now defaults the LANGUAGE based on the file
  extension when given a native filepath on the command line.

- The hidden (HELP)->(32) screen now displays platform information.

- UNIX: Added support for printing with NP the HP/UX Network
  Printing facility. This option is activated by including the
  option "PQNP" in the OPTIONS file.

- UNIX: The interaction between video and the COBOL debuggers has
  be improved to give better screen sharing.

- UNIX: Signal handling has been improved to avoid conflicts between
  WISP and COBOL signal handlers.

- UNIX: The video routines were not correctly handling padding on
  certain terminals, notably IBM3151, which caused cursor positioning
  to be incorrect.

- UNIX: Certain error conditions on the tty such as a modem 
  disconnect or other loss of connection could cause low-level
  error reporting routines to recursively call their selves. 
  This resulted in an orphaned process that would consume CPU
  and stack space.  This condition has been corrected.

- UNIX: Support for Acu4GL has been enhanced to provide runtime 
  checking for database files with the "-4" option.  Support for
  ORACLE has also been added.  
  See version 4 of the WISP manual for complete details.

- UNIX: The wruncbl.umf makefile for building the ACUCOBOL runtime
  now contains instructions for building the Acu4GL runtime for
  ORACLE and INFORMIX.  See the file wruncbl.umf for details.

- UNIX: New options for the OPTIONS file.

        PQUNIQUE        - Use UniQue print queue (default)
        PQILP           - Use ILP print queue
        PQNP            - Use HP/UX Network Printing facility
        BATCHQUEUE      - The batch queue submit utility
        BATCHMAN        - The batch queue manager utility
        LINKVECTOROFF   - Turn off internal LINK vectoring

- An OPEN SHARED on a SEQUENTIAL file was causing subsequent
  OPEN SHARED statements to behave like OPEN EXTEND.

- WISP now correctly handles an OPEN of a PRINTER file when a blank 
  FILENAME was specified via a PUTPARM.  Previously an invalid file 
  name was sometimes generated and an extra GETPARM was issued.

- UNIX: On occasion when you went from the Command Processor to the 
  shell the terminal was left in an unusable state.

- Returning from a "(11) Enter COMMANDS" off the command processor
  would sometimes result in a corrupted screen or a video error
  message.

- UNIX: Function "NA" (User Name) of the EXTRACT vssub now blank pads
  the name to 24 characters.

- UNIX: The MESSAGE vssub has been rewritten to provide the following
  functionality:

        automatic port deletion, 
        proper interaction with workstation I/O, 
        check with no wait ,
        KEEP
        binary port names
        better return codes

- The SEARCH vssub now works with binary data.

- The SCRATCH vssub now ensure that a FILE, LIBRARY, and VOLUME
  name were passed to it before it attempts to perform the scratch.

- The GETPARM vssub, when it receives a value from a PUTPARM into an
  uppercase field will shift the value to uppercase.

- The GETPARM vssub now correctly supports the Spec_type="U".

- UNIX: The LINK vssub now better handles the return-code when 
  linking to shell scripts and native unix utilities.  It will set 
  the return-code to the exit-code for these processes.

- Changed numeric FAC handling to allow commas to support the
  DECIMAL IS COMMA clause.

- The READVTOC vssub was sometimes failing when called from Micro 
  Focus COBOL because of an incorrect argument count.

- The READVTOC vssub was failing on little-endian machines when 
  the "Start" parameter was not equal to zero.

- The FXZONE wispsub now recognizes 0xC0 thru 0xC9 as positive
  zoned numeric values.

- When not in "AUTO TAB" mode the cursor will now step out of the
  field after the last character in the field is filled.

- The RENAME vssub was incorrectly reporting RC=52 when the
  when the new and old filename where the same.

- The VSX utility sometimes failed on DG/UX with a 9-track tape
  drive.

- UNIX: The WDIAG utility has been enhanced to better detect and
  report problems.

- ACUCOBOL: The makefile wruncbl.umf has been greatly enhanced to 
  provide a much easier facility for creating runtime systems.
  See the documentation at the beginning of "wruncbl.umf" for
  a complete description.

- Micro Focus: The makefile wrunmf.umf has been greatly enhanced to 
  provide a much easier facility for creating runtime systems.
  See the documentation at the beginning of "wrunmf.umf" for
  a complete description.

- The WISP runtime error reporting system (werrlog) has been 
  changed to use the Wang screen emulation routines (vwang).

- The FILECOPY wispsub was sometimes not checking if the file
  already exists and setting the return code to 52 if it does.

- WISP utilities (WSORT, WCOPY, etc) were ignoring the OPTIONS
  file option ERRFLAG and the environment variable WISPDEBUG.

- Putparms with duplicate labels at the same linklevel were not
  being erased.  This was causing backwards references to a
  labeled putparm to always pickup the very first putparm with
  that label at that linklevel.

- The STRING vssub EBCDIC to ASCII translation was failing on
  SCO unix (and others that defaulted to signed characters.)

- The DISPLAY utility would not properly update the row and
  column position following a search.

- The LGMAP logic would fail if it contained blank lines and
  comments.

- The NetronCap screen emulation routines would sometimes get
  a segmentation violation when used without EDE.

- AIX: Manage SYSTEM from the Command Processor now runs
  smit with the "-C" options.

- The VSX utility versions 1.65 - 1.77 which were distributed with
  WISP versions 3.3.13 - 3.3.15 fail on Little-Endian machines
  on COMPRESSED files.  Little-Endian machines are SCO, Ultrix, 
  Sequent, any Intel based computers.

- The VSX utility now performs extension error checking and 
  reporting. Previous version may have failed without reporting an 
  error.

- The logic which loads the videocap files would abort if it found
  a unrecognized keyword, it has been changed to report an error
  and continue.

- Function key tags on WISP screens, such as the Command Processor
  screens, have all been standardized to use the "(xx)" format.

        PF1, <PF01>, PF-1               -----> (1)
        PF16, <PF16>, PF-16             -----> (16)
        RETURN, ENTER, <RETURN> <ENTER> -----> (ENTER)

- The declarative error detection logic now recognizes file status 96
  as a valid Wang file status.

- The IDNUMERIC option on BSD machines would sometimes cause a
  signal 11.

- The WSORT and WCOPY utility would under some conditions delete 
  labeled putparms making backwards reference fail.

- Add support for FAC OF XXX [IS] [NOT] ALTERED construct where
  the [IS] and [NOT] are both optional.

- Add support for hex and non-numeric literals that use a single
  quote as well as a double quote.

- WISP now handles a maximum of 250 files and 200 DISPLAY-WS screens
  in a single COBOL program.

- Micro Focus: Add the IGNORE LOCK clause for READ (without HOLD)
  statements for indexed and relative files.  This is a feature of
  Micro Focus 3.0 so WISP will no longer work with pre 3.0 versions 
  of Micro Focus COBOL.

- When WISP needed to expand a token and the expanded token no
  longer fit on the line, WISP would on occasion shift the token
  to start in column 8.

- WISP would sometime confuse a data element that began with "CL" 
  as being a "CLOSE" verb.

- On systems where STOP RUN is getting changed into EXIT PROGRAM,
  WISP now adds a real STOP RUN following the EXIT PROGRAM in case 
  the EXIT PROGRAM falls thru.

- Added two new directives to force OPEN I-O statements to be 
  exclusive (not allow readers).  This is only meaningful with VMS 
  COBOL and ACUCOBOL which default to ALLOWING READERS.

        $OPENIOEXCLUSIVEFILE    This directive is placed before
                                the SELECT for the file.

        $OPENIOEXCLUSIVEALL     Applies to all files.


- UNIX: Add copy library prefix path option (-Pprefixpath) 
  which specifies a list of directories of where to find copy 
  libraries.

  This option changes the way WISP processes COPY statements which
  include the "IN library" clause.  If the "IN library" clause is
  not used then this option has no effect.

  The prefix path (-P) option allows you to specify a path which
  is to be searched for copy library/file combination.  This is 
  different then the (-I) option which is only used when the 
  "IN library" clause is not specified.

  The prefixpath is a list of one or more directories separated by 
  colons (:) for UNIX and semicolons (;) for MSDOS.

  Example:

        $ wisp -P/home/testlib:/disk1/qalib:/disk1/mastlib sample

  If sample contains a copy statement of the form:

        COPY FDPAYNOW IN ACCTCOPY.

  WISP will look in order until it finds one of the following:

        /home/testlib/acctcopy/fdpaynow.wcb
        /disk1/qalib/acctcopy/fdpaynow.wcb
        /disk1/mastlib/acctcopy/fdpaynow.wcb

  In CONVERT mode wisp will generate the following for the above.

        COPY "acctcopy/fdpaynow.cob"

- When translating a MOVE WITH CONVERSION that was nested in an IF
  statement WISP was on occasion generating an unterminated IF 
  statement.

- The -S (/NODMS) option now causes the FREE ALL statement to be
  translated to a PERFORM WISP-FREE-ALL.

- DISPLAY AND READ statement with an ON PFKEY clause, where no
  pfkeys were specified, was not working.

- DISPLAY AND READ statement will now translate most statements
  within the ON PFKEY and NO-MOD clauses.

- If DISPLAY AND READ ALTERED is specified then RANGE clauses are 
  only checked if the field was altered, otherwise all non-protected 
  fields are checked.

- The ALLOWING clause on a READ statement was sometimes overflowing
  past column 72.

- WISP now defaults to include comments and blank lines in the
  generated COBOL. 

- The keywords TRUE and FALSE have been removed from the internal
  reserved words list.

- WISP was not correctly handling the "SET condition TO TRUE" 
  statement when condition was qualified.


--------------------------------------------------------------------
The following table shows the WISP release history.  Many of these
represent internal patch releases which were never distributed or
only distributed on very limited basis.  The "x" versions numbers
(3.3x1, 3.3x2 etc.) were originally intended for internal use only,
however this proved unworkable so it has been replaced with a 
three part version number.

        +----- Major version number (4)
        | +--- Minor version number (2)
        | | +- Patch level number   (1)
        | | |
        4.2.01

    WISP VERSION      CUTOVER DATE 
    ------------      ------------
        5.1.11          07/08/11        Patch for READFDR bug on Windows
        5.1.10          11/05/11        WinSSHD on Windows
        5.1.00          02/01/10        Shell Stream Software
        5.0.01          11/10/03        5.0 Patch 1
        5.0.00          07/09/03        Major Release
        4.4.07          02/14/03        Unix license file changes
        4.4.06          11/12/02        KCSI v4.0.00
        4.4.05          10/09/02        Huge file support
        4.4.04          08/20/02        Micro Focus Shared Objects
        4.4.03          07/24/02        4.4 Patch 3
        4.4.02          04/01/02        Acucobol 5.2
        4.4.01          11/27/01        4.4 patch 1
        4.4.00          11/02/01        Major Release
        4.3.06          03/16/00        WIN32 Acucobol 4.3 support
        4.3.05          09/15/99        4.3 patch 5
        4.3.04          03/03/99        NT Telnet Support
        4.3.03          01/05/99        4.3 patch 3
        4.3.02          10/29/98        4.3 patch 2
        4.3.01          08/10/98        4.3 patch 1
        4.3.00          06/23/98        Full Native Screens release
        4.2.02          04/13/98        Native Screens 2nd release
        4.2.01          03/04/98        Full COBOL-85 syntax support
        4.2.00          01/08/98        Y2K compliant
        4.1.03          10/03/97        Native Screens pre-release
        4.1.02          08/25/97        4.1 patch 2
        4.1.01          07/29/97        4.1 patch 1
        4.1.00          07/15/97        Co*STAR for NT/95
        4.0.00          06/17/97        Windows NT/95
        3.9.93          05/21/97        Windows NT/95 pre-release 2
        3.9.92          04/30/97        Windows NT/95 pre-release 1
        3.9.91          02/25/97        Windows NT/95 Beta 2
        3.9.90          12/20/96        Windows NT/95 Beta 1
        3.3.19          01/05/96        Support for AcuServer
        3.3.18          08/07/95
        3.3.17          07/07/95        WISP for Windows Version 1.0                
        3.3.16          05/31/95
        3.3.15          04/25/95
        3.3.14          04/07/95        WISP for Windows pre-release
        3.3.13          02/06/95
        3.3x12          11/21/94
        3.3x11          10/27/94
        3.3x10          09/12/94
        3.3x9           08/03/94
        3.3x8           07/07/94
        3.3x7           06/29/94
        3.3x6           06/08/94
        3.3x5           05/20/94
        3.3x4           05/05/94
        3.3x3           01/21/94
        3.3x2           01/07/94        Enhanced Acu4GL support
        3.3x1           01/03/94
        3.3c            11/17/93        Last major release
        3.3b            11/05/93        Support for Acu4GL
        3.3a            10/12/93        
   (pre-version 3.3 releases)
        3.2x11          07/29/93
        3.2x8           04/27/93        First AcuCOBOL/MS-DOS version
        3.2b            08/07/92
        3.1c            03/12/92
        3.0b            01/08/92
        3.0a            11/15/91        First release of EDE
        3.0             10/02/91        First Micro Focus version
        2.0f            04/01/91
        2.0d            11/14/90
        2.0             04/09/90        First AcuCOBOL version
        1.5             12/01/89        First UNIX version (LPI COBOL)
        1.4             08/01/89
        1.0             09/01/88        First VMS commercial release
        0.9             11/01/87        First internal release

========================= END OF DOCUMENT ==========================
