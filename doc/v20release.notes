
	WISP VERSION 2.0 RELEASE NOTES
	==============================

	These release notes list the changes in WISP over earlier releases.
	For a complete description of the current implementation refer to
	the WISP V2.0 USER'S GUIDE.



	MAJOR CHANGES
	=============

	- New documentation: The WISP documentation has been greatly
	  enhanced and expanded.

	- Full support for UNIX using ACUCOBOL and LPI COBOL. WISP can 
	  take your Wang COBOL to UNIX using ACUCOBOL and LPI COBOL.

	- Enhanced VMS file system: wfname has been rewritten to handle 
	  print file names and work file names in a greatly improved manner.

	- VMS Queue Management Utility. This routine is supplied with WISP
	  on VMS to provide a user friendly interface to VMS print and 
	  background queues.

	- New DISPLAY Utility. The DISPLAY utility has been rewritten to
	  provide much greater functionality and ease of use.

	- VIDEOCAP: This is the WISP soft terminal definition handler, it 
	  allows you to use most industry standard terminals, and allows
	  for complete keyboard mapping.

	- DECLARATIVES: WISP now provides greatly enhanced handling of 
	  DECLARATIVES including selective insertion of missing DECLARATIVES.

	- WPUTPARM: This new standalone utility allows the issuing of 
	  putparms (PRBs) from the command processor or DCL or UNIX scripts.
	  This includes across image PUTPARMS.  Refer to detailed changes
	  regarding .GBL files.




	DETAILED CHANGES
	================

	- Full support of DATE usersub

	- Enhanced EXTRACT usersub including "I8" and "IX" for 8 char and
	  32 char userids.

	- FIND usersub has been rewritten and provides full support.

	- GETPARM usersub enhanced to support 'C' & 'J' Column Flags. Hidden
	  getparms ("ID") now supported. Full handling of MESSAGE text
	  supported. Enhanced DATA_TYPE support.

	- Enhanced MESSAGE usersub.

	- PUTPARM usersub: support has been added for; the AID char, 
	  the USAGE_COUNT, labels, and function 'C' Cancel.

	- SORTCALL usersub is now supported.

	- STRING usersub enhanced to support "RV" reverse.

	- initwisp2 replaces initwisp.

	- LINKPROC WISPsub has been added to allow a LINK to a DCL proc
	  or UNIX script.

	- SETSUBMIT WISPsub has been added to support passing of parameter
	  on a call to SUBMIT usersub.

	- WISPSHUT and WISPSYNC have been added to allow turning off and
	  turning back on WISP screen control.

	- werrlog subsystem has been added to allow loging of all error
	  messages to a file.

	- NETRON CAP screen handling is now supported.

	- KBMAP keyboard mapping is no longer supported, it is replaced
	  by VIDEOCAP.

	- On VMS, Wang file names that contain characters "#" and "@" are now 
	  translated to "$" and "_" respectively, not "N_" and "A_".

	- Wang "##" file names now generate Wang style temp file names.

	- On VMS, the LPMAP.DAT has been enhanced to allow a printer number.

	- On VMS, TTMAP.DAT has been enhanced to allow many pseudo devices.

	- On open output added PF3 to delete getparm screen.

	- Support for READ MODIFIABLE of workstation.

	- Support for OPEN EXTEND.

	- SEQ/SEQ OPEN SHARED changed to OPEN EXTEND ALLOWING ALL.

	- FREE ALL statements handled.

	- SEQ/DYN files without a relative key are handled.

	- Improved record lock handling.

	- New OPEN logic now interacts with the DECLARATIVES to provide
	  much more reliable Wang style OPENs with enhanced message and
	  extended file status reporting.

	- DISPLAY statements are converted to use vwang.

	- WISP COMPRESS option generates much more compressed screen 
	  data using HEX strings.

	- WISP now removes USE AFTER DEADLOCK sections.

	- WISP can now handle relocating of SECTIONs when performed from
	  the DECLARATIVES.

	- WISP now generated dummy FD's for SELECT statements the are
	  missing FDs.

	- WISP now has KEY file support for translating BINARY/COMP KEYS.

	- Improved handling of SORT statements.

	- WISP no longer generates bogus KEY clause MISSING warning messages.

	- The USAGE utility has been renamed WUSAGE for consistence and to
	  avoid conflicts.

	- WUSAGE supports SET FLAG MASK commands.
	
	- Default control keys have been added; ^e HELP, ^f01 - ^f32 for 
	  PF1 to PF32.

	- User defineable Cursor Characteristics; Auto tab, Auto move have
	  been added to the HELP screen.

	- Pseudo blank character selection has been added to the HELP screen.

	- Expanded OPTION and KEY file processing.

	- Enhanced support for PIC 'Z' field.

	- Shared memory across GETPARMs and PUTPARMS is available under VMS,
	  using a file to do the memory sharing.  A file with a .GBL extension
	  is generated by WISP.  Since the only time WISP can be certain that
	  the shared memory will not be needed is at logout time, you must
	  make some changed to your logout procedure to delete the file, otherwise
	  it will remain in the user's SYS$LOGIN indefinitely.
	  1)  Add to SYS$MANAGER:SYLOGIN.COM the following:
		LO*GOUT :== @SYS$MANAGER:SYLOGOUT.COM
	      This defines a pseudo logout procedure that will run in lew of the
	      standard logout procedure.
	  2)  Create SYS$MANAGER:SYLOGOUT.COM  
		The following is an example if IDSI's SYS$LOGOUT.COM

	$SET NOVERIFY
	$ GOTO START
	$!+
	$!  System wide logout command file.
	$!
	$! Edit history:
	$!
	$! Who  When            What
	$! ---  -----------     ----
	$! SMB  31-Aug-1990	Added deletion of .GBL files used for shared
	$!			memory with GETPARM and PUTPARM logic in WISP.
	$!
	$START:
	$!
	$!  Redirect error messages so they do not display on terminal.
	$ DEFINE SYS$ERROR NL:
	$ DEFINE SYS$OUTPUT NL:
	$!
	$!  Get the master process id so can generate the file name.
	$ MPID = F$GETJPI("","MASTER_PID")
	$ FILE = F$STRING("W2$SH"+MPID+".GBL;*")
	$!
	$!  Delete the .GBL file for the process which is logging out.
	$ DEL 'FILE'
	$!
	$!  Return the error output to normal channels.
	$ DEASSIGN SYS$ERROR
	$ DEASSIGN SYS$OUTPUT
	$!
	$!  Do the standard logout procedure.
	$ LOGOUTNOW

	So, when each process issues a logout, SYSLOGOUT.COM will be executed and
	thus the .GBL files that was created for that process will be deleted.
	
