							   v31_relnotes.lis

	RELEASE NOTES FOR WISP VERSION 3.1
	==================================

	This release provides a new mechanism for initiating a call to the WISP
	sort functions "SORTCALL" and "WISPSORT".  A new routine "SORTINFO"
	can be used before "SORTCALL" or "SORTLINK" to provide parameters
	for "WISPSORT".  A separate document "docsort.lis" explains in detail 
	this additional functionality.


	All WISP users of Micro Focus COBOL/2 on unix, AIX VS COBOL/6000, Sun
	COBOL, or HP COBOL/HP-UX should read the document "mflink.doc" which
	explains some important changes to the LINK mechanism for Micro Focus
	based COBOLs.

	PROGVOL/PROGLIB warning:

	PROGVOL and PROGLIB can now be accessed with SET and EXTRACT VSSUBs.
	If they are not set, they default to the values of RUNVOL and RUNLIB.
	If RUNVOL or RUNLIB are blank, then PROGVOL and PROGLIB will be blank.
	PROGVOL and PROGLIB are used by LINK and SUBMIT, so if they are set,
	the behavior of these routines will change.  Read the sections below 
	on LINK and SUBMIT for more information on PROGVOL and PROGLIB.

	PRINTQ warning:

	Printq function ilp requires the class option (e.g. ilp -CA).
	If class option is not set for a print file, it needs to be given
	a class and the printq must be restarted before that file can be
	referenced.  This problem will be fixed in the next release.

	Printq printer names and printer models must start with an alphabetic 
	character.  On the IBM RS6000, printers are named with numerals only, 
	so they must be changed in the prtdef and formdef files.  A prefix of 
	"ibm" should work just fine.  

	WISP TRANSLATOR:

	The Wang style ACCEPT verb is now supported.  On unix and MSDOS, there
	was previously no support for an ACCEPT statement.  On VMS, the ACCEPT
	used to generate a blank screen to allow input from the terminal.
	Now, an ACCEPT verb will generate a getparm, allowing input of each
	data item referenced in the ACCEPT statement.

	Example:
		ACCEPT DATA1, DATA2, DATA3.

		Will generate the screen:

		GETPARM SCREEN			ACCEPT

		DATA1 = ______________________________
		DATA2 = ______________________________
		DATA3 = ______________________________

		Allowing the user to enter data for the ACCEPT items.

	The ACCEPT data items can also be supplied data from a putparm.

	Command Line/Command File Example:
		wputparm enter accept data1=text data2=text data3=text
		wputparm display accept


	On the Wang, a CALL statement can include a UFB as an argument. This 
	functionality is not ansi standard and is not supported on other COBOL 
	compilers.  For programs using this functionality, there is now an
	option to WISP (#USING_UFB) which will change the UFB in the CALL to
	"WISP-SCRATCH_BYTE-1" a legal argument for a CALL.  The user must
	specify in the OPTIONS_FILE which routines are passing UFBs as 
	arguments.  This is done with the OPTIONS_FILE option #USING_UFB name.
	When WISP sees a call to one of these routines, it scans the arguments 
	list and every UFB it finds, it replaces with WISP-SCRATCH-BYTE-1.
		Note: The name in the options_file is case sensitive.

	Example:
		OPTIONS_FILE:	#USING_UFB CRTREAD
				#USING_UFB CRTREW

	WCB:	CALL "CRTREAD" USING ARG1, ARG2, CRT-UFB, ARG4
	COB:	CALL "CRTREAD" USING ARG1, ARG2, WISP-SCRATCH-BYTE-1, ARG4


	Added COBOL 85 functionality on FD statement; now supports:
		RECORD IS VARYING IN SIZE FROM x TO y DEPENDING ON z.

	When a DISPLAY-WS statement included a control string which was
	exactly 32 or 33 characters long, the generated code produced a
	line-too-long error.  WISP no handles this correctly.

	When a DISPLAY AND READ statment had exactly 27 PF keys, the code
	generated produced a line-too-long error.  WISP now handles this
	case correctly.

	Fixed problem with STOP RUN on the same line as CLOSE.
	Example:
		CLOSE IN-FILE, OUT-FILE, STOP RUN.
	This was failing to generate a PERFORM STOP-RUN with NO error message.

	If WISP encountered a space character between the word "DIVISION" and
	the period at the end of the statement "DATA DIVISION<space>.", it
	would generate an error message and stop processing.  This has been
	fixed so WISP will process this statement.

	WISP used to require IDENTIFICATION section clauses to be in a specific
	order.  Now, IDENTIFICATION section clauses are not order dependent.

	There was a problem in a SEARCH statement where the special handling of
	a DISPLAY was being put in the wrong place if it was in a WHEN clause.
	Example:
		SEARCH XXX
			AT END
				STATEMENT...
			WHEN YYY
				DISPLAY STATEMENT.
	The WISP generated statements for the DISPLAY in the above example
	were put in the wrong place.  This has been fixed, and the generated
	code is now in the correct order.

	WISP used to always add record locking logic.  Now, it is possible to
	not add the record locking logic. The "-S" flag on unix or MSDOS, or
	the "/NODMS" switch on VMS tells WISP to not add any record locking 
	logic to emulate DMS.  It is for users who have coded translation 
	processing into their COBOL and will be re-coding to use the features 
	of the target cobol.



	There was a problem with PROGRAM-ID statements with a comment following
	on the same line.  It was being shifted to the next line and caused an
	error message.  This has been fixed and WISP now makes anything after
	the PROGRAM-ID statement into a comment.

	When a "READ" statement occurred within an "IF" clause and was followed
	by an "ELSE", the "READ" was expanded and sometimes changed the logic 
	of the "IF".  WISP now knows when it is in an "IF" and generates the
	proper code.

	UTILITIES:

	DISPRINT - There are now 4 PF keys used in this utility:
			PF 1 - DISPLAY
			PF 2 - PRINT
			PF 3 - DELETE
			PF 4 - PRINT (NO DELETE)
		PF4 is new and expands on the functionality of the PF2 option.

	Printq - unix - Version 1.8 of the IDSI print queue for unix systems is
		now included with the WISP release.  This is a very stable
		release of this utility.

	Printq - When the print queue contained more than 256 elements, the
		display was not working properly.  The maximum number of
		entries allowed in the print queue has been increased to
		8,192 entries which should handle most installations.

	Proctran - Attempted to proccess characters after column 72.  It now 
		stops processing after column 72 on SET and EXTRACT statements.

	Proctran - Handled incorrectly long variables which spanned lines. It 
		has been improved to look at multiple lines for long variables.

	Proctran - Did not properly process "IF" statements with some
		constructs.  These included ">=", "<=" and "AND" clauses.
		This has been fixed and these now generate proper code.

	Proctran - Was getting an access violation error message with the
		"OPTIONS" keyword.  This has been fixed so the error message
		is no longer generated.

	Proctran - Did not allow combinations of upper case and lower case
		characters in labels.  Proctran now processes these character
		combinations correctly.

	Proctran - Was incorrectly processing a variable with a subscript in
		a "PROMPT" statement.  This now processes correctly.

	Proctran - Did not allow quotes within a string.  Quotes are now
		handled correctly when in a string.

	Proctran - Did not process correctly when two assign statements were 
		on the same line.  This is fixed and now generates correct
		code.

	Proctran - Multiple GOTO statements on the same line used to generate
		incorrect code.  This has been fixed and the GOTOs are handled
		properly.



	Proctran - Backwards referencing in Wang procedures is now supported.

	Proctran - The TRACK keyword is not supported.  It was still trying to
		convert the TRACK keyword.  Now, it skips over them.

	vsx - When vsx runs, as it encounters files on tape with compressed 
		records, it creates ".tmp" files on the disk.  After it has 
		completed loading the tape, it then processes these ".tmp"
		files into ".wcb" files.  If anything happens to interupt vsx
		before it finishes processing all the ".tmp" files, vsx can be
		restarted with the following arguments to finish processing the
		remaining ".tmp" files:
					vsx -tmp *.tmp

	wsort - The "-v" verbose switch now gives more information including 
		displaying the input and output file names.

	wsysinit - The "-v" verbose switch now gives more information including
		displaying each step it takes along with file names.  If the
		verbose switch is omitted, then no messages are displayed.

	wusage - Added PROGLIB and PROGVOL for set and extract functions.


	WISP LIBRARY CHANGES:

	Monkeybar menus, in some cases, had a problem with the FACs 
	disappearing which changed the look of the menu.  This has been 
	fixed so the menus appear as they should in all cases.

	On a DISPLAY AND READ statement, The pseudo blanks were not always
	being converted to spaces.  This has been fixed and pseudo blanks
	are now always converted properly.

	The screen characteristics (can be set from help screen) to change 
	the screen background on exit did not work properly.  This has been
	fixed so the screen will now change when appropriate.

	There was a problem using the Micro Focus Animator debugging tool
	with WISP converted code.  When the debugger passed control to the
	Wang screen, the interface between the WISP screen handler and the
	Animator screen handle was causing the alarm to repeat continuously
	at the terminal.  This has been fixed and the WISP library is now 
	compatable with the Micro Focus Animator debugger.


	EXTRACT - The extract function "T#" which should return the task
		number was not working correctly.  This has been fixed and
		it now returns the task number as it should.

	FILECOPY - unix only - The WISP library now includes this routine which
		can be used to copy a file (available on unix systems only).
		Example (all parameters must be provided):
		CALL "FILECOPY" USING 
			 IN-FILECOPY-FILE,  IN-FILECOPY-LIB,  IN_FILECOPY-VOL,
			OUT-FILECOPY-FILE, OUT-FILECOPY-LIB, OUT_FILECOPY-VOL,
			RETURN-CODE.



	LINK - Users of Micro Focus based compilers (Micro Focus COBOL/2 on
		unix, AIX VS COBOL/6000, Sun COBOL, or HP COBOL/HP-UX), should
		read the document "mflink.doc" for information on specific
		changes to the program linking mechanism.

	LINK - On a link of type ' ' (space) it before was checking RUNLIB
		RUNVOL then the current directory.  It now uses PROGVOL PROGLIB
		instead of RV/RL.  However, if PROGVOL and PROGLIB are never 
		set, this will behave exactly as it did before because the RUN
		values are used if the PROG values are not set.

	READVTOC - Now supports the "F" option on unix platforms.

	SCRATCH - VMS - Return codes for file-not-found and library-not-found
		were reversed.  Now corrected so file-not-found returns 20 and
		lib-not-found returns 16.

	SUBMIT - Has been changed to reflect the new use of PROGVOL and
		PROGLIB.  It will first try to use the VOLUME and LIBRARY
		parameters passed to it.  If they are missing, or spaces,
		then it will try to use PROGVOL and PROGLIB.  If they are
		not set (blank), then it will try to use RUNVOL and RUNLIB.

	WISPSORT - With C-ISAM files there was a problem when record lengths
		greater than 255 were used.  This has been fixed and the 255
		limitation has been removed.

	WSXIO - The "Enter" key was not being handled like PF keys.  On the 
		Wang, however, the "Enter" key is considered to be another PF
		key and is handled like any PF key.  This has been fixed so 
		that wsxio now handles the "Enter" key like it handles the PF 
		keys.  The AID character for the "Enter" key is "@".


	Distribution File Names For Micro Focus COBOL/2 vs. AIX COBOL:

	Because AIX COBOL is a version of Micro Focus COBOL/2, the files
	used to create the AIX and MF run-times have been combined and
	the names now have "mf" where they used to have "aix".

		wisp/mf		was wisp/aix

		bldmfmf		was bldmfaix
		mf.rules	was aix.rules
		wispmf.c	was wispaix.c
		wispmf.o	was wispaix.o
		wrunmf.c	was wrunaix.c
		wrunmf.o	was wrunaix.o
		wrunmf.umf	was wrunaix.umf

	mflink.cob - The LINK front end for Micro Focus (see mflink.doc).

	==================================


	RELEASE NOTES FOR WISP VERSION 3.0
	==================================

	- IDSI introduces WISP to MS-DOS using Micro Focus COBOL/2.
	  The MS-DOS version of WISP is currently in field test and
	  will be shipping shortly.  For further info please contact
	  IDSI.

	- WISP 3.0 contains support for AIX VS COBOL Compiler/6000 for
	  the IBM RS6000, and for Micro Focus COBOL on other UNIX platforms.

	- Support for ACUCOBOL 2.0 with the Vision 3 file system has been 
	  added for UNIX.

	- The IDSI Print Queue for UNIX is released with WISP 3.0.
	  The components are:
		ilp	- the "lp" command to spool a file for printing.
		ilpman	- the full-screen queue manager.
		idaemon	- the ilp daemon (background process).
		ishut	- the command to shutdown idaemon.

	  Features include:
		- Full screen print queue manager.
		- Multiple printer support.
		- Forms and Class control.
		- Displaying of queue jobs.
		- Stopping and starting of printing jobs.
		- Hold, release and requeuing control.
		- Copies, banner and formfeed control.

	  The IDSI Print Queue is fully described in a separate document.

	  NOTE: The default printing method is to issue "lp" commands.
		To use the IDSI Print Queue you must install it and
		set IDSIPRINTON in the OPTIONS file.

	- The Enhanced Development Environment (EDE) is supported with
	  this release. EDE is a set of tools and utilities that
	  allow you to build a "pull-down" and "pop-up" menuing interface
	  to your software which includes a calculator, calendar, notepad,
	  day-planner and clock. EDE is available through IDSI as a separate
	  product.

	- The Wang utilities CONTROL, REPORT, INQUIRE and DATENTRY have
	  been ported to run under ACUCOBOL and are now available through
	  IDSI as separate products.

	- VMS: The WISP.HLP and WISP.CLD files have been updated and must
	  be re-installed.

	- WISP now generates compressed screens as the default.
	  A new flag has been added -Z which is equivalent to the
	  VMS switch /NOCOMPRESS.

	- WISP now accepts lowercase COBOL.

	- WISP was generating incorrect code if the keyword CHARACTERS
	  was missing from the RECORD clause in the FD.  Additionally
	  WISP was incorrectly handling FDs that contained multiple 
	  clauses on the same line.  This has all been fixed.

	- WISP now accepts a path with the -I flag. The path is written
	  as a series of directories separated by colons. (-I dir:dir:dir )

	- WISP now allows the user to specify a WORDFILE which contains
	  a list of reserved words that were used as data names on the
	  Wang VS.  To specify a wordfile use the "-W wordfile" flag or
	  the "/WORD_FILE=wordfile" switch on VMS.  When a WORDFILE is
	  used it OVERRIDES the internal list of reserved word (See
	  Chapter 2 of the WISP manual -- "COBOL Reserved Words".)
	  The shipping kit includes a file "words.def" which is a wordfile
	  that contains the same words as the internal list of reserved 
	  words.

	- WISP has been enhanced to better handle multiple statements
	  on the same line.  It previously would "miss" the second
	  statement if the first statement required no special processing.

	- WISP now allows users to specify an OPTIONAL clause on a
	  SELECT statement.

	- WISP previously had a small limit for the number of 2 byte
	  user defined figurative constants that it could handle, this
	  has been fixed.

	- WISP was occasionally generating "LINE TOO LONG" messages
	  on comment lines. This has been corrected.

	- WISP was generating incorrect code for DISPLAY AND READ
	  statements if there was an ON PFKEY clause with NO imperative
	  statement. I.e. "DISPLAY AND READ SCN1 ON CRT ON PFKEY 16."
	  WISP was treating the next statement as the imperative for
	  the ON PFKEY clause.  This has been corrected.

	- WISP now generates improved, cleaner OPEN logic.  The logic
	  that was performing the bit sets and clears before an OPEN
	  has been removed.  WISP now generates a call to wfopen3()
	  which contain an additional argument that describes the type
	  of OPEN being performed.  Previously WISPed code will continue
	  to work as the older wfopen2() and wfopen() are still supported.

	- WISP now will only insert the MOVE WITH CONVERSION paragraphs
	  when a MOVE WITH CONVERSION is used.  It used to alway insert.

	- WISP now generates meaningful FAC names in the conversion
	  of DISPLAY-WS screens.

	- The version numbers in the generated copybook names have been
	  changed. When you WISP you will see new ".cpy" files generated.

	- MESSAGE vssub was not setting return code to 12 when it
	  was interrupted by a key press. This is fixed.

	- Added two new options to the runtime OPTIONS file.

		MAXPRBPAGES  40		(Valid values 10-200)
		MAXPRBPARMS  128	(Valid values 32-512)

	  These are used by PUTPARM/GETPARM and the shared memory manager
	  to determine the dimensions of shared memory to use for the
	  storing of Parameter Reference Blocks (PRBs) or putparms.
	  The value of MAXPRBPAGES (default 40) is the number of 512 byte 
	  pages to allocate.  The value of MAXPRBPARMS (default 128) is 
	  the maximum number of PRBs that can stored.  

	  WARNING: Never change these values while programs are running.
		   On UNIX you must run wsysinit after these are changed.
		   On VMS you must delete the .GBL files.

	  NOTE:	   The "ratio" of parms to pages should be keep at 
		   approximately 3:1.  If you change this ratio you will
		   get wasted memory.  Example: If you change pages to 10
		   and leave parms at 128 the parm table will use up most
		   of the memory and you may only be able to store 10-15
		   putparms before you run out of memory.

	- Embedded FACs in fields that started in column 1 were not
	  correctly returning the data entered. This has been fixed.

	- UNIX: The WISPSORT routine was using an incorrect file creation
	  mask.  This has been fixed.

	- DISPLAY utility was issuing a second Initial GETPARM if there
	  was an error in opening the file. These was incorrect. It now
	  correctly issues a Respecify GETPARM if there was an error.

	- BACKWARDS REFERENCING of PUTPARMs is now supported. When a 
	  labeled putparm is used it is no longer deleted, instead it
	  is kept around so others can extract its values.  When a COBOL
	  OPEN is performed that uses a labeled putparm, the actual 
	  values for FILE, LIBRARY and VOLUME are update or added to the
	  putparm.

	- WPUTPARM utility has been enhanced with 3 new functions

		GET	get the value of a labeled putparm
		DUMP	dump the shared memory to a file
		ISHOW	show the internals

	  The GET function is for Backward Referencing. DUMP is a 
	  debugging aid.  ISHOW is a debugging aid that can be used
	  to assist you in selected values for MAXPRBPAGES and MAXPRBPARMS.

	- Maximum length of ACP buffer has been increased from 255 bytes
	  to 2048 bytes.

	- Enhanced the ERROR GETPARM to make it easier to identify the
	  error. Added the COBOL filename to the error message. Changed
	  the PRNAME to be FILESTAT when caused by a file status code.

	- The MOVE WITH CONVERSION logic was treating embedded dashes ("-")
	  as the sign instead of giving an error. This has been corrected.

	- WSXIO vssub was failing to timeout on a wait, also if the wait 
	  time was less then 1 second it would not wait. These are now
	  working correctly.

	- The WISP LIBRARY version has been changed to 30 (was 20) this
	  is to reflect changes to the OPEN logic and SCREEN logic.
	  We will continue to support version 20 so you will only need
	  to update if you re-WISP with version 3 of WISP.

	- Changed the behaviour of WISPSORT, if no sortkeys are given
	  it will simply unload the input file to an unsorted flat file.

	- DISPLAY utility was incorrectly handling formfeed characters
	  when they occured in the middle of the line.

	- UNIX: If PFKEY 16 is pressed from a FILE GETPARM to exit the 
	  program the exit code will be set to 16.

	- UNIX: You can now make a program behave like it is in background
	  without using SUBMIT.  This is done by setting the shell variable
	  WISPBACKGRD=yes (it doesn't actually check for "yes", any value
	  is allowed.) then doing an "export WISPBACKGRD". This will
	  prevent the program from doing any screen I/O and will cause
	  the program to abort on attempted screen I/O.

		Example: 

			$ WISPBACKGRD=yes
			$ export WISPBACKGRD
			$ wrun SAMPLE &
			$ unset WISPBACKGRD

	- New utility DISPRINT emulates the Wang VS utility. It is written
	  in Wang VS COBOL (.wcb) so it can be WISPed and compiled for
	  any WISP supported environment.

	- The VSX utility has been improved to skip over unrecognized 
	  filetypes (instead of aborting.)

	- VCAPKEYS is a new UNIX utility that assists you in creating
	  videocap files. It prompts you to press keys and records
	  the escape sequence in a file that can then be combined with
	  the videocap terminal "capabilites" to form a videocap file.

	- The WRUN frontend utility now saves the current stty state of
	  the screen and restores it on program termination. This should
	  prevent the terminal from ever being left in "raw" mode as long
	  as wrun is used.

	- UNIX: The videocap file std.def has been changed to stddef
	  for compatiblity with other systems (std.def will still be
	  supported.)

	- UNIX: New utility WPFKEY when run will wait for the user to
	  press a PF key and return the value of the key as a number.

		$ echo 'Press PFKEY to make selection'
		$ keypressed=`wpfkey`
		$ if [ $keypressed = 16 ]
		> then ......

	- New OPTION file option ALLSTATUSKEYS, this option causes WISP
	  to pass through all file status codes to the user coded 
	  declaratives. Normally WISP will intercept file status codes
	  that would not have occured on the Wang or represent "logic errors"
	  and put up an error getparm even if user coded declaratives exist.

	- PERSONALITY files were storing the actual pseudo blank 
	  character, this was causing problems if the user used multiple
	  terminal types. This has been changed, the pseudo blank
	  selection character is now stored instead.  Additionally
	  for standardization, the selection characters have been
	  changed to "B1234" for all platforms. The 'B' is for BLANK
	  and the '1' - '4' correspond to the 4 characters in the
	  videocap string "pseudo_blanks".

	- The DISPLAY utility was occasionally highlighting random lines
	  in the file. This has beed corrected.

	- The printing of psuedo blanks on a screen print has been
	  improved, it occasionally was printing garbage characters.

	- The HELP screen has been modified to look like the Wang Command
	  Processor. When a WUSAGE DISPLAY is issued or the help key is
	  pressed, the new Command Processor shell will be displayed.
	  There is also a new command:  WUSAGE SHELL which will also 
	  initiate the shell.

	- The ability to RUN a program from the Command Processor Shell 
	  (WUSAGE SHELL) will give you a Wang like interface to your system.
 	  This is part of the new "help" screen where you can run any 
	  program and then return back to the Command Processor Shell.  

	- The option to CANCEL Processing has been added to the Command
	  Processor Shell when activated from within a running program.
	  This option can be disabled by use of the wusage flag CANCEL.

	- The wusage flags that control the Command Processor options
	  have been renamed to correspond to the new look of the Command
	  Processor Shell.  (The previous flags are still supported.)
	  The flags can be set to Y or N to enable or disable the option.

		HELP		- Command Processor Shell
		SETFILE		- SET File Usage Constants
		SETPRINT	- SET Print Mode Defaults
		SETSUB		- SET Submit Procedure Defaults
		QUEUES/PRTQUE	- Manage QUEUES/PRINT QUEUE
		SYSTEM		- Manage SYSTEM
		DISPLAY		- Use DISPLAY utility
		UTILS		- GENERAL Utilities
		GOOD		- GOODIES Utilities
		TERMINAL	- Configure TERMINAL
		PSEUDO		- PSEUDO blank characteristics
		CURSOR		- CURSOR characteristics
		SCREEN		- SCREEN characteristics
		COMMANDS	- Enter COMMANDS
		SAVE		- SAVE environment
		PRINTSCR	- PRINT PROGRAM/COMMAND screen
		CANCEL		- CANCEL Processing

	  The Manage QUEUES/PRINT QUEUE option will appear if available.
	  The Manage SYSTEM option will envoke the System Administration
	  program if available. On the RS6000 SYSTEM runs SMIT.  The UTILS
	  option displays a menu for general utilities: DISPLAY, EDIT, 
	  DISPRINT, REPORT, INQUIRY, CONTROL and DATENTRY. Currently
	  DISPLAY and DISPRINT are available and in your WISP kit.  EDIT
	  will be available shortly.  The remaining utilities are add on 
	  products that can be purchased through IDSI.

	  The GOOD option will add the GOODIES utilities to the UTILITIES
	  menu. The GOODIES utilities are only available as an 
	  add on product called EDE (Extended Development Environment).
	  The utilities available are CLOCK, CALCULATOR, CALENDAR,
	  NOTEPAD, amd PUZZLE.

	  The Enter COMMANDS options will give you the ablity to enter
	  native commands.  On UNIX and MS-DOS this will start a shell,
	  on VMS this will allow you to enter DCL commands.



	RELEASE NOTES FOR WISP VERSION V3x (Version 3 prerelease)
	=========================================================

	- *** NOTE ***: There are three new VIDEOCAP entries that must
	  be defined in your videocap files. The videocap files that are
	  distributed with this release have them defined -- but if you
	  have created your own videocap files these entries need to be
	  included.
		SCREEN_NORMAL		- Normal screen background
		SCREEN_REVERSE		- Reversed screen background
		GRAPHSTR		- Graphics characters (13 chars)
	  Graphstr is 13 characters long and defines line drawing chars etc.
	  These characters are written in graphics mode.
	  The characters are: 
		 1 Vertical bar
		 2 Horizontal bar
		 3 Upper left corner
		 4 Upper right corner
		 5 Lower left corner
		 6 Lower right corner
		 7 Upper Tee
		 8 Lower Tee  
		 9 Left  Tee
		10 Right Tee
		11 Cross
		12 Left pointer
		13 Right pointer

	- WISP is now ported to the SUN SPARC Station.

	- When a CLOSE is performed on a print file it is spooled with the
	  form number that was in the usage constants at time of the OPEN.

	- The DISPLAY utility was double spacing when it saw carriage
	  return and line feed together; this has been fixed.

	- UNIX: The VSSUB FIND was giving unpredictable behavior when
	  it was reading a directory that had filenames greater than 
	  20 characters long; this has been corrected.

	- VMS: A call "LINK" to a .COM file was exiting with an incorrect
	  return code; this has been fixed.

	- VMS: If terminal device is not in TTMAP.DAT, or TTMAP.DAT does
	  not exist WISP will now set the device number to 0 instead of
	  giving an error message.

	- The VSSUB WSXIO now will return the AID character in IOSW.

	- Background jobs that attempt screen I/O will now have the
	  screen written to the WISP error log.

	- UNIX: The VSSUB FIND will no longer return a separate item
	  for .idx files. This should only affect LPI and AIX COBOLs as
	  these use CISAM files that create 2 files for an indexed file.
	  Previously FIND would find 2 items for every indexed file, now
	  it doesn't find the .idx part.

	- Fixed the VSSUBs BITUNPK and BITPACK; BITUNPK was writing the 
	  bits in reverse order, and BITPACK was reading the bits in reverse
	  order.

	- UNIX: The WISPSORT routine was performing character comparisons
	  using "char" type characters, this has been changed to use
	  "unsigned char" type characters. On some systems "char" is 
	  considered as a signed character, this resulted in 8-bit
	  characters being treated as negative values and the sort order
	  was incorrect.

	- UNIX: The LINK with CANCELEXIT was not working correctly if
	  there was a LINK to a shell script between the CANCELEXIT
	  and the LOGOFF. The intermediate shell script caused WISP
	  to lose track of the CANCELEXIT so a LOGOFF would not
	  be caught. This has been corrected.

	- The VSSUBS WSXIO and SCREEN were failing if called before the
	  first vwang() call; this has been fixed.

	- Two new vwang() functions have been added to allow reads and
	  writes with DISPLAY AND READ style pseudo-blank processing.
	  The new functions are WRITE_ALL_PB (11) and READ_ALL_PB (12).

	- UNIX: The READACP timeout logic has been corrected.

	- Fixed the default keyboard setting to be locked. It was set to
	  default to unlocked. If a READ of the workstation is done before
	  a WRITE it was erroneously stopping and waiting for input.

	- VMS: The VSSUBS FIND and SCRATCH were occasionally failing
	  to find the file; this has been fixed.

	- VSSUB WSXIO now allows arg5, the Order-Area-Length, to be optional.

	- UNIX: Added a new option to wrunconfig:
		COBOL=ACU	(default)	ACUCOBOL
		COBOL=AIX			AIX VS COBOL
	  This option tells wrun which cobol is in use and should be
	  added to your wrunconfig file.

	- UNIX: On a file GETPARM or an error GETPARM, if PF16 is pressed
	  to terminate the program, WISP will set the retcode = 16.

	- On the WISP HELP screen under "Terminal Attributes" there is now
	  an option for setting the default screen background.  This 
	  requires the videocap entries SCREEN_NORMAL and SCREEN_REVERSE.

	- The DISPLAY utility form-feed indicator has been changed to more
	  closely resemble the Wang's.  It was a "FF>----". It has been
	  changed to be a highlighted line.

	- UNIX: The VSSUB MESSAGE was not allowing different users to 
	  communicate with message if their default umask protections did not
	  allow writes. This has been corrected.

	- VMS: The VSSUB RENAME now does not allow a rename on a file
	  that is in use.

	- VMS: The VSSUB LINK will look first for a .COM and if not found
	  will then look for a .EXE. Originally LINK would look only for
	  a .COM; functionality was then added to look for an .EXE first.
	  This caused problems when there were files with both extensions
	  and the user was expecting LINK to select the .COM.

	- The WISP runtime error reporting routine now displays a reversed
	  error window instead of overwriting the top 2 lines on the 
	  screen.  It uses the box drawing characters in GRAPHSTR as
	  defined in your videocap file.

	- The VSSUB EXTRACT now supports the "P#" keyword which will
	  return the default printer number -- this does the same thing
	  as the keyword "PR".

	- On an OPEN with NORESPECIFY set in the SELECT statement WISP
	  was incorrectly intercepting certain file status codes and 
	  issuing an error GETPARM; this has been corrected so that no
	  file status codes will be intercepted on an OPEN if the program
	  includes DECLARATIVES for the file.

	- UNIX: Added support for PRMAP -- the printer number map for use
	  with constructing LP commands for printing.  The format is
	  identical to the FORMS file, a 3 character printer number 
	  followed by a character string to be inserted into the LP
	  command.  If a printer number is not found or the PRMAP file
	  is missing then nothing will be added to the LP command.

	- UNIX: The VSSUB READFDR will now recognize uppercase file and
	  library names. It will try all the 4 combinations of upper and
	  lower case names in the following order: 
		lib/file: lib/FILE: LIB/FILE: LIB/file

	- The VSSUB SCREEN was erroneously printing the contents of
	  protected fields; this has been corrected.

	- ACUCOBOL: An error GETPARM caused by a file status 34 was giving
	  an incorrect error message.  It was saying BOUNDARY VIOLATION; this
	  has been corrected to say DISK FULL.

	- There was an error introduced in 2.0f with embedded FACs. When
	  a modifiable field was created in the middle of a DISPLAY-WS
	  field the data was not being transferred back. This has been
	  corrected.

	- VMS: The symbol $W_RETURN_CODE was being set on a return from
	  LINK with the swapped value of RETURN-CODE this was incorrect
	  and has been fixed.

	- The translator now truncates the PROGRAM-ID at 8 characters.

	- WISP was writing bad copybook files when the /convert switch
	  was set. This is now corrected.

	- Filename extensions used by the translator have changed:
		OLD		NEW		Desrciption
		=========	=======		===========
		xxx_p.lib	xxx.dcl		Relocated declarative paras
		xxx_d.tmp	xxx.dtp		Temp declaratives file
		xxx_w.tmp	xxx.wrk		Temp work file

	- New WISP directives *$UNIX_CODE and *$UNIX_END have been added
	  which will include code when translated on UNIX for any COBOL.

	- UNIX: On an EXIT PROGRAM the RETURN-CODE was not being set
	  correctly because the call to setretcode() was inside a
	  conditional.  This has been corrected.

	- UNIX: The WISP-EXIT-PROGRAM and WISP-STOP-RUN paragraphs have
	  been simplified by replacing the calls to WEXITH, VEXIT and
	  ACUPARGS with a call to a single routine, WISPEXIT.

	- A new utility WSORT has been added.  This does an external file 
	  sort using SORTCALL on VMS and WISPSORT on UNIX. It accepts 
	  all parameters via GETPARMs so it can be used in a script.
	  It is very similar to the Wang VS utlity SORT, except it does 
	  not allow SELECT or MERGE logic.


