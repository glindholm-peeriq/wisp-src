								v21errata.lis
	WISP VERSION V2.0B ERRATA
	=========================

	2.6 CURRENT LIMITATIONS

		- A START on an alternate key where data-name-2 is not the
		  the alternate key is not supported.

		- On UNIX the usersub SORTCALL is not supported.

	4.2 WISP SWITCHES

		The NOLOCK_PROCESSING switch is no longer supported.

	4.3.1 OPTION FILE

		TRAP_START_TIMEOUTS is not supported. With MANUAL RECORD
		LOCKING this condition will never occur.

	5.1.9 EXTRACT

		The 'NA' option incorrectly states it returns the users
		name. It actually returns the userid.

	5.1.14 LINK

		A LINK_TYPE of ' ' (blank) under UNIX will first look
		at the RUNLIB/RUNVOL and if the program is not found
		will then look in the current directory.

		The PARAMETER_COUNT for ACUCOBOL is now 32.

		The COMPLETION_CODE & RETURN_CODE now return meaningful
		values on VMS.

	5.2.X ACUNARGS

		Usage:		ACUNARGS(COUNT)
		Description:	This routine returns the number of arguments
				that were passed thru LINK.
				(ACUCOBOL only)
		Parameters:
		COUNT		Int(2) (BINARY) The number are args.

	5.2.X SETTRIGPROG

		Usage:		settrigprog(VOL,LIB,FILE)
		Description:	This routine identifies the program to be
				run when the TRIGGER KEY is pressed.
				The default definition for the TRIGGER KEY
				is ^N (Ctrl+N).
		Parameters:
		VOL		Alpha(6) The volume of the program to run.
		LIB		Alpha(8) The library
		FILE		Alpha(8) The file

	5.2.28 WFNAME

		The usage should read:

		Usage:		wfname(mode,vol,lib,file,name)

	6.2.1 THE VT200/VT300 KEYBOARD
		
		The default definition for "Prev Screen" key and
		"Next Screen" key is now the functions "BackTab" 
		and "NewLine".

	7.2.6 SPECIAL CHARACTERS IN FILE NAMES ON VMS

		NOTE:	##files will generate 2 versions; the first is the
			"lock file" to lock the name on the disk, the second
			is the actual data/print file. The "lock file"
			will always be empty and is created to prevent
			another program from using the same file name.

	7.5.X WORK LIBRARIES ON VMS

		WISP mimics the way Wang creates temporary work libraries
		based on the master process ID. It generates a unique work
		library name every time the user logs on. The format of the
		name is different then the Wang. It starts with "WK" followed
		by a a six character number which is the last 6 hex digits of
		the process ID.

			Example:   WK003B62

	8.2.6 BINARY and COMPUTATIONAL

		ACUCOBOL now uses COMP-4 not COMP-5.

	8.2.9 DECLARATIVES

		The statements "USE AFTER ERROR ON" INPUT, OUTPUT, I-O,
		SHARED, EXTEND are not supported as they cause conflicts
		with WISP declaratives of the form 
			"USE AFTER ERROR ON filename".

	8.3.1 RECORD LOCKING - VAX/VMS

		WISP now uses MANUAL RECORD LOCKING for all file I/O.
		The problems describe in this section are no longer
		extent.

	10.X MAKEMSG

		This utility compiles the WISP runtime message file
		from its text form "wispmsg.txt" to its compiled
		form "wispmsg.dat".

	A.2.1 CONTENTS OF THE UNIX DISTRIBUTION KIT

		./wisp/acucobol/sub.c	is not distributed this comes with
					your ACUCOBOL.

		./wisp/bin/vsload	is only distributed on selected
					ports such as AT&T 3b2.

		./wisp/bin/linecount	is not yet available on UNIX.

	A.2.2 INSTALLING WISP ON A UNIX SYSTEM

		(ADD THE FOLLOWING)

		WISP is sometimes distributed as a single compressed cpio 
		file named "wisp.cpio.Z". If your media has this file on the
		label then load it as follows:

		- cd to the directory where you want the wisp dir created.

		- load the file from the diskette or tape using cpio or tar
		  as specified on the label. E.g.

			$ cpio -icvB </dev/rfd0
	
		- You will now have file "wisp.cpio.Z" in your current dir.

		- Uncompress the file.

			$ uncompress wisp.cpio.Z

		- You will now have file "wisp.cpio".

		- Now un-cpio the file

			$ cpio -icvBd <wisp.cpio

		- this will create directory "wisp" and under that will
		  be directories "bin", "lib", "acucobol", "config" 

	A.2.3 BUILDING AN ACUCOBOL runcbl

		(ADD THE FOLLOWING)

		First copy the wisp library files to /usr/lib.

			$ cd (prefix)/wisp/lib
			$ cp * /usr/lib			(you may need to be su)

		Copy the wisp acucobol files into your acucobol directory

			$ cd (your acucobol dir)
			$ cp (prefix)/wisp/acucobol .

		Edit runcbl.umf (the makefile) to copy the new runcbl
		to your bin directory. You may also need to add "-lPW"
		to the library list, depending on your system. You may
		also wish to change the name of the runcbl executable
		that runcbl.umf creates.

		Now make runcbl.

			$ make -f runcbl.umf

	B.2.7.4 ACUCONFIG FILE

		The default maxium number of files allowed open is 32. On
		large applications this is often not enough. The following
		can optionally be added to ACUCONFIG to increase this 
		number to 64.

			MAXFILES 64

	D.4.3 FUNCTION KEYS

		(ADD THE FOLLOWING)

		trigger1		Activate the program specified by
		 ...			routine "settrigprog".	
		trigger8

		generic_newline		The NEWLINE key.

	D.6 STANDARD VIDEOCAP GENERIC KEY DEFINITIONS

		Generic next scr	^f^n
		Generic prev scr	^f^p

		Generic Newline		^fn or ^fN

