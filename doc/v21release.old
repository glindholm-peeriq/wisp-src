							      v21release.notes
	RELEASE NOTES FOR WISP VERSION V2.0B
	====================================

	- ACUCOBOL: Added wispsub ACUNARGS, this will return
	  the number of arguments passed across a LINK.

	- ACUCOBOL: ACULINK has been updated to call ACUNARGS and call the
	  linked to program with only the number of args passed,
	  previously ACULINK always called with 16 args.

	- VMS: Added usersub LINK return and completion codes.

	- Added TRIGGER KEY to run user defined program.

	- ACP routines for have been implemented for UNIX.

	- On UNIX if USAGE CONSTANTS were changed at a lower
	  link level they would not be reflected upon return
	  until the program was restarted. This has been corrected.

	- On UNIX, usersub LINK with a "link-type" of ' ' (blank)
	  would use the RUNLIB & RUNVOL only. It will now also check
	  in the current directory to find the program.

	- The usersub SCREEN now correctly backfills the file, library
	  and volume with the actual name used.

	- SCREEN would give an invalid vwang function of 0 (zero) when
	  printing the screen, this has been fixed.

	- WISP record lock tracking now uses the filename instead of 
	  an index number.

	- VAX MANUAL RECORD LOCKING is implemented. All WISP converted
	  programs that run on VMS now use full MANUAL RECORD LOCKING
	  for all file I/O.

	- The NOLOCK_PROCESSING switch is no longer supported in WISP.

	- The TRAP_START_TIMEOUTS option is no longer supported.

	- ACUCOBOL: The usersub LINK now allows 32 parameters (was 16).

	- ACUCOBOL: Calls to "wvaset" before variable argument usersubs
	  have been removed from the COBOL and are now done transparently
	  by the sub85() routine.

	- ACUCOBOL: comp-5 binary data type has been replaced by comp-4.
	  This is the ACUCOBOL internal byte ordered binary. On byte
	  swapped machines sub85() will now transparently change
	  comp-4 data items into native bytes order on calls to 
	  usersubs & WISP routines. This has the effect of making
	  ACUCOBOL object code transportable across all machines.

	- If there is no screen I/O then the screen will not be reset
	  on program termination.

	- ACUCOBOL: a call "LINK" to another ACUCOBOL program does
	  not force a clear of the screen. The screen is still
	  reset, just not cleared.

	- ACUCOBOL: a program returning from a call "LINK" does
	  not force a clear of the screen.

	- NEWLINE key has been added.

	- WISP would previously crash or generate uncompilable
	  code if a large number of records (01 level) were 
	  specified for a single FD (greater then approx 35 records).
	  This has been fixed.

	- When the COMP Key file option was used WISP would indent
	  the entire line (including the line number) 2 spaces, this
	  would cause uncompilable code. This has been fixed.

	- VMS: The type ahead buffer has been re-installed.

	- VMS: A "LINK" to an ".EXE" now works. (You still must
	  call "setwispfilext" first.)

	- The DISPLAY utility now displays control characters as 
	  a space.

	- VMS: The problem with WCHAIN causing a stack dump has been fixed.

	- Videocap now supports the use of nulls in key definitions.


	RELEASE NOTES FOR WISP VERSION V2.0C
	====================================

	- **** The internal SCREEN VERSION number has been changed to 21.
	  **** WISP will continue to support SCREEN VERSION number 20.

	- The translated DISPLAY-WS screen record element
	  DISP-ITEM-LENGTH was a two byte binary, it is now a "PIC X".
	  This allows for better compression and uniformity in the
	  record (it was the only binary value in the record).

	- WISP now generates calls to "wfopen2" instead of "wfopen"
	  the calling sequence has been changed to insert the
	  WISP-APPLICATION-NAME as the sixth parameter. Perviously
	  WISPed program will still work with the new library as 
	  we will continue to support the "wfopen" routine.

	- File GETPARMs now display the WISP-APPLICATION-NAME.

	- Pseudo Blank handling for direct READ & REWRITE of the screen
	  has been fixed so as to more exactly emulate the Wang.

	- CURSOR POSITION clause bug that was introduced in 2.0B on
	  byte swapped machines has been fixed.

	- The "squished screens" problem where single spaces were being
	  compressed out has been fixed.

	- Multiple consecutive OCCURS at the same level within DISPLAY-WS 
	  records were sometimes mistaken as being nested, this has
	  been fixed.

	- DISPLAY AND READ now properly updates the ORDER AREA with
	  the CURSOR row and column.

	- READ and REWRITE of the workstation with ROW oriented I/O
	  now behaves correctly. (Except READ where the FD has 
	  multiple 01 records of different sizes, in this case READ
	  will always read the number of rows specified in the
	  first 01.)

	- UNIX: STOP RUN and EXIT PROGRAM statements within the
	  DECLARATIVES are now handled correctly.

	- Nulls in Videocap key definitions now work on all platforms.

	- READ with TIMEOUT was not properly performing the imperative
	  statement on a timeout or was setting a flag incorrectly
	  resulting in the timeout imperative being performed after
	  every read. This was introduced in 2.0B and is now corrected.

	- COBLINK has now been implemented for UNIX. It is equivalent
	  to a LINK of type "S" with no parameters.

	- WISP would terminate in the DECLARATIVES on a USE statement 
	  for a workstation file. This has been corrected, it now will
	  generate the USE statement but it is important to understand
	  that WISP does not treat the workstation as a "file" so
	  DECLARATIVE code will never be executed.

	- WISP now accepts $WANG-CODE, $WANG-END with dashes as well
	  as $WANG_CODE, $WANG_END with underscores. These are treated
	  identically for all the $xxx_CODE/ELSE/END directives.

	- WISP now supports a $COPY-CODE $COPY-END that can be embedded
	  as comments into your Wang source, just like $WANG-CODE, that
	  will cause the surrounded lines to be copied without processing
	  into the output file. These lines will have column 7 asterisks
	  replaced by spaces.	

	- Backtab previously behaved incorrectly if there was only one
	  field on the screen, this has been fixed.

?????	- VMS: Now uses the process-id instead of the master-process-id
	  for the generation of WORKLIB.

	- Added a new (non-COBOL) calling interface for GETPARM that
	  allows greater then 255 parameters on the VAX. Call GETPARM
	  with 2 parameters, the first is a pointer to an array of
	  pointers (the arguments) the second is a count of the number
	  of arguments.

	- VMS: On open output file GETPARM where file already exists
	  the message for PF3 has been changed to indicate the
	  creation of a new version instead of deleting the file.
	 	
?????	- VMS: Now the .GBL files (shared memory) will only be created 
	  when needed, i.e. when a PUTPARM is issued. And will be
	  deleted when empty.

	- A COBOL callable routine "wmemcpy" has been added that does
	  a call the the C routine "memcpy" it has the same parameters
	  i.e.  CALL "wmemcpy" USING DESTINATION SOURCE LENGTH.
	  The argument LENGTH must be a 2 byte binary.

	- WISP has been ported to the Honeywell BULL, and Wang DX2000.
	  (This is in addition to the VAX/VMS, Ultrix, IBM RS6000,
	  AT&T 3B2, Data General Avion, HP 800, Motorala, 
	  SCO UNIX on 386/486)

	- VMS: COBLINK to a .EXE or a .COM is now implemented.

	- On some non-DEC platforms, if the program contained multiple
	  SELECT statements for the workstation all but the last
	  workstation definition would not be included in the output
	  file and files ending .scr would be left around. This
	  has been fixed.

	- WISP perviously would terminate on the SPECIAL-NAMES
	  paragraph, this has been fixed.

	- UNIX: Added a utility called VIEWKEY that will display the
	  escape sequence generated by a key on the keyboard. This
	  is an aid for the writing of videocap files.

	- ACUCOBOL: The utility "wrun" has been enhanced; if it is executed
	  with no arguments it will display the runcbl and options that
	  it is currently using.  If the option -? is added it will display
	  the full command it would have executed. If the option -- is
	  used then the runcbl will be executed with no options.

?????? 	- GETPARM & PUTPARM & WPUTPARM stuff 

	- VMS: The internal structure generated by a PUTPARM has changed and
	  is not compatable with earlier versions. All programs should be
	  re-linked with the new library (does not require a re-WISP) as
	  the earlier versions of GETPARM and PUTPARM will not interact
	  with the current versions of GETPARM and PUTPARM. 

	- The WISP menuing package described in Chapter 9 of the
	  WISP manual is now available under UNIX.
