	Copyright (c) 1995 by DevTech Migrations Inc. All Rights Reserved.
	
	====================================================================
	
	Title:		WISP ACP ROUTINES
	
	Document:	acp.lis
	Last Updated:	21 JUNE 93
	Products:	WISP and ACP routines
	Versions:	3.3 
	
	Summary:	Description of the WISP ACP routines .

	====================================================================
	

	Brief description of WISP ACP Routines
	======================================

	This document is meant as a suppliment to the Wang VS ACP routines
	document.  The reader of this document is assumed familiar with
	the Wang VS ACP routines.


	1.0 Usage
	=========

	The WISP ACP routines are designed to be functionally identical to
	the Wang VS ACP routines.  The calling sequence and usage of the 
	functions OPENACP, CLOSEACP, READACP, WRITEACP, BREAKACP, and 
	CHECKACP is the same as on the Wang.

	The main difference between the Wang VS and the WISP implementation
	of the ACP routines is the way an I/O port (NODE) is configured.  On
	the Wang you use the CONFIGTC program to configure a port.  On Unix
	there are two routines called GETACP and SETACP are provided in 
	place of CONFIGTC.  For VAX/VMS you create a text file that contains
	the configuration information.


	1.1 Configuration on UNIX
	=========================

	The node configuration information is stored in an ACPMAP file. Each
	line in the file contains the configuration information for one node.
	The OPENACP routine uses this file to lookup the node configuration.
	There are two routines GETACP and SETACP that are used to maintain
	the node configuration information in the ACPMAP file.  GETACP will
	retreive the current configuration for a node and SETACP is used to
	configure a new node or update the configuration of an existing node.


	1.1.1 The ACPMAP on UNIX
	========================

	The ACPMAP file contains the node configuration information.  The
	pathname of this file is specified by two shell variables, $ACPCONFIG
	and $ACPMAP.  $ACPCONFIG contains the name of the directory which 
	contains the file.  If $ACPCONFIG is not defined, the current 
	directory is used.  $ACPMAP contains the name of the file.  If 
	$ACPMAP is not defined, "ACPMAP" is used as the filename.  

	Example:
		$ ACPCONFIG=/usr2/project/config
		$ ACPMAP=ACPMAP
		$ export ACPCONFIG ACPMAP

	Each line in the ACPMAP file contains the configuration information
	for a given node.  The fields on a line must be separated by spaces
	or tabs.  The line format is as follows:

		Name Device Weor Reor1 Reor2 Reor3 Baud Parity Databits
			Stopbits Duplex Flowcontrol

		Name		NODE name
		Device		Unix device file
		Weor		Write End Of Record sequence
		Reor1		Read End Of Record sequence (hex)
		Reor2		Alternate Read End Of Record sequence (hex)
		Reor3		Alternate Read End Of Record sequence (hex)
		Baud		Baud rate; 50,75,110, 150, 200, 300, 600,
					1200, 1800, 2400, 4800, 9600,
					19200, or 38400
		Parity		E=even, O=odd, N=no parity
		Databits	Data bits; 5, 6, 7, or 8
		Stopbits	Stop bits; 1, or 2
		Duplex		(UNUSED)
		Flowcontrol	X=XON/XOFF, N=no XON/XOFF, U=unchanged
	

	For example:

		PORT1 /dev/tty01 0a 0a - - 19200 e 7 1 - X
		PORT2 /dev/tty02 0a 0d0a 0a - 9600 o 8 2 - N

	Notice that unused fields must have a hyphen.  

	The ACPMAP file can be maintained with either GETACP and SETACP or
	with a text editor.  However, it is recommended that you use GETACP
	and SETACP to access this file, since its format may change in a
	future release.


	1.1.2 GETACP and SETACP
	=======================

	The GETACP and SETACP routines are used to maintain and update the
	ACPMAP file.  The GETACP routine will retieve the ACP-RECORD for
	a given node.  The SETACP routine will write the ACP-RECORD to the
	ACPMAP file to create a new node or update an existing node.
	The ACP record consists of several PIC X items, as shown in the code 
	fragment below.  To retrieve the configuration for a particular node,
	move the node name to the NAME field of the record, and call GETACP.
	GETACP will locate the information for that node, and store it in 
	the record.  The program can then make changes to the record and 
	call SETACP to update the configuration for that node.  If a node 
	has not yet been configured, you must call SETACP to configure it 
	before using it in an OPENACP or calling GETACP.  

	NOTE:	The ACPMAP file must exist before calling GETACP. GETACP 
                will return a 14 in RETCODE if the file does not exist.
                The SETACP routine will create the file if it does not exist.

	GETACP:
		Usage:		CALL "GETACP" USING ACP-RECORD, RETCODE.

		Parameters:
		ACP-RECORD	Alpha(114)	The ACP record. (see below)
		RETCODE		Int(4)		The return code
					0	Success
					4	Node not found
					14	Unable to open ACPMAP

	SETACP:
		Usage:		CALL "SETACP" USING ACP-RECORD, RETCODE.

		Parameters:
		ACP-RECORD	Alpha(114)	The ACP record. (see below)
		RETCODE		Int(4)		The return code
					0	Success
					1	Unable to create temp file
					14	Unable to open/create ACPMAP


	The following code fragment illustrates the use of GETACP and SETACP.

	    WORKING-STORAGE SECTION.
    
	    01  ACP-RECORD.
		03  NAME	 PIC X(16).       ie, NODE0
		03  DEV	         PIC X(64).       ie, /dev/tty01
		03  WEOR	 PIC X(6).        in hex, ie, 0d0a
		03  REOR1	 PIC X(6).        in hex, ie, 0d
		03  REOR2	 PIC X(6).           "
		03  REOR3	 PIC X(6).           "
		03  BAUD         PIC X(5).        ie, 9600
		03  PARITY       PIC X.           E, O, or N
		03  SIZE         PIC X.           5, 6, 7, or 8
		03  STOP         PIC X.           1 or 2
		03  DUPLEX       PIC X.           (UNUSED)
		03  FLOW         PIC X.           X, N, or U
	    01  RETCODE.
		03  RC-1         BINARY.
		03  RC-2         BINARY.
    
	    PROCEDURE DIVISION.
    
	    MAIN-SECTION.

	   *  Load the confguration for PORT2.
		MOVE "PORT2" TO NAME.
		CALL "GETACP" USING ACP-RECORD, RETCODE.

	   *  Change the baud rate to 19200.
		MOVE "19200" TO BAUD.

	   *  Save the new configuration of PORT2.
		CALL "SETACP" USING ACP-RECORD, RETCODE.

	   *  Open node PORT2.
		MOVE "PORT2" TO DEST-NODE.
		CALL "OPENACP" USING DEST-NODE, REL-LINE, RETCODE.


	1.2 Configuration for VAX/VMS
	=============================

	The configuration of the ACP ports are defined in a data file called
	ACPMAP.DAT.  This file should be located in the WISP$CONFIG 
	directory. If one is not there then use any editor to create it.  
	Each line of the file contains the information for a given node.  
	The fields on a line must be separated by white space.  The line 
	format is as follows:

	Name   VAX ID   Weor   Reor1   Reor2   Reor3

	for example:

	TESTPORT   LP01   0D   0D0A   0A

	What this says is that TESTPORT will be assigned to device LP01 with
	WEOR equal to <CR>, REOR1 equal to <CR><LF>, and REOR2 equal to <LF>.
	So, every write operation will end with a carriage return and every 
	read operation will end with the carriage return linefeed sequence 
	or just a linefeed.

	The WEOR and REOR sequences are 2 digit hex values.

	WEOR = write end of record sequence
	REOR = read end of record sequence

	NOTE:  If weor is a "+" then there is no end of record sequence and
	       the length of the sequence calculates to zero.


	========================= END OF DOCUMENT ==========================
