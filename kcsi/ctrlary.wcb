000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. CTRLARY.
000300 AUTHOR. MJB.
000400 DATE-WRITTEN.  09/30/89.
000500 DATE-COMPILED.
000600*---------------------------------------------------------------
000700* THIS PROGRAM HANDLES ARRAY PROCESSING, ADDS DELETES AND SORTS
000800*---------------------------------------------------------------
000900 ENVIRONMENT DIVISION.
001000 CONFIGURATION SECTION.
001100 FIGURATIVE-CONSTANTS.
001200     COPY FIGS.
001300 INPUT-OUTPUT SECTION.
001400
001500 FILE-CONTROL.
001600
001700 DATA DIVISION.
001800 FILE SECTION.
001900
002000 WORKING-STORAGE SECTION.
000000     COPY WSKTRACE.
000000 01  SCCS-WHAT PIC X(50) VALUE
000000     "@(#)ctrlary.wcb 1.7 9/11/94".
002100 01  FILLER.
002200     05  CF-LO                   BINARY.
002300     05  CF-HI                   BINARY.
002400     05  CF-SORT-BY-NAME         PIC 9 VALUE 1.
002500     05  CF-SORT-BY-POS-LEN      PIC 9 VALUE 2.
002600     05  CF-SORT-BY-SEQ          PIC 9 VALUE 3.
002700     05  CF-SORT-CODE            PIC 9.
002800 01  SORTIT      PIC X.
002900 01  LO-FLAG     PIC 9.
003000     88 LO-IS-NOTHING       VALUE 0.
003100     88 LO-IS-UPDATEABLE    VALUE 1.
003200     88 LO-IS-A-GROUP       VALUE 2.
003300 01  HI-FLAG     PIC 9.
003400     88 HI-IS-NOTHING       VALUE 0.
003500     88 HI-IS-UPDATEABLE    VALUE 1.
003600     88 HI-IS-A-GROUP       VALUE 2.
003700 LINKAGE SECTION.
003800 01  CTRL-IO-BLOCK.
003900     COPY LKDIO.
004000 01  CTRL-HEADER-RECORDS.
004100     COPY RCCTRLH.
004200 01  CF-RECORD.
004300     COPY RCCTRLF.
004400     COPY LKCTRLAR.
004500     COPY RCCTRLT1.
004600     COPY RCCTRLT2.
000000     COPY LKPRC.
004700 PROCEDURE DIVISION USING
000000     CALLED-RC
004800     COPY LKCTRL.
004900 MAIN-LOGIC SECTION.
005000 PROGRAM-BEGIN.
000000     MOVE "CTRLARY BEGIN" TO KTRACE-RECORD.
000000     PERFORM CALL-KTRACE.
000000     MOVE ZEROES TO CALLED-RC.
005100     MOVE "00" TO CF-RETURN-CODE.
005200     IF CF-ACTION-CODE = "INIT"
005300         PERFORM INIT-CF-TABLE
005400     ELSE
005500     PERFORM LOAD-PASSED-RECORD
005600     IF CF-ACTION-CODE = "APPEND"
005700         PERFORM APPEND-CF-ENTRY
005800     ELSE
005900     IF CF-ACTION-CODE = "ADDSEQ"
006000         PERFORM ADD-CF-ENTRY-BY-SEQ
006100     ELSE
006200     IF CF-ACTION-CODE = "DELETE"
006300         PERFORM DELETE-CF-ENTRY
006400     ELSE
006500     IF CF-ACTION-CODE = "SORTPOS"
006600         PERFORM SORT-CF-TABLE-BY-POS-LEN
006700     ELSE
006800     IF CF-ACTION-CODE = "SORTSEQ"
006900*        ACCEPT SORTIT
007000         PERFORM SORT-CF-TABLE-BY-SEQ
007100     ELSE
007200     IF CF-ACTION-CODE = "SORTNAME"
007300         PERFORM SORT-CF-TABLE-BY-NAME
007400     ELSE
007500     IF CF-ACTION-CODE = "FINDNAME"
007600         PERFORM FIND-CF-NAME
007700     ELSE
007500     IF CF-ACTION-CODE = "FNDALIAS"
007600         PERFORM FIND-CF-ALIAS
007700     ELSE
007800     IF CF-ACTION-CODE = "FINDCUMM"
007900         PERFORM FIND-CUMM-NAME.
008000     MOVE CF-NUMERIC-RETURN-CODE TO CALLED-RC.
000000     MOVE "CTRLARY EXIT" TO KTRACE-RECORD.
000000     PERFORM CALL-KTRACE.
008100 MAIN-LOGIC-EXIT.
           EXIT PROGRAM.
008200 MAIN-LOGIC-STOP.
008300     STOP RUN.
008400 LEVEL-2 SECTION.
008500*---------------------------------------------------------------
008600* ROUTINES TO MANIPULATE THE CONTROL TABLE.
008700* THEY ALL MAKE CERTAIN ASSUMPTIONS.
008800* THAT ANY INSERTIONS TO THE TABLE HAVE A CF-NAME
008900* THAT THE RETURN CODES ARE BEING HONORED
009000*---------------------------------------------------------------
009100
009200 LOAD-PASSED-RECORD.
009300     MOVE CX-INT-LEN TO T1-INT-LEN(CF-WRK-IDX).
009400     MOVE CX-EXT-LEN TO T1-EXT-LEN(CF-WRK-IDX).
009500     MOVE CX-EDITED-LEN TO T1-EDITED-LEN(CF-WRK-IDX).
009600     MOVE CX-START-POS TO T1-START-POS(CF-WRK-IDX).
009700     MOVE CX-OCCURRENCES TO T1-OCCURRENCES(CF-WRK-IDX).
009800     MOVE CX-ZERO-SUPPRESS TO T1-ZERO-SUPPRESS(CF-WRK-IDX).
009900     MOVE CX-DECIMAL-INSERT TO T1-DECIMAL-INSERT(CF-WRK-IDX).
010000     MOVE CX-SIGN-CONTROL TO T1-SIGN-CONTROL(CF-WRK-IDX).
010100     MOVE CX-DOLLAR-COMMA TO T1-DOLLAR-COMMA(CF-WRK-IDX).
010200     MOVE CX-REPORT-CODE TO T1-REPORT-CODE(CF-WRK-IDX).
010300     MOVE CX-UPDATE-CODE TO T1-UPDATE-CODE(CF-WRK-IDX).
010400     MOVE CX-DECIMAL-POS TO T1-DECIMAL-POS(CF-WRK-IDX).
010500     MOVE CX-BINARY-EDIT TO T1-BINARY-EDIT(CF-WRK-IDX).
010600     MOVE CX-UPDATE-SEQ TO T1-UPDATE-SEQ(CF-WRK-IDX).
010700     MOVE CX-PACKED-DIGITS TO T1-PACKED-DIGITS(CF-WRK-IDX).
010800     MOVE CX-GROUP-FIELDS TO T1-GROUP-FIELDS(CF-WRK-IDX).
010900     MOVE CX-DISPLAY-CODE TO T1-DISPLAY-CODE(CF-WRK-IDX).
011000     MOVE CX-NAME TO T2-NAME(CF-WRK-IDX).
011100     MOVE CX-TYPE TO T2-TYPE(CF-WRK-IDX).
011200     MOVE CX-VALIDATION TO T2-VALIDATION(CF-WRK-IDX).
011300     MOVE CX-TABLE-NAME TO T2-TABLE-NAME(CF-WRK-IDX).
011400     MOVE CX-LO-RANGE TO T2-LO-RANGE(CF-WRK-IDX).
011500     MOVE CX-HI-RANGE TO T2-HI-RANGE(CF-WRK-IDX).
011600     MOVE CX-CUMMULATIVE-NAME TO T2-CUMMULATIVE-NAME(CF-WRK-IDX).
011700     MOVE CX-ALIAS TO T2-ALIAS(CF-WRK-IDX).
011800     MOVE CX-DEFAULT-FAC TO T2-DEFAULT-FAC(CF-WRK-IDX).
011900
012000*---------------------------------------------------------------
012100* INITIALIZE THE TABLE
012200*---------------------------------------------------------------
012300 INIT-CF-TABLE.
012400     MOVE "00" TO CF-RETURN-CODE.
012500     MOVE ZEROES TO CF-T1-TABLE.
012600     MOVE SPACES TO CF-T2-TABLE.
012700     MOVE 1 TO CF-NEXT-IDX.
012800     MOVE ZEROES TO CF-SEQ-IDX.
012900*---------------------------------------------------------------
013000* CLEAR ONE ENTRY.
013100*---------------------------------------------------------------
013200 INIT-A-CF-ENTRY.
013300     MOVE SPACE TO CF-T2(CF-IDX).
013400     MOVE ZEROES TO CF-T1(CF-IDX).
013500*---------------------------------------------------------------
013600* MAKE A HOLE IN THE TABLE AT THE CURRENT INDEX POINTER BY
013700* SHUFFLING EVERYONE DOWN ONE.
013800* 1. CHECK IF THE TABLE IS FULL - EXIT IF YES
013900* 2. MOVE
014000*---------------------------------------------------------------
014100 MAKE-HOLE-IN-CF-TABLE.
014200     MOVE "00" TO CF-RETURN-CODE.
014300     IF CF-NEXT-IDX > CF-MAX-ENTRY
014400         MOVE "34" TO CF-RETURN-CODE
014500     ELSE
014600         COMPUTE CF-HI = CF-NEXT-IDX - 1
014700         PERFORM CF-T-SHUFFLE-DOWN
014800             VARYING CF-LO FROM CF-NEXT-IDX BY -1
014900                 UNTIL CF-HI < CF-IDX
015000         PERFORM INIT-A-CF-ENTRY
015100         ADD 1 TO CF-NEXT-IDX.
015200 CF-T-SHUFFLE-DOWN.
015300     MOVE CF-T1(CF-HI) TO
015400          CF-T1(CF-LO).
015500     MOVE CF-T2(CF-HI) TO
015600          CF-T2(CF-LO).
015700     SUBTRACT 1 FROM CF-HI.
015800
015900*---------------------------------------------------------------
016000* INSERT THE ENTRY IN CF-WRK-IDX SLOT AT CF-IDX
016100*---------------------------------------------------------------
016200 INSERT-IN-CF-TABLE.
016300     PERFORM MAKE-HOLE-IN-CF-TABLE.
016400     IF CF-RETURN-CODE = "00"
016500         PERFORM REPLACE-CF-ENTRY.
016600*---------------------------------------------------------------
016700* DELETE THE ENTRY POINTED TO BY CF-IDX
016800*---------------------------------------------------------------
016900 DELETE-CF-ENTRY.
017000     MOVE "00" TO CF-RETURN-CODE.
017100     IF CF-IDX NOT < CF-NEXT-IDX
017200         MOVE "22" TO CF-RETURN-CODE
017300     ELSE
017400         COMPUTE CF-HI = CF-IDX
017500         ADD 1 TO CF-HI
017600         PERFORM CF-T-SHUFFLE-UP
017700             VARYING CF-LO FROM CF-IDX BY 1
017800                 UNTIL CF-HI > CF-NEXT-IDX
017900         SUBTRACT 1 FROM CF-NEXT-IDX
018000         COMPUTE CF-IDX = CF-NEXT-IDX
018100         PERFORM INIT-A-CF-ENTRY.
018200
018300 CF-T-SHUFFLE-UP.
018400     MOVE CF-T1(CF-HI) TO
018500          CF-T1(CF-LO).
018600     MOVE CF-T2(CF-HI) TO
018700          CF-T2(CF-LO).
018800     ADD 1 TO CF-HI.
018900
019000*---------------------------------------------------------------
019100* ADD TO THE END OF THE TABLE UNLESS THE TABLE IS FULL
019200* OR THE ENTRY CONTAINS NO NAME.
019300*---------------------------------------------------------------
019400 APPEND-CF-ENTRY.
019500     MOVE "00" TO CF-RETURN-CODE.
019600     IF CF-NEXT-IDX > CF-MAX-ENTRY
019700         MOVE "34" TO CF-RETURN-CODE
019800     ELSE
019900     IF T2-NAME (CF-WRK-IDX) = SPACE
020000         MOVE "22" TO CF-RETURN-CODE
020100     ELSE
020200         MOVE CF-T1(CF-WRK-IDX) TO
020300              CF-T1(CF-NEXT-IDX)
020400         MOVE CF-T2(CF-WRK-IDX) TO
020500              CF-T2(CF-NEXT-IDX)
020600         COMPUTE CF-IDX = CF-NEXT-IDX
020700         ADD 1 TO CF-NEXT-IDX.
020800*---------------------------------------------------------------
020900* ADD TO THE TABLE IN SEQUENCE ORDER
021000* FOR NOW, THIS APPENDS THE RECORD AND THEN SORTS IT INTO PLACE
021100* THIS CAN BE IMPROVED FOR EFFICIENCY
021200* IT LEAVES CF-INDEX POINTING TO THE ADDED ENTRY.
021300*---------------------------------------------------------------
021400 ADD-CF-ENTRY-BY-SEQ.
021500     PERFORM APPEND-CF-ENTRY.
021600     IF CF-RETURN-CODE = "00"
021700         PERFORM SORT-CF-TABLE-BY-SEQ
021800         PERFORM FIND-CF-NAME.
021900*---------------------------------------------------------------
022000* REPLACE THE ENTRY POINTED TO BY CF-IDX
022100* IF THE NAME IS VALID
022200*---------------------------------------------------------------
022300 REPLACE-CF-ENTRY.
022400     IF T2-NAME(CF-WRK-IDX) = SPACE
022500         MOVE "22" TO CF-RETURN-CODE
022600     ELSE
022700         MOVE CF-T1(CF-WRK-IDX) TO
022800              CF-T1(CF-IDX)
022900         MOVE CF-T2(CF-WRK-IDX) TO
023000              CF-T2(CF-IDX).
023100*---------------------------------------------------------------
023200* SWAP THE ENTRIES POINTED TO BY CF-HI AND CF-LO
023300* USED BY THE SORT ROUTINE.
023400*---------------------------------------------------------------
023500 SWAP-CF-ENTRY.
023600     MOVE CF-T1(CF-HI) TO
023700          CF-T1(CF-WRK-IDX).
023800     MOVE CF-T1(CF-LO) TO
023900          CF-T1(CF-HI).
024000     MOVE CF-T1(CF-WRK-IDX) TO
024100          CF-T1(CF-LO).
024200     MOVE CF-T2(CF-HI) TO
024300          CF-T2(CF-WRK-IDX).
024400     MOVE CF-T2(CF-LO) TO
024500          CF-T2(CF-HI).
024600     MOVE CF-T2(CF-WRK-IDX) TO
024700          CF-T2(CF-LO).
024800
024900*---------------------------------------------------------------
025000* STANDARD BUBBLE SORT.
025100* USES CF-NAME(CF-WRK-IDX) AS A CHANGES FLAG.
025200*---------------------------------------------------------------
025300 SORT-CF-TABLE-BY-NAME.
025400     MOVE CF-SORT-BY-NAME TO CF-SORT-CODE.
025500     PERFORM SORT-CF-TABLE.
025600 SORT-CF-TABLE-BY-POS-LEN.
025700     MOVE CF-SORT-BY-POS-LEN TO CF-SORT-CODE.
025800     PERFORM SORT-CF-TABLE.
025900 SORT-CF-TABLE-BY-SEQ.
026000     MOVE CF-SORT-BY-SEQ TO CF-SORT-CODE.
026100     PERFORM SORT-CF-TABLE.
026200 SORT-CF-TABLE.
026300     IF CF-NEXT-IDX > 2
026400         MOVE "X" TO T2-NAME(CF-WRK-IDX)
026500         PERFORM SORT-CF-PASS
026600          UNTIL T2-NAME(CF-WRK-IDX) = SPACE.
026700*---------------------------------------------------------------
026800* IF A SWAP OCCURS, THEN CF-NAME(CF-WRK-IDX)
026900* IS FILLED IN WITH SOMETHING. THIS IS USED AS THE EQUIVALENT OF
027000* A CHANGES/NO-CHANGES FLAG.
027100* SINCE NEW ENTRIES ARE ADDED AT THE BOTTOM OF THE LIST
027200* A PASS UPWARD IS DONE FIRST WHICH WILL USUALLY BE ALL THAT
027300* IS NEEDED TO STRAIGHTEN OUT THE LIST
027400*---------------------------------------------------------------
027500 SORT-CF-PASS.
027600     MOVE SPACE TO T2-NAME(CF-WRK-IDX).
027700     COMPUTE CF-HI = CF-NEXT-IDX - 1.
027800* BOTTOM TO TOP
027900     PERFORM BUBBLE-PASS
028000        VARYING CF-HI FROM CF-HI BY -1
028100            UNTIL CF-HI < 2.
028200     IF T2-NAME(CF-WRK-IDX) NOT = SPACE
028300         MOVE SPACE TO T2-NAME(CF-WRK-IDX)
028400         ADD 1 TO CF-HI
028500* TOP TO BOTTOM
028600         PERFORM BUBBLE-PASS
028700          VARYING CF-HI FROM CF-HI BY 1
028800           UNTIL CF-HI = CF-NEXT-IDX.
028900 BUBBLE-PASS.
029000     COMPUTE CF-LO = CF-HI - 1.
029100     PERFORM SORT-A-CF-ENTRY.
029200 SORT-A-CF-ENTRY.
029300     IF CF-SORT-CODE = CF-SORT-BY-NAME
029400          PERFORM COMPARE-CF-BY-NAME
029500     ELSE
029600     IF CF-SORT-CODE = CF-SORT-BY-SEQ
029700          PERFORM COMPARE-CF-BY-SEQ
029800     ELSE
029900          PERFORM COMPARE-CF-BY-POS-LEN.
030000
030100 COMPARE-CF-BY-NAME.
030200     IF T2-NAME(CF-HI) <
030300              T2-NAME(CF-LO)
030400         PERFORM SWAP-CF-ENTRY.
030500
030600 COMPARE-CF-BY-POS-LEN.
030700     IF T1-START-POS(CF-HI) <
030800           T1-START-POS(CF-LO)
030900         PERFORM SWAP-CF-ENTRY
031000     ELSE
031100     IF T1-START-POS(CF-HI) =
031200             T1-START-POS(CF-LO)
031300         IF T1-INT-LEN(CF-HI) >
031400                T1-INT-LEN(CF-LO)
031500             PERFORM SWAP-CF-ENTRY.
031600*--------------------------------------------------------------
031700* THE SORT BY SEQUENCE ISN'T AN EXACT SORT. THE RESULTING LIST
031800* CONTAINS NON-UPDATEABLE THEN UPDATEABLE FIELDS
031900* AT THE BOTTOM WITH THE EXCEPTION THAT A GROUP FIELD IS
032000* SORTED ABOVE ITS CHILD ELEMENTS WITHIN THE UPDATEABLE FIELDS
032100*           ACTION TABLE
032200*     LO FIELD         HI-FIELD         ACTION
032300*      ZIP              ZIP             DO NOTHING
032400*      ZIP              UPDATE          DO NOTHING
032500*      ZIP              GROUP           DO NOTHING
032600*      UPDATE           ZIP             SWAP
032700*      UPDATE           UPDATE          COMPARE BY SEQ
032800*      UPDATE           GROUP           COMPARE BY POS-LEN
032900*      GROUP            ZIP             SWAP
033000*      GROUP            UPDATE          COMPARE BY POS-LEN
033100*      GROUP            GROUP           COMPARE BY POS-LEN
033200* SO:
033300*    IF LO-FIELD IS ZIP
033400*        DO NOTHING
033500*    ELSE
033600*    IF HI-FIELD IS ZIP
033700*        SWAP
033800*    ELSE
033900*    IF LO-FIELD IS A GROUP OR
034000*       HI-FIELD IS A GROUP
034100*        COMPARE BY POS LEN
034200*    ELSE (BOTH FIELDS ARE UPDATEABLE)
034300*        COMPARE BY SEQUENCE
034400*--------------------------------------------------------------
034500 COMPARE-CF-BY-SEQ.
034600     PERFORM SET-LO-HI.
034700     IF LO-IS-NOTHING
034800         NEXT SENTENCE
034900     ELSE
035000     IF HI-IS-NOTHING
035100         PERFORM SWAP-CF-ENTRY
035200     ELSE
035300     IF LO-IS-A-GROUP OR
035400        HI-IS-A-GROUP
035500         PERFORM COMPARE-CF-BY-POS-LEN
035600     ELSE
035700         PERFORM SEQ-BY-SEQ.
035800*--------------------------------------------------------------
035900* THIS ROUTINE SETS FLAGS FOR THE TYPES OF THE TWO FIELDS
036000* AS IT MAKES SUBSEQUENT CODE MORE READABLE.
036100*--------------------------------------------------------------
036200 SET-LO-HI.
036300     MOVE ZEROES TO LO-FLAG HI-FLAG.
036400     IF T1-UPDATE-CODE(CF-LO) > 0 AND
036500        T1-OCCURRENCES(CF-LO) > 1
036600         MOVE 2 TO LO-FLAG
036700     ELSE
036800     IF T1-UPDATE-CODE(CF-LO) = 0
036900         MOVE 1 TO LO-FLAG.
037000     IF T1-UPDATE-CODE(CF-HI) > 0 AND
037100        T1-OCCURRENCES(CF-HI) > 1
037200         MOVE 2 TO HI-FLAG
037300     ELSE
037400     IF T1-UPDATE-CODE(CF-HI) = 0
037500         MOVE 1 TO HI-FLAG.
037600 SEQ-BY-SEQ.
037700     IF T1-UPDATE-SEQ(CF-HI) <
037800           T1-UPDATE-SEQ(CF-LO)
037900         PERFORM SWAP-CF-ENTRY.
038000*---------------------------------------------------------------
038100* FIND BY NAME THE ENTRY AT CF-WRK-IDX.
038200*---------------------------------------------------------------
038300 FIND-CF-NAME.
038400     MOVE "00" TO CF-RETURN-CODE.
038500     IF T2-NAME(CF-WRK-IDX) = SPACE
038600         MOVE "22" TO CF-RETURN-CODE
038700     ELSE
038800         PERFORM DUMMY-ROUTINE
038900            VARYING CF-IDX FROM 1 BY 1
039000            UNTIL T2-NAME(CF-IDX) =
039100             T2-NAME(CF-WRK-IDX)
039200                       OR
039300                  CF-IDX = CF-NEXT-IDX.
039400     IF CF-IDX = CF-NEXT-IDX
039500         MOVE "23" TO CF-RETURN-CODE.
038000*---------------------------------------------------------------
038100* FIND BY ALIAS THE ENTRY AT CF-WRK-IDX.
038200*---------------------------------------------------------------
038300 FIND-CF-ALIAS.
038400     MOVE "00" TO CF-RETURN-CODE.
038500     IF T2-ALIAS(CF-WRK-IDX) = SPACE
038600         MOVE "22" TO CF-RETURN-CODE
038700     ELSE
038800         PERFORM DUMMY-ROUTINE
038900            VARYING CF-IDX FROM 1 BY 1
039000            UNTIL T2-ALIAS(CF-IDX) =
039100             T2-ALIAS(CF-WRK-IDX)
039200                       OR
039300                  CF-IDX = CF-NEXT-IDX.
039400     IF CF-IDX = CF-NEXT-IDX
039500         MOVE "23" TO CF-RETURN-CODE.
039600*---------------------------------------------------------------
039700* FIND IF A NAME APPEARS AS AN ACCUMULATOR IN ANY FIELD
039800*---------------------------------------------------------------
039900 FIND-CUMM-NAME.
040000     MOVE "00" TO CF-RETURN-CODE.
040100     IF T2-NAME(CF-WRK-IDX) = SPACE
040200         MOVE "22" TO CF-RETURN-CODE
040300     ELSE
040400         PERFORM DUMMY-ROUTINE
040500            VARYING CF-IDX FROM 1 BY 1
040600            UNTIL T2-CUMMULATIVE-NAME(CF-IDX) =
040700             T2-NAME(CF-WRK-IDX)
040800                       OR
040900                  CF-IDX = CF-NEXT-IDX.
041000     IF CF-IDX = CF-NEXT-IDX
041100         MOVE "23" TO CF-RETURN-CODE.
041200 DUMMY-ROUTINE.
041300     EXIT.
041500
000000     COPY PLKTRACE.
