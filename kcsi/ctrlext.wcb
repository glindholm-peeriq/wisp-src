000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. CTRLEXT.
000300 AUTHOR. MJB.
000400 DATE-WRITTEN.  10/07/89.
000500 DATE-COMPILED.
000600*---------------------------------------------------------------
000700* TEST THAT ALL KEYS HAVE BEEN DEFINED RETURNS A ZERO
000800* IF A KEY MUST BE ADDED, 9 IF ALL WAS OK, AND 8 IF A REQUEST
000900* TO DELETE WAS EXECUTED.
001000* THIS ALSO HAPPENS TO INCLUDE A COMPRESS ALTKEYS ROUTINE
001100* WHICH CAN BE USED SEPARATELY.
001200*---------------------------------------------------------------
001300
001400 ENVIRONMENT DIVISION.
001500 CONFIGURATION SECTION.
001600 FIGURATIVE-CONSTANTS.
001700     COPY FIGS.
001800
001900 INPUT-OUTPUT SECTION.
002000
002100 FILE-CONTROL.
002200
002300 DATA DIVISION.
002400 FILE SECTION.
002500
002600 WORKING-STORAGE SECTION.
000000     COPY WSKTRACE.
000000 01  SCCS-WHAT PIC X(50) VALUE
000000     "@(#)ctrlext.wcb 1.5 9/11/94".
002700 01  WORK1-INDEX BINARY.
002800 01  WORK2-INDEX BINARY.
002900 01  WORK-ENTRY  PIC X(9).
003000     COPY RCCTRL.
003100     COPY WSCTRL.
003200     COPY WSIOCODE.
003300     COPY WSFILEIO.
003400 01  HOLDIT PIC X.
003500 LINKAGE SECTION.
003600 01  CTRL-IO-BLOCK.
003700     COPY LKDIO.
003800 01  CTRL-HEADER-RECORDS.
003900     COPY RCCTRLH.
004000 01  CF-RECORD.
004100     COPY RCCTRLF.
004200     COPY LKCTRLAR.
004300     COPY RCCTRLT1.
004400     COPY RCCTRLT2.
000000     COPY LKPRC.
004500 PROCEDURE DIVISION USING
000000     CALLED-RC
004600     COPY LKCTRL.
004700 MAIN-LOGIC SECTION.
004800 PROGRAM-BEGIN.
000000     MOVE "CTRLEXT BEGIN" TO KTRACE-RECORD.
000000     PERFORM CALL-KTRACE.
000000     MOVE ZEROES TO CALLED-RC.
004900     PERFORM OPENING-PROCEDURE.
005000     PERFORM MAIN-PROCESS.
005100     PERFORM CLOSING-PROCEDURE.
000000     MOVE "CTRLEXT EXIT" TO KTRACE-RECORD.
000000     PERFORM CALL-KTRACE.
000000 MAIN-LOGIC-EXIT.
000000     EXIT PROGRAM.
005200 MAIN-LOGIC-STOP.
005300     STOP RUN.
005400 LEVEL-2 SECTION.
005500 OPENING-PROCEDURE.
005600 CLOSING-PROCEDURE.
005700*---------------------------------------------------------------
005800* IF THERE IS NO PRIMARY KEY THEN RETURN OKAY
005900* IF THE PRIMARY HAS AN ERROR, THEN REQUEST THE HANDLING,
006000* ADD OR DELETE. DELETE IS DONE HERE AND ADD IS DONE
006100* IN THE CALLER BY RETURNING A ZERO VALUE
006200* IF THE PRIMARY KEY IS OK THEN TEST THE ALTERNATES
006300*---------------------------------------------------------------
006400 MAIN-PROCESS.
006500     IF CF-ACTION-CODE = "COMPRESS"
006600         PERFORM COMPRESS-ALTKEYS
006700     ELSE
006800     IF CF-ACTION-CODE = "VALKEYS"
006900         PERFORM VAL-KEYS.
007000 VAL-KEYS.
007100     IF CH-PRIMARY-KEY = SPACE
007200         MOVE 9 TO CALLED-RC
007300     ELSE
007400         PERFORM VAL-PRIMARY-KEY
007500         IF CALLED-RC = 9
007600             PERFORM VAL-ALTKEYS.
007700 VAL-PRIMARY-KEY.
007800     PERFORM LOOK-UP-PRIMARY-KEY.
007900     IF CF-RETURN-CODE = "00"
008000         MOVE 9 TO CALLED-RC
008100     ELSE
008200         PERFORM PRIMARY-KEY-ERROR
008300         IF CALLED-RC = 8
008400             PERFORM DELETE-PRIMARY-KEY
008500         ELSE
008600             MOVE ZEROES TO CALLED-RC.
008700 LOOK-UP-PRIMARY-KEY.
008800     MOVE CH-PRIMARY-KEY TO CX-NAME.
008900     PERFORM FIND-FIELD-ENTRY.
009000 FIND-FIELD-ENTRY.
009100     MOVE "FINDNAME" TO CF-ACTION-CODE.
009200     PERFORM CALL-CTRLARY.
009300 PRIMARY-KEY-ERROR.
009400     MOVE "PRIMARY" TO CF-ACTION-CODE.
009500     CALL "CTRLERR"
009600           USING
000000           CALLED-RC
009700           CF-RECORD
009800           CF-VALUES.
009900 DELETE-PRIMARY-KEY.
010000     MOVE SPACE TO CH-PRIMARY-KEY.
010100     MOVE "R" TO CH-FILE-ORG.
010200     MOVE SPACE TO CA1-RECORD
010300                   CA2-RECORD.
010400     PERFORM REPLACE-CTRL-HEADER-RECORDS.
010500     MOVE 8 TO CALLED-RC.
010600
010700*---------------------------------------------------------------
010800* TEST EACH ALTERNATE. IF A CHANGE HAS OCCURED, THE RETURN-CODE
010900* IS CHANGED TO 0 OR 8.
011000* AN 8 INDICATES THAT A FIELD WAS DELETED SO REPROCESS THE KEYS
011100* A ZERO IS RETURNED TO THE CALLER TO ALLOW ADDING
011200* THE ALTKEY FIEL NAMES ARE DIVIDED INTO TWO RECORDS TWO INDEXES
011300* ARE USED, AND WHEN ONE GOES OUT OF RANGE TWO IS USED.
011400*---------------------------------------------------------------
011500 VAL-ALTKEYS.
011600     MOVE 9 TO CALLED-RC.
011700     MOVE 1 TO ALTKEY1-INDEX.
011800     MOVE ZEROES TO ALTKEY2-INDEX.
011900     PERFORM VAL-ONE-ALTKEY.
012000     IF CALLED-RC = 8
012100         GO TO VAL-ALTKEYS.
012200 VAL-ONE-ALTKEY.
012300     MOVE "00" TO CF-RETURN-CODE.
012400     IF ALTKEY1-INDEX > 8
012500         MOVE CA2-KEYNAME(ALTKEY2-INDEX) TO CX-NAME
012600     ELSE
012700         MOVE CA1-KEYNAME(ALTKEY1-INDEX) TO CX-NAME.
012800     IF CX-NAME NOT = SPACE
012900         PERFORM FIND-FIELD-ENTRY.
013000     IF CF-RETURN-CODE = "00"
013100         MOVE 9 TO CALLED-RC
013200     ELSE
013300         PERFORM ALTKEY-ERROR
013400         IF CALLED-RC = 8
013500             PERFORM DELETE-ALTKEY
013600         ELSE
013700             MOVE ZEROES TO CALLED-RC.
013800     IF CALLED-RC = 9
013900         ADD 1 TO ALTKEY1-INDEX
014000         IF ALTKEY1-INDEX NOT > 16
014100             COMPUTE ALTKEY2-INDEX = ALTKEY1-INDEX - 8
014200             GO TO VAL-ONE-ALTKEY.
014300 ALTKEY-ERROR.
014400     MOVE "ALTKEY" TO CF-ACTION-CODE.
014500     CALL "CTRLERR"
014600           USING
000000           CALLED-RC
014700           CF-RECORD
014800           CF-VALUES.
014900 DELETE-ALTKEY.
015000     IF ALTKEY1-INDEX > 8
015100         MOVE SPACE TO CA2-ENTRY(ALTKEY2-INDEX)
015200     ELSE
015300         MOVE SPACE TO CA1-ENTRY(ALTKEY1-INDEX).
015400     PERFORM COMPRESS-ALTKEYS.
015500     IF CA1-TABLE = SPACE
015600         MOVE SPACE TO CA1-RECORD.
015700     IF CA2-TABLE = SPACE
015800         MOVE SPACE TO CA2-RECORD.
015900     PERFORM REPLACE-CTRL-HEADER-RECORDS.
016000     MOVE 8 TO CALLED-RC.
016100
016200*---------------------------------------------------------------
016300* PROCESS BOTH ALTKEY ARRAYS SO THAT WHITE SPACE IS AT THE
016400* BOTTOM. THE TWO ARRAYS ARE PROCESSED AS IF THEY WERE ONE.
016500* THE LOOP STOPS ONE SHORT OF THE BOTTOM SINCE THERE IS
016600* NOTHING TO COMPRESS AT THE END OF THE ARRAY
016700*---------------------------------------------------------------
016800 COMPRESS-ALTKEYS.
016900     MOVE 1 TO ALTKEY1-INDEX.
017000     PERFORM COMPRESS-ONE-ALTKEY.
017100 COMPRESS-ONE-ALTKEY.
017200     IF ALTKEY1-INDEX > 8
017300         MOVE CA2-ENTRY(ALTKEY2-INDEX) TO WORK-ENTRY
017400     ELSE
017500         MOVE CA1-ENTRY(ALTKEY1-INDEX) TO WORK-ENTRY.
017600     IF WORK-ENTRY = SPACE
017700         PERFORM COMPRESS-NEXT-ENTRY.
017800     ADD 1 TO ALTKEY1-INDEX.
017900     COMPUTE ALTKEY2-INDEX = ALTKEY1-INDEX - 8.
018000     IF ALTKEY1-INDEX NOT > 15
018100         GO TO COMPRESS-ONE-ALTKEY.
018200*---------------------------------------------------------------
018300* FIND THE NEXT NON BLANK ENTRY AND MOVE IT INTO THE CURRENT
018400* BLANK SPOT.
018500* IF NO ENTRIES ARE FOUND THEN FORCE THE ALTKEY1-INDEX TO ITS
018600* LIMIT TO END THE LOOP
018700*---------------------------------------------------------------
018800 COMPRESS-NEXT-ENTRY.
018900     COMPUTE WORK1-INDEX = ALTKEY1-INDEX + 1.
019000     COMPUTE WORK2-INDEX = WORK1-INDEX - 8.
019100     PERFORM FIND-NEXT-ENTRY.
019200     IF WORK1-INDEX > 16
019300         MOVE 16 TO ALTKEY1-INDEX
019400     ELSE
019500     IF ALTKEY1-INDEX > 8
019600         MOVE WORK-ENTRY TO CA2-ENTRY(ALTKEY2-INDEX)
019700     ELSE
019800         MOVE WORK-ENTRY TO CA1-ENTRY(ALTKEY1-INDEX).
019900 FIND-NEXT-ENTRY.
020000     COMPUTE WORK2-INDEX = WORK1-INDEX - 8
020100     IF WORK1-INDEX > 8
020200         MOVE CA2-ENTRY(WORK2-INDEX) TO WORK-ENTRY
020300         MOVE SPACE TO CA2-ENTRY(WORK2-INDEX)
020400     ELSE
020500         MOVE CA1-ENTRY(WORK1-INDEX) TO WORK-ENTRY
020600         MOVE SPACE TO CA1-ENTRY(WORK1-INDEX).
020700     IF WORK-ENTRY = SPACE
020800         ADD 1 TO WORK1-INDEX
020900         IF WORK1-INDEX NOT > 16
021000             GO TO FIND-NEXT-ENTRY.
021100
021200 CALL-CTRLARY.
021300     CALL "CTRLARY" USING
000000     CALLED-RC
021400     COPY LKCTRL.
021500     COPY PLCTRLH.
021600     COPY IOCTRL.
021700
000000     COPY PLKTRACE.
