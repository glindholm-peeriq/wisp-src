000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. CTRLMAIN.
000300*--------------------------------------------------
000000* Version number is in CTRLFIL.WCB
000400* A PROGRAM TO IMMITATE THE WANG CONTROL UTILITY.
000500* THIS MAIN MODULE ACTS PRIMARILY AS A DISPATCHER
000600* TO SCREEN PROCESSING MODULES THAT ACCEPT DATA ENTRY
000700* AND DO VALIDATION.
000800* THIS HEADER ALSO DOES THE IO TO THE CTRL-FILE
000900* WHEN WRITES REWRITES ETC ARE REQUIRED.
001000*--------------------------------------------------
001100*--------------------------------------------------
001200* Mods:
000000* 1.10.00.ul
000000*   Fixed bug in CTRVAL causing an Accumulator to be
000000*   validated incorrectly. Also fixed a problem caused
000000*   by validating fields as they are loaded. If an
000000*   accumulator appeared later in the file list the
000000*   addend field would not validate saying that the
000000*   accumulator didn't exist. (which it didn't since it
000000*   hadn't been loaded yet.
000000*   Fixed bug in CTRLRNG/CTRLTBL causing TABLE-NAME to
000000*   to be destroyed in CTRLTBL before returning it to
000000*   CTRLRNG.
000000* 1.50.00 Jan 15, 1992
000000*   Forced Fixed length records, and Indexed or Rel
000000*   as only file types.
001600*--------------------------------------------------
001700 ENVIRONMENT DIVISION.
001800 CONFIGURATION SECTION.
001900 FIGURATIVE-CONSTANTS.
002000     COPY FIGS.
002100 INPUT-OUTPUT SECTION.
002200 FILE-CONTROL.
002300 DATA DIVISION.
002400 FILE SECTION.
002500 WORKING-STORAGE SECTION.
000000     COPY WSKTRACE.
000000 01  SCCS-WHAT   PIC X(50) 
000000     VALUE "@(#)ctrlmain.wcb 1.12 9/11/94".
000000     COPY WSLINK.
002600 01  PROGRAM-NAME  PIC X(8) VALUE "CTRLMAIN".
002700     COPY WSCONST.
002800     COPY RCCTRL.
002900 01  PRINTIT PIC X.
003000 01  NEXT-START               BINARY VALUE 1.
003100 01  SAVE-SEQ                 PIC 99.
003200 01  MENU-PICK                BINARY VALUE ZEROES.
003300     88  ADDING-FIELDS        VALUE 3.
003400     88  CHANGING-FIELDS      VALUE 4.
003500     88  CHANGING-HEADERS     VALUE 20.
003600     88  DELETING-FIELDS      VALUE 5.
003700     88  LISTING-FIELDS       VALUE 6.
003800     88  MAINTAINING-TABLES   VALUE 7.
003900*     88  CREATING-SOURCE      VALUE 8.
004000     88  MODIFYING-SEQUENCE   VALUE 12.
004100     88  RUNNING-DATENTRY     VALUE 9.
004200     88  RUNNING-REPORT       VALUE 10.
004300     88  RUNNING-INQUIRY      VALUE 26.
004400*     88  RUNNING-EZFORMAT     VALUE 11.
004500     88  EXITING-TO-FILE-NAME VALUE 16.
004600     88  EXITING-CONTROL      VALUE 32.
004700     COPY WSUSAGE.
004800     COPY WSFILEIO.
004900     COPY WSIOCODE.
005000     COPY WSCRTS.
005100* CTRL-FILE-HEADER FIELDS AND GENERAL WS
005200     COPY WSCTRL.
005300 01  SV-CF-RECORD        PIC X(130) VALUE SPACE.
005400 01  CTRL-IO-BLOCK.
005500     COPY LKDIO.
005600 01  CTRL-HEADER-RECORDS.
005700     COPY RCCTRLH.
005800 01  CF-RECORD.
005900     COPY RCCTRLF.
006000     COPY LKCTRLAR.
006100     COPY RCCTRLT1.
006200     COPY RCCTRLT2.
000000     COPY LKPRC.
000000 01  LISTMGMT  PIC X VALUE SPACE.
000000
006300 PROCEDURE DIVISION.
006400 MAIN-LOGIC SECTION.
006500 PROGRAM-BEGIN.
000000     MOVE "CTRLMAIN BEGIN" TO KTRACE-RECORD.
000000     PERFORM CALL-KTRACE.
000000     MOVE ZEROES TO CALLED-RC.
006800     PERFORM OPENING-PROCEDURE.
006900     PERFORM PROGRAM-INIT.
007000     PERFORM MAIN-PROCESS.
007100     PERFORM CLOSING-PROCEDURE.
000000     MOVE "CTRLMAIN EXIT" TO KTRACE-RECORD.
000000     PERFORM CALL-KTRACE.
007200 MAIN-LOGIC-EXIT.
007300     EXIT PROGRAM.
007400 MAIN-LOGIC-STOP.
007500     STOP RUN.
007600 THE-OTHER SECTION.
007700 OPENING-PROCEDURE.
007800 PROGRAM-INIT.
000000     IF LISTMGMT = SPACE
000000         CALL "LISTMOPT" USING LISTMGMT.
000000     CALL "INIDIO" USING CTRL-IO-BLOCK.
000000     MOVE "I" TO FILE-ORG OF CTRL-IO-BLOCK.
007900     MOVE ZERO TO FILE-OPEN-STATUS OF CTRL-IO-BLOCK.
008000     MOVE CONST-CF-MAX-ENTRY TO CF-MAX-ENTRY.
008100     MOVE CONST-CF-OCCURS TO CF-WRK-IDX.
008200     MOVE SPACE TO FILE-NAME OF CTRL-IO-BLOCK
008300                   FILE-LIBRARY OF CTRL-IO-BLOCK.
008400     PERFORM EXTRACT-USAGE-CONSTANTS.
008500     STRING
008600         USER-ID DELIMITED BY SPACE
008700         "CTL" DELIMITED BY SIZE
008800         INTO FILE-LIBRARY OF CTRL-IO-BLOCK.
008900
009000     MOVE INVOL TO FILE-VOLUME OF CTRL-IO-BLOCK.
009100
009200 CLOSING-PROCEDURE.
009300     MOVE ZEROES TO CALLED-RC.
009400
009500 MAIN-PROCESS.
009600     PERFORM INIT-CTRL-HEADER-RECORDS
009700     PERFORM ENTER-CTLFIL.
009800     IF NOT END-KEY-PRESSED AND
009900        NOT SCREEN-ENTRY-ERROR
010000         PERFORM ENTER-OPTIONS
010100         IF NOT EXITING-CONTROL
010200             GO TO MAIN-PROCESS.
010300*-----------------------------------------------
010400* THE FIRST CONTROL SCREEN REQUESTING FILE
010500* LIBRARY AND VOLUME.
010600*-----------------------------------------------
010700 ENTER-CTLFIL.
010800     CALL "CTRLFIL" USING CALLED-RC CTRL-IO-BLOCK.
010900     MOVE CALLED-RC TO PFKEY-CODE.
011000     IF PFKEY-2-PRESSED
011100         PERFORM CREATE-CONTROL-FILE
011200         MOVE ZEROES TO PFKEY-CODE
011300     ELSE
011400     IF NOT END-KEY-PRESSED
011500         PERFORM OPEN-IO-CTRL-FILE
011600         PERFORM LOAD-AND-TEST-CTRL-FILE
011700         PERFORM CLOSE-CTRL-FILE.
011800
011900*-----------------------------------------------
012000* THE CONTROL OPTIONS SCREEN IS A MENU REQUESTING
012100* THE DESIRED ACTIVITY.
012200*-----------------------------------------------
012300 ENTER-OPTIONS.
000000     IF LISTMGMT = "Y"
000000         CALL "CTRLOPTL" USING CALLED-RC
000000     ELSE
012400         CALL "CTRLOPT" USING CALLED-RC.
012500     MOVE CALLED-RC TO MENU-PICK.
012600     IF NOT EXITING-TO-FILE-NAME AND
012700        NOT EXITING-CONTROL
012800         PERFORM PROCESS-OPTIONS
012900         GO TO ENTER-OPTIONS.
013000
013100*-----------------------------------------------
013200* THE CONTROL OPTIONS SCREEN DISPATCHER
013300*-----------------------------------------------
013400 PROCESS-OPTIONS.
013500     PERFORM OPEN-IO-CTRL-FILE.
013600
013700     IF ADDING-FIELDS
013800         PERFORM ADD-CONTROL-FIELDS
013900     ELSE
014000     IF CHANGING-FIELDS
014100         PERFORM CHANGE-CONTROL-FIELDS
014200     ELSE
014300     IF CHANGING-HEADERS
014400         PERFORM CHANGE-HEADER
014500     ELSE
014600     IF DELETING-FIELDS
014700         PERFORM DELETE-CONTROL-FIELDS
014800     ELSE
014900     IF LISTING-FIELDS
015000         PERFORM LIST-CONTROL
015100     ELSE
015200     IF MAINTAINING-TABLES
015300         PERFORM MAINTAIN-TABLES
015400     ELSE
015500     IF MODIFYING-SEQUENCE
015600         PERFORM MODIFY-UPDATE-SEQ
015700     ELSE
015800     IF RUNNING-DATENTRY
016600         PERFORM CLOSE-CTRL-FILE
015900         PERFORM RUN-DATENTRY
013500         PERFORM OPEN-IO-CTRL-FILE
016000     ELSE
016100     IF RUNNING-REPORT
016600         PERFORM CLOSE-CTRL-FILE
016200         PERFORM RUN-REPORT
013500         PERFORM OPEN-IO-CTRL-FILE
016300     ELSE
016400     IF RUNNING-INQUIRY
016600         PERFORM CLOSE-CTRL-FILE
016500         PERFORM RUN-INQUIRY
013500         PERFORM OPEN-IO-CTRL-FILE
000000          .
016600     PERFORM CLOSE-CTRL-FILE.
016700*-----------------------------------------------
016800* THE CREATE CONTROL OPTION CONSISTS OF ACCEPTING
016900* DATA ENTRY FOR THE CONTROL HEADER RECORDS, CREATING
017000* A NEW FILE OR OVERWRITING AN EXISTING ONE, AND
017100* THEN ACCEPTING DATA ENTRY FOR ALL OF THE LINE RECORDS
017200* CLOSE AND RE-OPEN THE FILE AND LOAD IT.
017300*-----------------------------------------------
017400 CREATE-CONTROL-FILE.
017500     PERFORM ADD-HEADER.
017600     IF NOT END-KEY-PRESSED
017700         PERFORM CREATE-A-CONTROL-FILE
017800         PERFORM OPEN-IO-CTRL-FILE
017900         PERFORM LOAD-AND-TEST-CTRL-FILE
018000         PERFORM ADD-CONTROL-FIELDS
018100         PERFORM CLOSE-CTRL-FILE.
018200*-----------------------------------------------
018300* ADD HEADER ENTRY IS A STANDARD ADD TYPE ACTION
018400* USING GETPARMS WITHIN CTRLHDR.
018500*-----------------------------------------------
018600 ADD-HEADER.
018700     PERFORM ADD-HEADER-INIT.
018800     PERFORM ADD-HEADER-ENTRY.
018900 ADD-HEADER-INIT.
019000     PERFORM INIT-CTRL-HEADER-RECORDS.
019100 ADD-HEADER-ENTRY.
019200     PERFORM CALL-CTRLHDR.
019300*-----------------------------------------------
019400* CHANGE HEADER ENTRY IS A STANDARD CHANGE TYPE ACTION
019500* USING GETPARMS WITHIN CTRLHDR.
019600* AFTER ALL HEADER CHANGES ARE COMPLETED, AND INTEGRITY
019700* CHECK IS DONE ON THE KEY STRUCTURE.
019800*-----------------------------------------------
019900 CHANGE-HEADER.
020200     PERFORM CHANGE-HEADER-ENTRY.
020300     PERFORM VAL-KEY-EXIT.
020600 CHANGE-HEADER-ENTRY.
020700     PERFORM CALL-CTRLHDR.
020800     MOVE CALLED-RC TO PFKEY-CODE.
020900     IF NOT END-KEY-PRESSED
021000         PERFORM REPLACE-CTRL-HEADER-RECORDS.
021100*-----------------------------------------------
021200* OPEN THE CONTROL-FILE OUTPUT, AND THEN WRITE
021300* ALL THE HEADER DATA.
021400*-----------------------------------------------
021500 CREATE-A-CONTROL-FILE.
021600     MOVE 30 TO FILE-SPACE OF CTRL-IO-BLOCK.
021700     PERFORM OPEN-OUTPUT-CTRL-FILE.
021800     PERFORM CLOSE-CTRL-FILE.
021900     PERFORM OPEN-IO-CTRL-FILE.
022000     PERFORM SAVE-CTRL-HEADER-RECORDS.
022100     PERFORM CLOSE-CTRL-FILE.
022200
022300*---------------------------------------------------------------
022400* ADD MODE
022500*---------------------------------------------------------------
022600*-----------------------------------------------
022700* ADD CONTROL ENTRY IS A STANDARD ADD TYPE ACTION
022800* USING A SCREEN. THE RECORD
022900* IS NOT WRITTEN YET BECAUSE A NEW FILE SHOULD
023000* BE CREATED USING THE CURRENT PARAMETERS.
023100* AFTER ALL ADDITIONS ARE COMPLETED, AND INTEGRITY CHECK IS
023200* DONE ON THE KEY STRUCTURE.
023300*-----------------------------------------------
023400 ADD-CONTROL-FIELDS.
023500     MOVE 1 TO NEXT-START.
023800     MOVE ZEROES TO PFKEY-CODE.
023900     PERFORM ADD-CONTROL
024000          UNTIL END-KEY-PRESSED.
024100     PERFORM VAL-KEY-EXIT.
024200 ADD-CONTROL.
024300     PERFORM ADD-CONTROL-INIT.
024400     PERFORM ADD-CONTROL-ENTRY.
024500 ADD-CONTROL-INIT.
024600     PERFORM INIT-ADD-CONTROL-FIELDS.
024700 ADD-CONTROL-ENTRY.
024800     MOVE "ADD" TO CF-ACTION-CODE.
024900     PERFORM CALL-CTRLFLD.
025000
025100     MOVE CALLED-RC TO PFKEY-CODE.
025200     IF ENTER-KEY-PRESSED
025300         PERFORM SET-SEQ-FOR-ADD
025400         PERFORM ADD-CONTROL-RECORD.
025500 INIT-ADD-CONTROL-FIELDS.
025600     PERFORM INIT-CF-RECORD.
025700     COMPUTE CX-START-POS = NEXT-START.
025800 SET-SEQ-FOR-ADD.
025900     IF CX-UPDATE-CODE = 0
026000         MOVE 99 TO CX-UPDATE-SEQ
026100     ELSE
026200         MOVE 00 TO CX-UPDATE-SEQ.
026300*---------------------------------------------------------------
026400* CHANGE MODE
026500* CHANGE IS DONE BY DELETING AND ADDING.
026600* THE SELECTED FIELD IS SAVED IN CASE THE CHANGE ACTION FAILS
026700* AND IS RE-ADDED IF THE USER EXITS.
026800*---------------------------------------------------------------
026900 CHANGE-CONTROL-FIELDS.
027200     PERFORM CHANGE-CONTROL.
027300
027400 CHANGE-CONTROL.
027500     PERFORM ENTER-CHANGE-KEY.
027600     IF NOT END-KEY-PRESSED
000000         PERFORM CHANGE-A-CONTROL
000000         IF NOT END-KEY-PRESSED
000000             GO TO CHANGE-CONTROL.
000000 CHANGE-A-CONTROL.
027700     MOVE CF-RECORD TO SV-CF-RECORD.
027800     MOVE CX-UPDATE-SEQ TO SAVE-SEQ.
027900     PERFORM CHANGE-DELETE-CONTROL-RECORD.
028000     PERFORM CHANGE-CONTROL-ENTRY.
028100     IF END-KEY-PRESSED
000000         PERFORM RE-ADD-CONTROL-RECORD.
000000 RE-ADD-CONTROL-RECORD.
028400     MOVE SV-CF-RECORD TO CF-RECORD.
028500     PERFORM ADD-CONTROL-RECORD.
028600 ENTER-CHANGE-KEY.
028700     MOVE "CHANGE" TO CF-ACTION-CODE.
028800     PERFORM CALL-CTRLLST.
028900     MOVE CALLED-RC TO PFKEY-CODE.
000000* 14 Apr 1990
000000* I just noticed the oddity. It seems to work ok, but the
000000* deletion of the END-KEY-PRESSED test is odd. It seems that
000000* end key pressed causes the record to be added twice. Once
000000* here and once in CHANGE-A-CONTROL. It seems to work so
000000* I'm not monkeying with it, but be alert to problems in
000000* in this area.
029000 CHANGE-CONTROL-ENTRY.
029100     MOVE "CHANGE" TO CF-ACTION-CODE.
029200     PERFORM CALL-CTRLFLD.
029300     MOVE CALLED-RC TO PFKEY-CODE.
029400     IF NOT END-KEY-PRESSED
029500         MOVE SAVE-SEQ TO CX-UPDATE-SEQ
029600         PERFORM SET-SEQ-FOR-CHANGE
029700         PERFORM ADD-CONTROL-RECORD.
029800 SET-SEQ-FOR-CHANGE.
029900     IF CX-UPDATE-CODE > 0
030000         MOVE 00 TO CX-UPDATE-SEQ.
030100*---------------------------------------------------------------
030200* DELETE-MODE
030300* AFTER ALL DELETIONS ARE COMPLETED, AND INTEGRITY CHECK IS DONE
030400* ON THE KEY STRUCTURE.
030500*---------------------------------------------------------------
030600 DELETE-CONTROL-FIELDS.
030700     MOVE ZEROES TO PFKEY-CODE.
030800     PERFORM DELETE-CONTROL
030900          UNTIL END-KEY-PRESSED.
031000     PERFORM VAL-KEY-EXIT.
031100 DELETE-CONTROL.
031200     PERFORM ENTER-DELETE-KEY.
031300     IF NOT END-KEY-PRESSED
031400         PERFORM DELETE-CONTROL-ENTRY.
031500 ENTER-DELETE-KEY.
031600     MOVE "DELETE" TO CF-ACTION-CODE.
031700     PERFORM CALL-CTRLLST.
031800     MOVE CALLED-RC TO PFKEY-CODE.
031900 DELETE-CONTROL-ENTRY.
032000     PERFORM DELETE-CONTROL-RECORD.
032100*---------------------------------------------------------------
032200* LOAD THE HEADERS
032300* LOAD THE CONTROL ARRAY WITH ALL RECORDS
032400* DO AN INTEGRITY CHECK AND PROVIDE AN ERROR EXIT
032500*---------------------------------------------------------------
032600 LOAD-AND-TEST-CTRL-FILE.
032700     MOVE SPACE TO SCREEN-ERROR-STATUS.
032800     PERFORM LOAD-CTRL-FILE.
000000     IF CF-MSG NOT = SPACE
000000          MOVE ENTRY-ERROR TO SCREEN-ERROR-STATUS
033000          DISPLAY
033100           "CONTROL FILE INVALID OR INCORRECTLY FORMATTED."
033200          DISPLAY
033300           CX-NAME, "-",
033400           CF-MSG.
033500
033600 LOAD-CTRL-FILE.
000000     CALL "CTRLOAD" USING
000000         COPY LKCTRL.
037000*--------------------------------------------------------------
037100* THE ACTIONS OF ADDING OR DELETING A RECORD (CHANGE IS
037200* DONE AS DELETE + ADD) REQUIRE UPDATING OF
037300* THE CONTROL FIELD ARRAY, THE USAGE MAP, THE GROUPINGS
037400* OF THE ARRAY AND THE ACTUAL FILE
037500* WHEN DELETING IN CHANGE MODE, THE REGROUPING IS NOT DONE
037600* TO AVOID LOSING THE SEQUENCE NUMBER OF THE INCOMING RECORD
037700* SO A SPECIAL CHANGE DELETE ROUTINE IS PROVIDED. DELETE IS
037800* IDENTICAL TO CHANGE DELETE + RE-GROUPING.
037900*--------------------------------------------------------------
038000 ADD-CONTROL-RECORD.
038100     PERFORM SORT-BY-SEQ
038200     PERFORM SAVE-CF-RECORD.
038300     PERFORM ADD-TO-MAP.
038400     PERFORM ADD-IN-SEQ.
038500     PERFORM CALL-CTRLGRP.
038600     COMPUTE NEXT-START = CX-START-POS +
038700                    ( CX-OCCURRENCES *
038800                      CX-INT-LEN ).
038900 DELETE-CONTROL-RECORD.
039000     PERFORM CHANGE-DELETE-CONTROL-RECORD.
039100     PERFORM CALL-CTRLGRP.
039200 CHANGE-DELETE-CONTROL-RECORD.
039300     MOVE "DELETE" TO CF-ACTION-CODE.
039400     PERFORM CALL-CTRLARY.
039500     PERFORM SORT-BY-SEQ
039600     PERFORM DELETE-FROM-MAP.
039700     MOVE CF-RECORD TO CTRL-RECORD.
039800     PERFORM DELETE-CTRL-RECORD.
039900* CTRLEXT RETURNS ZEROES IF A FIELD IS TO BE ADDED
040000 VAL-KEY-EXIT.
040100     IF CH-PRIMARY-KEY NOT = SPACE
040200         PERFORM CHECK-EXIT
040300         IF CALLED-RC = ZEROES
040400             PERFORM ADD-CONTROL
040500             GO TO VAL-KEY-EXIT.
040600 CHECK-EXIT.
040700     MOVE "VALKEYS" TO CF-ACTION-CODE.
040800     CALL "CTRLEXT" USING
000000     CALLED-RC
040900     COPY LKCTRL.
041000
000000* Following is a slightly awkward construction. Ctrlprt calls
000000* ctrllst. If the user presses enter, he is thrown into
000000* change mode for that record and then the list is repeated
000000* until a non-enter exit is chosen. To handle this, ctrlprt
000000* returns zero if and only if ctrllst is called and returns
000000* zero (enter pressed). LIST-CONTROL-LIST does a change
000000* of the record and repeats the call to CTRLLST bypassing
000000* CTRLPRT this time. When 1
000000* is pressed from CTRLLST, the code loops back up and
000000* and re-calls CTRLPRT to display the header.
041100 LIST-CONTROL.
041300     MOVE "LIST" TO CF-ACTION-CODE.
041400     PERFORM CALL-CTRLPRT.
000000     IF CALLED-RC = 0
000000         PERFORM LIST-CONTROL-LIST
000000         IF CALLED-RC = 1
000000             GO TO LIST-CONTROL.
000000
000000 LIST-CONTROL-LIST.
000000     PERFORM CHANGE-A-CONTROL.
000000     MOVE "LIST" TO CF-ACTION-CODE.
000000     PERFORM CALL-CTRLLST.
000000     IF CALLED-RC = ZEROES
000000         GO TO LIST-CONTROL-LIST.
000000
041500 MAINTAIN-TABLES.
041600     PERFORM INIT-CF-RECORD.
041700     MOVE "MENU" TO CF-ACTION-CODE.
041800     PERFORM CALL-CTRLTBL.
041900 RUN-DATENTRY.
000000     CALL "CTRLDEPP" USING CTRL-IO-BLOCK.
000000     MOVE "DATENTRY" TO LINK-PROGRAM.
000000     PERFORM DYNAMIC-LINK.
042200 RUN-INQUIRY.
000000     MOVE "INQUIRY" TO LINK-PROGRAM.
000000     PERFORM DYNAMIC-LINK.
042500 RUN-REPORT.
000000     MOVE "REPORT" TO LINK-PROGRAM.
000000     PERFORM DYNAMIC-LINK.
042700 MODIFY-UPDATE-SEQ.
042800     CALL "CTRLSEQ" USING
042900     COPY LKCTRL.
043000 ADD-TO-MAP.
043100     MOVE "ADD" TO CF-ACTION-CODE.
043200     PERFORM CALL-CTRLMAP.
043300 DELETE-FROM-MAP.
043400     MOVE "DELETE" TO CF-ACTION-CODE.
043500     PERFORM CALL-CTRLMAP.
044200 SORT-BY-SEQ.
044300     MOVE "SORTSEQ" TO CF-ACTION-CODE.
044400     PERFORM CALL-CTRLARY.
044500 ADD-IN-SEQ.
044600     MOVE "ADDSEQ" TO CF-ACTION-CODE.
044700     PERFORM CALL-CTRLARY.
045700 CALL-CTRLARY.
045800     CALL "CTRLARY" USING
000000     CALLED-RC
045900     COPY LKCTRL.
046000 CALL-CTRLTBL.
046100     CALL "CTRLTBL" USING
000000     CALLED-RC
046200     COPY LKCTRL.
046300 CALL-CTRLMAP.
046400     CALL "CTRLMAP" USING
000000     CALLED-RC
046500     COPY LKCTRL.
046600 CALL-CTRLLST.
046700     CALL "CTRLLST" USING
000000     CALLED-RC
046800     COPY LKCTRL.
046900 CALL-CTRLPRT.
047000     CALL "CTRLPRT" USING
000000     CALLED-RC
047100     COPY LKCTRL.
047200 CALL-CTRLGRP.
047300     CALL "CTRLGRP" USING
000000     CALLED-RC
047400     COPY LKCTRL.
047500 CALL-CTRLFLD.
047600     CALL "CTRLFLD" USING
000000     CALLED-RC
047700     COPY LKCTRL.
047800 CALL-CTRLHDR.
047900     CALL "CTRLHDR" USING
000000     CALLED-RC
048000     COPY LKCTRL.
048100* GENERAL ROUTINES.
048200     COPY PLUSAGE.
048300* INITIALIZATION FOR CTRL HEADERS
048400     COPY PLCTRLH.
048500     COPY PLCTRLF.
048600* IO TO THE CTRL-FILE
048700     COPY IOCTRL.
048900     COPY PLLINK.
000000     COPY PLKTRACE.
