/* Copyright (c) 1988-1996 DevTech Migrations, All rights reserved. */
/* $Id:$ */
#ifndef	DBSCH
#define	DBSCH

/*----
Maximum and minimum overhead in bytes to define one field. Each field
Requires 14 or 18 (for numerics) bytes to describe it over and above
the size of the field itself.
------*/
#define	MAX_DEF_OH		18
#define	MIN_DEF_OH		14
#define	MAX_FIELDS		401
#define	SCR_SIZE		1920
#define	SCR_START_SIZE		41
#define	LAST_FIELD		(MAX_FIELDS - 1)
#define	LAST_FIELD_NAME		"lastfld "
#define	MAX_DISPLAY_FIELDS	99
#define	FIRST_ROW		3
#define	LAST_ROW		23
#define	FIRST_COL		2
#define	FIELD_SPACE		(MAX_DISPLAY_FIELDS * (MIN_DEF_OH + MAX_DEF_OH))
#define	LINE_SPACE		(80 + MIN_DEF_OH)
#define	HEADER_SPACE		LINE_SPACE
#define	TRAILER_SPACE		(2 * LINE_SPACE)
#define	HEADER_TRAILER		(HEADER_SPACE + TRAILER_SPACE)

#define	SCR_DEF_SIZE		(SCR_START_SIZE + SCR_SIZE + FIELD_SPACE + HEADER_TRAILER)

typedef struct _field{
/*The first set of fields are created by converting CF-T1 and CF-T2*/
	char name[9];
	int occurrences;
	int len;
/*	int ext_len;  eliminate this field causing problems */
	int edit_len;
	int pos;
	int supp;
	int sign;
	int dollar;
	int noupdate;
	int dec;
	int bin;
	int seq;
	int display;
	int type;
	char val[3];
	char table[7];
	char lo[17];
	char hi[17];
	char cumm_name[9];
	int  fac;
/*The following fields are generated by logic*/
	int keynum;	/*1 thru 16 for alts , -1 for primary */
	int altkeynum;
	int dups;
	int is_accum;
	int prow;
	int pcol;
	int plen;
	int frow;
	int fcol;
	int occurrence;
	int parent;
	char *fld;		/*location of the field*/
	char *pfac;		/*fac of the prompt*/
	int is_added;
	double accum_work;
	}FIELD;

#endif
/*
**	History:
**	$Log: dbsc.h,v $
**	Revision 1.3  1996-09-17 19:34:05-04  gsl
**	drcs update
**
**
**
*/
