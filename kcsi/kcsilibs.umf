#-----------------------------------------------------------------------
#	Copyright (c) Shell Stream Software LLC, All Rights Reserved.
#
#	File:		kcsilibs.umf
#
#	Project:	KCSI (CRID + CREATE)
#
#	Purpose:	Build KCSI libraries on unix
#
#-----------------------------------------------------------------------
#
#	Targets:	
#
#	all		All shipkits (default)
#	kcsi_acu	The Acucobol KCSI shipkit
#	kcsi_acu_nc	The Acucobol KCSI shipkit (NO ACUCOBOL COMPILER)
#	kcsi_mf		The Micro Focus KCSI shipkit
#	clean		Remove all built pieces
#
#-----------------------------------------------------------------------
#
#	This makefile assumes that the environment is setup for porting
#	the WISP kit.
#
#	Usage:
#
#	$ make -f kcsilibs.umf WISPSRC=xxx {target}
#
#-----------------------------------------------------------------------

MAKEFILE=kcsilibs.umf

#-----------------------------------------------------------------------
#
# Change copyright date in "cridvers.c"
#
# To change the version for KCSI, change KCSI_VERSION and KCSIVER here. 
#	wisp/src/kcsi/cridvers.c
#	wisp/src/kcsi/version.c
#	wisp/src/kcsi/kcsilibs.umf
#	wisp/src/kcsi/kcsicob.mak
#	wisp/src/kcsi/kcsi_relnotes.txt
#	wisp/src/kcsi/kcsintsetup.txt
#	wisp/src/kcsi/kcsi_acu_install.txt
#	wisp/src/kcsi/kcsi_mf_install.txt
#	wisp/src/kcsi/kcsi_packlist.txt
#	wisp/src/doc/wisp_relnotes.txt
#	wisp/src/acu/wruncbl.umf
#	wisp/src/acu/wrun32wisp_kcsi_acu50.mak
#	wisp/src/acu/wrun32wisp_kcsi_acu51.mak
#	wisp/src/acu/wrun32wisp_kcsi_acu52.mak
#
KCSI_VERSION=4201

#-----------------------------------------------------------------------
#
# Standard WISP stuff
#
WISPSRC=..

CDEBUG= -DNDEBUG
#CDEBUG= -g -DDEBUG

L_WISP=wisp
L_VIDEO=video

MAKE_INCLUDE=$(WISPSRC)/port/make.include
include $(MAKE_INCLUDE)

WISPTRAN=$(WISPSRC)/wisptran/wisp
WISPFLAGS =

#-----------------------------------------------------------------------
#
# 	ACUCOBOL
#
include $(WISPSRC)/acu/acucobol.include

ACU_COBOL = ccbl
ACU_COBFLAGS = -Da4 -Za -C50 -Z50

#-----------------------------------------------------------------------
#
# 	MICRO FOUCS
#
MF_COBOL = cob
MF_FLAGS = -C warnings=2 -C LINKCOUNT=5000

#-----------------------------------------------------------------------
#
#	Distribution lists
#
STDDIST=ctlcnvrt.wcb rptcnvrt.wcb kcsi_packlist.txt kcsi_relnotes.txt

ACUXDIST=CONTROL REPORT INQUIRY DATENTRY CREATE 

ACUDIST=libkcsiacu.a kcsi_sub85_inc.c wruncbl.umf \
	$(ACUXDIST) \
	kcsi_acu_install.txt $(STDDIST)

MFXDIST=control report inquiry datentry create \
	control.o report.o inquiry.o datentry.o create.o \
	kcsi_mf.umf libkcsimf.a libkcsimfwcb.a \
	kcsi_mf_install.txt $(STDDIST)

#-----------------------------------------------------------------------
#
#	Component lists
#
CONTROL_WCB= ctrlmain.wcb ctrlary.wcb   ctrlfld.wcb   ctrlio.wcb \
  ctrlgrp.wcb   ctrllst.wcb   ctrlrng.wcb   ctrloptl.wcb  listmopt.wcb \
  ctrlerr.wcb   ctrlhdi.wcb   ctrlmap.wcb   ctrlseq.wcb   tableio.wcb \
  ctrlext.wcb   ctrlhdl.wcb   ctrload.wcb   ctrltbl.wcb   ctrlprt.wcb \
  ctrlfil.wcb   ctrlhdr.wcb   ctrlopt.wcb   ctrlval.wcb   ctrldif.wcb \
  ctrldepp.wcb	kcsextfh.wcb

REPORT_WCB = rptmain.wcb  \
 rptctlh.wcb  rptedt.wcb   rptmor.wcb   rptseq.wcb   \
 rptctll.wcb  rptedth.wcb  rptnew.wcb   rptsfl.wcb   rptxcl.wcb \
 rptaka.wcb   rptctlm.wcb  rptfil.wcb   rptnfl.wcb   rptsiz.wcb   rptxdt.wcb \
 rptckfl.wcb  rptctlp.wcb  rptlim.wcb   rptopt.wcb   rptsor.wcb   rptxfl.wcb \
 rptcln.wcb   rptdef.wcb   rptlod.wcb   rptpdt.wcb   rptspc.wcb   rptxln.wcb \
 rptcol.wcb   rptdnw.wcb   rptmdt.wcb   rptpfl.wcb   rptsum.wcb \
 rptcon.wcb   rptdup.wcb   rptmnu.wcb   rpttit.wcb \
 rptctl.wcb   rptedo.wcb   rptmod.wcb   rptsdt.wcb   rptwmn.wcb \
 blnksc.wcb   kcsextfh.wcb plswait.wcb  ctrldif.wcb  \
 rptcld.wcb   rptio.wcb    rptmak.wcb \
 ctrlary.wcb  ctrldio.wcb  ctrlhdi.wcb  ctrlhdl.wcb  ctrlio.wcb \
 ctrlmap.wcb  ctrlval.wcb  

INQUIRY_WCB = inqmain.wcb inqctl.wcb   inqent.wcb   inqhlp.wcb  \
 inqnam.wcb   inqrpt.wcb   inqxtr.wcb \
 inqdat.wcb   inqget.wcb   inqmak.wcb   inqopt.wcb   inqxst.wcb \
 dteload.wcb  ctrldif.wcb \
 blnksc.wcb   kcsextfh.wcb plswait.wcb \
 rptmak.wcb   rptcld.wcb   rptio.wcb \
 ctrlary.wcb  ctrlio.wcb   ctrlhdl.wcb  ctrlhdi.wcb  ctrlmap.wcb \
 ctrlval.wcb  ctrldio.wcb

DATENTRY_WCB=dtemain.wcb \
 dtectl.wcb   dtefac.wcb   dtemnu.wcb   dtespc.wcb   dteuph.wcb   \
 dteoop.wcb   dteupd.wcb   dtexst.wcb   dteinqpp.wcb \
 blnksc.wcb   kcsextfh.wcb ctrldif.wcb \
 dteload.wcb  ctrldio.wcb  ctrlval.wcb \
 ctrlio.wcb   ctrlhdl.wcb  ctrlhdi.wcb  \
 ctrlary.wcb  ctrlmap.wcb  

CONTROL_CBX=$(CONTROL_WCB:.wcb=.cbx)
REPORT_CBX=$(REPORT_WCB:.wcb=.cbx)
INQUIRY_CBX=$(INQUIRY_WCB:.wcb=.cbx)
DATENTRY_CBX=$(DATENTRY_WCB:.wcb=.cbx)

LIBC_MFX_A = libkcsimf.a
LIBC_ACU_A = libkcsiacu.a

LIBC_ALL_A=dummy.a
LIBC_ALL_O= \
	$(LIBC_ALL_A)(assert.o) \
	$(LIBC_ALL_A)(brlio.o) \
	$(LIBC_ALL_A)(bub.o) \
	$(LIBC_ALL_A)(ccsioerr.o) \
	$(LIBC_ALL_A)(cridebug.o) \
	$(LIBC_ALL_A)(cridvers.o) \
	$(LIBC_ALL_A)(dadd.o) \
	$(LIBC_ALL_A)(daux.o) \
	$(LIBC_ALL_A)(dbsc.o) \
	$(LIBC_ALL_A)(dchg.o) \
	$(LIBC_ALL_A)(ddel.o) \
	$(LIBC_ALL_A)(dglb.o) \
	$(LIBC_ALL_A)(dkey.o) \
	$(LIBC_ALL_A)(dmnt.o) \
	$(LIBC_ALL_A)(dtedat.o) \
	$(LIBC_ALL_A)(dtekey.o) \
	$(LIBC_ALL_A)(dval.o) \
	$(LIBC_ALL_A)(gp.o) \
	$(LIBC_ALL_A)(igen.o) \
	$(LIBC_ALL_A)(iglb.o) \
	$(LIBC_ALL_A)(inidio.o) \
	$(LIBC_ALL_A)(iprs.o) \
	$(LIBC_ALL_A)(itkn.o) \
	$(LIBC_ALL_A)(iwrt.o) \
	$(LIBC_ALL_A)(kcsio.o) \
	$(LIBC_ALL_A)(kcsit.o) \
	$(LIBC_ALL_A)(kdisp.o) \
	$(LIBC_ALL_A)(kexists.o) \
	$(LIBC_ALL_A)(ll.o) \
	$(LIBC_ALL_A)(piclen.o) \
	$(LIBC_ALL_A)(rbld.o) \
	$(LIBC_ALL_A)(rcal.o) \
	$(LIBC_ALL_A)(rcmp.o) \
	$(LIBC_ALL_A)(rcvs.o) \
	$(LIBC_ALL_A)(rcvt.o) \
	$(LIBC_ALL_A)(rfmt.o) \
	$(LIBC_ALL_A)(rglb.o) \
	$(LIBC_ALL_A)(rpln.o) \
	$(LIBC_ALL_A)(rsel.o) \
	$(LIBC_ALL_A)(rsrt.o) \
	$(LIBC_ALL_A)(rtie.o) \
	$(LIBC_ALL_A)(rwhlp.o) \
	$(LIBC_ALL_A)(rwop.o) \
	$(LIBC_ALL_A)(rwrt.o) \
	$(LIBC_ALL_A)(rwsrt.o) \
	$(LIBC_ALL_A)(seqio.o) \
	$(LIBC_ALL_A)(strtkn.o) \
	$(LIBC_ALL_A)(valflv.o) \
	$(LIBC_ALL_A)(vcsio.o) \
	$(LIBC_ALL_A)(version.o) \
	$(LIBC_ALL_A)(vscrbchk.o) \
	$(LIBC_ALL_A)(vscrblk.o) \
	$(LIBC_ALL_A)(vscrdbg.o) \
	$(LIBC_ALL_A)(vscreoj.o) \
	$(LIBC_ALL_A)(vscrffld.o) \
	$(LIBC_ALL_A)(vscrfile.o) \
	$(LIBC_ALL_A)(vscrglb.o) \
	$(LIBC_ALL_A)(vscrhelp.o) \
	$(LIBC_ALL_A)(vscrout.o) \
	$(LIBC_ALL_A)(vscrspky.o) 


#-----------------------------------------------------------------------
#
#	Rules
#

CFLAGS_CRID= $(CFLAGS) -DKCSI_UNIX -I ../wispcommon


.SUFFIXES: .o .cbx .wcb

.wcb.cbx:
	$(WISPTRAN) -VACU -u ACU50 $(WISPFLAGS) $*.wcb
	$(ACU_COBOL) $(ACU_COBFLAGS) -o $*.cbx $*.cob

.wcb.o:
	$(WISPTRAN) -VMF $(WISPFLAGS) $*.wcb
	$(MF_COBOL) -xc $(MF_FLAGS) $*.cob

.wcb.a:
	$(WISPTRAN) -VMF $(WISPFLAGS) $<
	$(MF_COBOL) -xc $(MF_FLAGS) $*.cob
	ar $(ARFLAGS) $@ $*.o
	rm -f $*.o $*.int


#-----------------------------------------------------------------------
#
#	Targets
#
default:	all

all:	kcsi_acu kcsi_mf
	@echo KCSI $(KCSI_VERSION) for all is UP-TO-DATE.

clean:
	rm -f *.o *.a *.int *.idy *.cbx *.cob *.cpy *.err *~ core
	rm -f control report inquiry datentry create
	rm -f wruncblk wruncblke 
	rm -f wruncbl.umf *.alc sub.c sub85.c filetbl.c callc.c wisp_sub85_inc.c
	rm -r -f kcsi*.ship

header_acu:
	@echo "=="
	@echo "== Building KCSI $(KCSI_VERSION) for ACUCOBOL"
	@echo "== PWD=`pwd`"
	@echo "== WISPSRC=$(WISPSRC)"
	@echo "== ACUDIR=$(ACUDIR)"
	@echo "== COBOL=$(ACU_COBOL) $(ACU_COBFLAGS)"
	@echo "=="

header_mf: 
	@echo "=="
	@echo "== Building KCSI $(KCSI_VERSION) for MICRO FOCUS"
	@echo "== PWD=`pwd`"
	@echo "== WISPSRC=$(WISPSRC)"
	@echo "== WISP_LIBS_PATHS=$(WISP_LIBS_PATHS)"
	@echo "== COBDIR=$(COBDIR)"
	@echo "== COBOL=$(MF_COBOL) $(MF_FLAGS)"
	@echo "=="

kcsi_mf: 
	$(MAKE) -f $(MAKEFILE) CC="$(CC)" CFLAGS="$(CFLAGS_CRID) -DKCSI_MFX" LIBC_ALL_A=$(LIBC_MFX_A) \
		WISPSRC=$(WISPSRC) kcsi_mf_go

kcsi_acu:
	$(MAKE) -f $(MAKEFILE) CC="$(CC)" CFLAGS="$(CFLAGS_CRID) -DKCSI_ACU" LIBC_ALL_A=$(LIBC_ACU_A) \
		WISPSRC=$(WISPSRC) kcsi_acu_go

kcsi_acu_nc:
	$(MAKE) -f $(MAKEFILE) CC="$(CC)" CFLAGS="$(CFLAGS_CRID) -DKCSI_ACU" LIBC_ALL_A=$(LIBC_ACU_A) \
		WISPSRC=$(WISPSRC) kcsi_acu_nc_go

kcsi_mf_go: header_mf required kcsi_mf_shipkit 
	@echo KCSI $(KCSI_VERSION) for MICRO FOCUS is UP-TO-DATE.

kcsi_acu_go: header_acu required kcsi_acu_shipkit wruncblk_rts
	@echo KCSI $(KCSI_VERSION) for ACUCOBOL is UP-TO-DATE.

kcsi_acu_nc_go: header_acu required kcsi_acux kcsi_acu_shipkit wruncblk_rts
	@echo KCSI $(KCSI_VERSION) for ACUCOBOL is UP-TO-DATE.

ACUSHIPDIR=kcsi_acu_$(KCSI_VERSION).ship
ACUDISTDIR=kcsi_acu_$(KCSI_VERSION)
ACUDISTTAZ=kcsi_acu_$(KCSI_VERSION).tar.gz

MFXSHIPDIR=kcsi_mf_$(KCSI_VERSION).ship
MFXDISTDIR=kcsi_mf_$(KCSI_VERSION)
MFXDISTTAZ=kcsi_mf_$(KCSI_VERSION).tar.gz


kcsi_acu_shipkit: $(ACUSHIPDIR)

$(ACUSHIPDIR): $(ACUDIST)
	@echo
	@echo "== Building SHIPPING KIT $@"
	rm -f -r $(ACUSHIPDIR)
	mkdir $(ACUSHIPDIR)
	mkdir $(ACUSHIPDIR)/$(ACUDISTDIR)
	chmod a+rwx $(ACUSHIPDIR)/$(ACUDISTDIR)
	cp $(ACUDIST) $(ACUSHIPDIR)/$(ACUDISTDIR)
	chmod a=r $(ACUSHIPDIR)/$(ACUDISTDIR)/*
	chmod a+w $(ACUSHIPDIR)/$(ACUDISTDIR)/*.umf
	(cd $(ACUSHIPDIR); tar -czvf $(ACUDISTTAZ) $(ACUDISTDIR))
	cp kcsi_relnotes.txt $(ACUSHIPDIR)
	cp kcsi_acu_install.txt $(ACUSHIPDIR)
	chmod a+r *
	@echo "== SHIPPING KIT $@ HAS BEEN BUILT"

kcsi_mf_shipkit: $(MFXSHIPDIR)

$(MFXSHIPDIR): $(MFXDIST)
	@echo
	@echo "== Building SHIPPING KIT $@"
	rm -f -r $(MFXSHIPDIR)
	mkdir $(MFXSHIPDIR)
	mkdir $(MFXSHIPDIR)/$(MFXDISTDIR)
	chmod a+rwx $(MFXSHIPDIR)/$(MFXDISTDIR)
	cp $(MFXDIST) $(MFXSHIPDIR)/$(MFXDISTDIR)
	(cd $(MFXSHIPDIR)/$(MFXDISTDIR); $(STRIP) control report inquiry datentry create)
	chmod a=r $(MFXSHIPDIR)/$(MFXDISTDIR)/*
	chmod a+w $(MFXSHIPDIR)/$(MFXDISTDIR)/*.umf
	(cd $(MFXSHIPDIR)/$(MFXDISTDIR); chmod a=rx control report inquiry datentry create)
	(cd $(MFXSHIPDIR); tar -czvf $(MFXDISTTAZ) $(MFXDISTDIR))
	cp kcsi_relnotes.txt $(MFXSHIPDIR)
	cp kcsi_mf_install.txt $(MFXSHIPDIR)
	chmod a+r *
	@echo "== SHIPPING KIT $@ HAS BEEN BUILT"


required: $(WISPTRAN) $(WISP_LIBS_PATHS)

$(WISPTRAN) $(WISP_LIBS_PATHS):
	@echo "=="
	@echo "== ERROR: Required file $@ was not found"
	@echo "=="
	@exit 1

#-----------------------------------------------------------------------
#
#	ACUCOBOL Targets
#
#	If you don't have an Acucobol compiler then copy 
#	in the files from an another system.
#

.PRECIOUS: $(LIBC_ACU_A)

CONTROL:	$(CONTROL_WCB)
	$(MAKE) -f $(MAKEFILE) WISPSRC=$(WISPSRC) control_cbx
	@echo $@ is UP-TO-DATE

REPORT:		$(REPORT_WCB)
	$(MAKE) -f $(MAKEFILE) WISPSRC=$(WISPSRC) report_cbx
	@echo $@ is UP-TO-DATE

INQUIRY:	$(INQUIRY_WCB)
	$(MAKE) -f $(MAKEFILE) WISPSRC=$(WISPSRC) inquiry_cbx
	@echo $@ is UP-TO-DATE

DATENTRY:	$(DATENTRY_WCB)
	$(MAKE) -f $(MAKEFILE) WISPSRC=$(WISPSRC) datentry_cbx
	@echo $@ is UP-TO-DATE

CREATE:	CREATE.wcb
	$(WISPTRAN) -VACU -u ACU50 $(WISPFLAGS) CREATE.wcb
	$(ACU_COBOL) $(ACU_COBFLAGS) -o CREATE CREATE.cob
	@echo $@ is UP-TO-DATE

control_cbx:	header_acu $(CONTROL_CBX)
	$(CBLUTIL) -lib -o CONTROL $(CONTROL_CBX)

report_cbx:	header_acu $(REPORT_CBX)
	$(CBLUTIL) -lib -o REPORT $(REPORT_CBX)

inquiry_cbx:	header_acu $(INQUIRY_CBX)
	$(CBLUTIL) -lib -o INQUIRY $(INQUIRY_CBX)

datentry_cbx:	header_acu $(DATENTRY_CBX)
	$(CBLUTIL) -lib -o DATENTRY $(DATENTRY_CBX)


LIBC_ACU_ONLY_O= \
	$(LIBC_ACU_A)(kv3.o) 

$(LIBC_ACU_A): $(LIBC_ALL_O) $(LIBC_ACU_ONLY_O)
	$(RANLIB) $@
	@echo $@ is UP-TO-DATE

# Use fake name to force rts make to be run
wruncblk_rts: $(LIBC_ACU_A) wruncbl.umf
	$(MAKE) -f wruncbl.umf WISPDIR=$(WISPSRC) ACUDIR=$(ACUDIR) KCSIDIR=. kcsi

wruncbl.umf: $(WISPSRC)/acu/wruncbl.umf
	cp -f $(WISPSRC)/acu/wruncbl.umf $@

kcsi_acux.tar.gz: $(ACUXDIST)
	tar -czvf $@ $(ACUXDIST)
	
kcsi_acux:
	tar -xzvf kcsi_acux.tar.gz
	touch $(ACUXDIST)

#-----------------------------------------------------------------------
#
#	Micro Focus Targets
#
LIBWCB_MFX_A = libkcsimfwcb.a

.PRECIOUS:	$(LIBWCB_MFX_A) $(LIBC_MFX_A)

create \
control \
report \
inquiry \
datentry: control.o report.o inquiry.o datentry.o create.o $(LIBWCB_MFX_A) $(LIBC_MFX_A) $(MAKE_INCLUDE) $(WISP_LIBS_PATHS)
	$(MAKE) -f kcsi_mf.umf WISPDIR=$(WISPSRC) MAKE_INCLUDE=$(MAKE_INCLUDE) $@

LIBC_MFX_ONLY_O= \
	$(LIBC_MFX_A)(kmf.o) \
	$(LIBC_MFX_A)(kcsimem.o) \
	$(LIBC_MFX_A)(rlaio.o) \
	$(LIBC_MFX_A)(mfstub.o)


$(LIBC_MFX_A): $(LIBC_ALL_O) $(LIBC_MFX_ONLY_O)
	$(RANLIB) $@
	@echo $@ is UP-TO-DATE

$(LIBWCB_MFX_A): \
	$(LIBWCB_MFX_A)(CREATE.o) \
	$(LIBWCB_MFX_A)(blnksc.o) \
	$(LIBWCB_MFX_A)(kcsextfh.o) \
	$(LIBWCB_MFX_A)(ctrlary.o) \
	$(LIBWCB_MFX_A)(ctrldepp.o) \
	$(LIBWCB_MFX_A)(ctrldif.o) \
	$(LIBWCB_MFX_A)(ctrldio.o) \
	$(LIBWCB_MFX_A)(ctrlerr.o) \
	$(LIBWCB_MFX_A)(ctrlext.o) \
	$(LIBWCB_MFX_A)(ctrlfil.o) \
	$(LIBWCB_MFX_A)(ctrlfld.o) \
	$(LIBWCB_MFX_A)(ctrlgrp.o) \
	$(LIBWCB_MFX_A)(ctrlhdi.o) \
	$(LIBWCB_MFX_A)(ctrlhdl.o) \
	$(LIBWCB_MFX_A)(ctrlhdr.o) \
	$(LIBWCB_MFX_A)(ctrlio.o) \
	$(LIBWCB_MFX_A)(ctrllst.o) \
	$(LIBWCB_MFX_A)(ctrlmain.o) \
	$(LIBWCB_MFX_A)(ctrlmap.o) \
	$(LIBWCB_MFX_A)(ctrload.o) \
	$(LIBWCB_MFX_A)(ctrlopt.o) \
	$(LIBWCB_MFX_A)(ctrloptl.o) \
	$(LIBWCB_MFX_A)(ctrlprt.o) \
	$(LIBWCB_MFX_A)(ctrlrng.o) \
	$(LIBWCB_MFX_A)(ctrlseq.o) \
	$(LIBWCB_MFX_A)(ctrltbl.o) \
	$(LIBWCB_MFX_A)(ctrlval.o) \
	$(LIBWCB_MFX_A)(dtectl.o) \
	$(LIBWCB_MFX_A)(dtefac.o) \
	$(LIBWCB_MFX_A)(dteinqpp.o) \
	$(LIBWCB_MFX_A)(dteload.o) \
	$(LIBWCB_MFX_A)(dtemain.o) \
	$(LIBWCB_MFX_A)(dtemnu.o) \
	$(LIBWCB_MFX_A)(dteoop.o) \
	$(LIBWCB_MFX_A)(dtespc.o) \
	$(LIBWCB_MFX_A)(dteupd.o) \
	$(LIBWCB_MFX_A)(dteuph.o) \
	$(LIBWCB_MFX_A)(dtexst.o) \
	$(LIBWCB_MFX_A)(inqctl.o) \
	$(LIBWCB_MFX_A)(inqdat.o) \
	$(LIBWCB_MFX_A)(inqent.o) \
	$(LIBWCB_MFX_A)(inqget.o) \
	$(LIBWCB_MFX_A)(inqhlp.o) \
	$(LIBWCB_MFX_A)(inqmain.o) \
	$(LIBWCB_MFX_A)(inqmak.o) \
	$(LIBWCB_MFX_A)(inqnam.o) \
	$(LIBWCB_MFX_A)(inqopt.o) \
	$(LIBWCB_MFX_A)(inqrpt.o) \
	$(LIBWCB_MFX_A)(inqxst.o) \
	$(LIBWCB_MFX_A)(inqxtr.o) \
	$(LIBWCB_MFX_A)(listmopt.o) \
	$(LIBWCB_MFX_A)(plswait.o) \
	$(LIBWCB_MFX_A)(rptaka.o) \
	$(LIBWCB_MFX_A)(rptckfl.o) \
	$(LIBWCB_MFX_A)(rptcld.o) \
	$(LIBWCB_MFX_A)(rptcln.o) \
	$(LIBWCB_MFX_A)(rptcol.o) \
	$(LIBWCB_MFX_A)(rptcon.o) \
	$(LIBWCB_MFX_A)(rptctl.o) \
	$(LIBWCB_MFX_A)(rptctlh.o) \
	$(LIBWCB_MFX_A)(rptctll.o) \
	$(LIBWCB_MFX_A)(rptctlm.o) \
	$(LIBWCB_MFX_A)(rptctlp.o) \
	$(LIBWCB_MFX_A)(rptdef.o) \
	$(LIBWCB_MFX_A)(rptdnw.o) \
	$(LIBWCB_MFX_A)(rptdup.o) \
	$(LIBWCB_MFX_A)(rptedo.o) \
	$(LIBWCB_MFX_A)(rptedt.o) \
	$(LIBWCB_MFX_A)(rptedth.o) \
	$(LIBWCB_MFX_A)(rptfil.o) \
	$(LIBWCB_MFX_A)(rptio.o) \
	$(LIBWCB_MFX_A)(rptlim.o) \
	$(LIBWCB_MFX_A)(rptlod.o) \
	$(LIBWCB_MFX_A)(rptmak.o) \
	$(LIBWCB_MFX_A)(rptmain.o) \
	$(LIBWCB_MFX_A)(rptmdt.o) \
	$(LIBWCB_MFX_A)(rptmnu.o) \
	$(LIBWCB_MFX_A)(rptmod.o) \
	$(LIBWCB_MFX_A)(rptmor.o) \
	$(LIBWCB_MFX_A)(rptnew.o) \
	$(LIBWCB_MFX_A)(rptnfl.o) \
	$(LIBWCB_MFX_A)(rptopt.o) \
	$(LIBWCB_MFX_A)(rptpdt.o) \
	$(LIBWCB_MFX_A)(rptpfl.o) \
	$(LIBWCB_MFX_A)(rptsdt.o) \
	$(LIBWCB_MFX_A)(rptseq.o) \
	$(LIBWCB_MFX_A)(rptsfl.o) \
	$(LIBWCB_MFX_A)(rptsiz.o) \
	$(LIBWCB_MFX_A)(rptsor.o) \
	$(LIBWCB_MFX_A)(rptspc.o) \
	$(LIBWCB_MFX_A)(rptsum.o) \
	$(LIBWCB_MFX_A)(rpttit.o) \
	$(LIBWCB_MFX_A)(rptwmain.o) \
	$(LIBWCB_MFX_A)(rptwmn.o) \
	$(LIBWCB_MFX_A)(rptxcl.o) \
	$(LIBWCB_MFX_A)(rptxdt.o) \
	$(LIBWCB_MFX_A)(rptxfl.o) \
	$(LIBWCB_MFX_A)(rptxln.o) \
	$(LIBWCB_MFX_A)(tableio.o)
	$(RANLIB) $(LIBWCB_MFX_A)
	@echo LIBRARY $(LIBWCB_MFX_A) is now UP-TO-DATE

#-----------------------------------------------------------------------
#	End
#-----------------------------------------------------------------------
