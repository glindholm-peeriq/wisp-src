# 
#	Copyright (c) 1995-1998 NeoMedia Technologies, All rights reserved.
#	$Id:$
#
#
#	File:		wproc.umf
#
#	Function:	Makefile for wproc
#

CDEBUG =
CCDEBUG=

L_WISP=wisp
L_VIDEO=video

WC=../wispcommon
VC=../videolib

include $(WISPSRC)/port/make.include

WPROC_EXE=wproc

#	WPROC_VERSION=2000
#	To change WPROC version number change WPROC_VERSION:
#	wisp/src/wproc/product.cpp
#	wisp/src/doc/wproc.txt

WPROC_DIST=$(WPROC_EXE) ../doc/wproc.txt wproc.msg
WPROC_DEMOSTUFF=cursor.wps demo.wps dr.wps ed.wps environ.wps putparm.wps screen.wps test.wps video.wps

WPROC_STD_FLAGS = -DWANG -DUNIX -I$(WC) -I$(VC) 

CFLAGS  = $(CFLAGS0)  $(WPROC_STD_FLAGS)
CCFLAGS = $(CCFLAGS0) $(WPROC_STD_FLAGS)

#
#	C++ NOTES
#
#	1) Must have signed char's  (GNU. -fsigned-char)
#
#	2) If type "bool" is builtin then turn off our bool with -DBOOL_TYPE
#
#	3) Some C++ compilers don't recognize file extension "cpp", must use "cc" or "C"
#

CCC_EXT=cpp
#CCC_EXT=cc
#CCC_EXT=C

default: header $(WPROC_EXE)

.SUFFIXES: .$(CCC_EXT) .hpp .cpp

.cpp.cc:
	cp $*.cpp $*.cc

.cpp.C:
	cp $*.cpp $*.C

.cc.C:
	cp $*.cc $*.C

.$(CCC_EXT).o:
	$(CCC) $(CCFLAGS) -c $<


header:
	@echo
	@echo ">>> Making WPROC "
	@echo ">>>"
	@echo ">>> WISPSRC     = $(WISPSRC)"
	@echo ">>>"
	@echo

kit: header $(WPROC_DIST) $(WPROC_DEMOSTUFF)


ed.wpr:
	@echo
	@echo	"======================================================================="
	@echo	"Unable to make $@ automatically, you must make it manually."
	@echo	
	@echo	"Follow these instructions to make ed.wpr:"
	@echo	"    cd `pwd`"
	@echo	"    ./wproc -c ed.wps"
	@echo
	@echo	"Have a nice day :)"
	@echo	"======================================================================="
	@echo
	exit 1

clean:
	rm -r -f $(WPROC_EXE) *.o *~ core *.wpr 


WPROC_RUNTIME_OBJECTS = \
args.o     \
assert.o   \
builtin.o  \
cancel.o   \
crt_io.o   \
colors.o   \
data.o     \
debugaid.o \
driver.o   \
e_assign.o \
e_decl.o   \
e_math.o   \
e_os.o     \
e_run.o    \
e_scrnio.o \
e_substr.o \
e_ttyio.o  \
e_varref.o \
e_wang.o   \
exp.o      \
execute.o  \
fileinfo.o \
files.o    \
input.o    \
install.o  \
machine.o  \
memcheck.o \
memory.o   \
miscsubs.o \
object.o   \
opcodes.o  \
options.o  \
pcode.o    \
procedur.o \
process.o  \
product.o  \
range.o    \
reader.o   \
report.o   \
scope.o    \
screen.o   \
stack.o    \
state.o    \
stateobj.o \
symbols.o  \
sysenv.o   \
tables.o   \
token.o    \
tracer.o   \
txt.o      \
utility.o  \
wangfile.o \
wang_os.o

WPROC_COMPILER_OBJECTS = \
compiler.o \
fixup.o    \
p_assign.o \
p_ctrl.o   \
p_decl.o   \
p_exp.o    \
p_os.o     \
p_run.o    \
p_scrnio.o \
p_ttyio.o  \
p_var.o    \
p_wang.o   \
scanner.o  

WPROC_OBJECTS = $(WPROC_COMPILER_OBJECTS) $(WPROC_RUNTIME_OBJECTS)

$(WPROC_EXE): $(WPROC_OBJECTS) $(WISP_LIBS_PATHS)
	@echo Linking $(WPROC_EXE)
	$(CCC) -o $@ $(CCFLAGS) $(WPROC_OBJECTS) $(WISP_LIBS_LINK) $(CURSES_LINK) $(CCC_SYS_LINK)
	@echo ">>>Done"


args.o : args.$(CCC_EXT) args.hpp exp.hpp object.hpp symbols.hpp data.hpp pcode.hpp \
  stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp debugaid.hpp options.hpp \
  memory.hpp utility.hpp 
assert.o : assert.$(CCC_EXT) crt_io.hpp colors.hpp environ.hpp fileinfo.hpp object.hpp \
  utility.hpp 
builtin.o : builtin.$(CCC_EXT) builtin.hpp files.hpp object.hpp environ.hpp machine.hpp \
  args.hpp exp.hpp symbols.hpp data.hpp pcode.hpp stateobj.hpp assert.hpp opcodes.hpp \
  scope.hpp colors.hpp process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp \
  report.hpp status.hpp cancel.hpp crt_io.hpp fileinfo.hpp keyboard.hpp memory.hpp \
  txt.hpp 
cancel.o : cancel.$(CCC_EXT) cancel.hpp environ.hpp 
colors.o : colors.$(CCC_EXT) colors.hpp environ.hpp tables.hpp object.hpp debugaid.hpp \
  options.hpp assert.hpp memory.hpp utility.hpp 
compiler.o : compiler.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp process.hpp state.hpp \
  tables.hpp cancel.hpp debugaid.hpp options.hpp 
critical.o : critical.$(CCC_EXT) critical.hpp environ.hpp 
crt_io.o : crt_io.$(CCC_EXT) crt_io.hpp colors.hpp environ.hpp process.hpp object.hpp \
  symbols.hpp data.hpp pcode.hpp stateobj.hpp assert.hpp opcodes.hpp scope.hpp \
  screen.hpp exp.hpp video_rt.h $(VIDEO_INC_DIR)/video.h $(VIDEO_INC_DIR)/vlocal.h \
  $(VIDEO_INC_DIR)/vdata.h memory.hpp utility.hpp 
data.o : data.$(CCC_EXT) data.hpp pcode.hpp stateobj.hpp object.hpp environ.hpp assert.hpp \
  opcodes.hpp scope.hpp memory.hpp utility.hpp 
debugaid.o : debugaid.$(CCC_EXT) 
driver.o : driver.$(CCC_EXT) input.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp procedur.hpp \
  compiler.hpp fixup.hpp token.hpp utility.hpp range.hpp scanner.hpp reader.hpp \
  report.hpp machine.hpp colors.hpp process.hpp stack.hpp sysenv.hpp status.hpp \
  state.hpp options.hpp cancel.hpp crt_io.hpp debugaid.hpp ext.hpp install.hpp \
  memcheck.hpp memory.hpp fileinfo.hpp wang_os.hpp wangfile.hpp wisp_rts.h 
e_assign.o : e_assign.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp \
  colors.hpp process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp \
  report.hpp status.hpp debugaid.hpp options.hpp memory.hpp txt.hpp 
e_decl.o : e_decl.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp debugaid.hpp options.hpp memory.hpp txt.hpp 
e_math.o : e_math.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp debugaid.hpp options.hpp txt.hpp 
e_os.o : e_os.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp debugaid.hpp options.hpp fileinfo.hpp memory.hpp subops.hpp txt.hpp 
e_run.o : e_run.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp input.hpp procedur.hpp compiler.hpp fixup.hpp scanner.hpp reader.hpp \
  state.hpp wang_os.hpp wangfile.hpp debugaid.hpp options.hpp memory.hpp subops.hpp \
  txt.hpp 
e_scrnio.o : e_scrnio.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp \
  colors.hpp process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp \
  report.hpp status.hpp screen.hpp attribs.hpp cancel.hpp crt_io.hpp memory.hpp \
  subops.hpp txt.hpp 
e_substr.o : e_substr.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp \
  colors.hpp process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp \
  report.hpp status.hpp txt.hpp 
e_ttyio.o : e_ttyio.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp files.hpp crt_io.hpp txt.hpp 
e_varref.o : e_varref.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp \
  colors.hpp process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp \
  report.hpp status.hpp txt.hpp 
e_wang.o : e_wang.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp memory.hpp debugaid.hpp options.hpp subops.hpp txt.hpp wang_os.hpp \
  wangfile.hpp 
execute.o : execute.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp input.hpp procedur.hpp compiler.hpp fixup.hpp scanner.hpp reader.hpp \
  state.hpp cancel.hpp debugaid.hpp options.hpp files.hpp install.hpp memory.hpp \
  tracer.hpp screen.hpp txt.hpp 
exp.o : exp.$(CCC_EXT) exp.hpp object.hpp symbols.hpp data.hpp pcode.hpp stateobj.hpp \
  environ.hpp assert.hpp opcodes.hpp scope.hpp process.hpp debugaid.hpp options.hpp \
  memory.hpp report.hpp range.hpp token.hpp utility.hpp 
fileinfo.o : fileinfo.$(CCC_EXT) fileinfo.hpp object.hpp environ.hpp options.hpp process.hpp \
  symbols.hpp data.hpp pcode.hpp stateobj.hpp assert.hpp opcodes.hpp scope.hpp \
  debugaid.hpp ext.hpp memory.hpp utility.hpp wang_os.hpp args.hpp exp.hpp machine.hpp \
  colors.hpp range.hpp token.hpp stack.hpp sysenv.hpp report.hpp status.hpp wangfile.hpp 
files.o : files.$(CCC_EXT) files.hpp object.hpp environ.hpp process.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp assert.hpp opcodes.hpp scope.hpp debugaid.hpp \
  options.hpp memory.hpp utility.hpp 
fixup.o : fixup.$(CCC_EXT) fixup.hpp data.hpp pcode.hpp stateobj.hpp object.hpp environ.hpp \
  assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp utility.hpp debugaid.hpp \
  options.hpp 
input.o : input.$(CCC_EXT) input.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp procedur.hpp \
  compiler.hpp fixup.hpp token.hpp utility.hpp range.hpp scanner.hpp reader.hpp \
  report.hpp machine.hpp colors.hpp process.hpp stack.hpp sysenv.hpp status.hpp \
  state.hpp cancel.hpp crt_io.hpp debugaid.hpp options.hpp fileinfo.hpp memory.hpp \
  screen.hpp wang_os.hpp wangfile.hpp 
install.o : install.$(CCC_EXT) install.hpp environ.hpp crt_io.hpp colors.hpp fileinfo.hpp \
  object.hpp ext.hpp memory.hpp product.hpp report.hpp range.hpp token.hpp utility.hpp 
machine.o : machine.$(CCC_EXT) machine.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp \
  process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp \
  status.hpp crt_io.hpp debugaid.hpp options.hpp files.hpp memory.hpp screen.hpp \
  tracer.hpp reader.hpp txt.hpp 
memcheck.o : memcheck.$(CCC_EXT) 
memory.o : memory.$(CCC_EXT) memory.hpp options.hpp object.hpp environ.hpp crt_io.hpp \
  colors.hpp debugaid.hpp assert.hpp 
miscsubs.o : miscsubs.c envs.h
network.o : network.$(CCC_EXT) 
object.o : object.$(CCC_EXT) object.hpp options.hpp environ.hpp crt_io.hpp colors.hpp \
  debugaid.hpp assert.hpp memory.hpp report.hpp range.hpp token.hpp utility.hpp 
opcodes.o : opcodes.$(CCC_EXT) opcodes.hpp 
options.o : options.$(CCC_EXT) options.hpp object.hpp environ.hpp crt_io.hpp colors.hpp \
  debugaid.hpp assert.hpp install.hpp memory.hpp process.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp opcodes.hpp scope.hpp product.hpp report.hpp range.hpp \
  token.hpp utility.hpp 
p_assign.o : p_assign.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp debugaid.hpp options.hpp 
p_ctrl.o : p_ctrl.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp process.hpp debugaid.hpp \
  options.hpp memory.hpp 
p_decl.o : p_decl.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp process.hpp debugaid.hpp \
  options.hpp txt.hpp 
p_exp.o : p_exp.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp object.hpp \
  environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp utility.hpp \
  range.hpp scanner.hpp reader.hpp report.hpp options.hpp colors.hpp debugaid.hpp \
  memory.hpp txt.hpp 
p_os.o : p_os.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp object.hpp \
  environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp utility.hpp \
  range.hpp scanner.hpp reader.hpp report.hpp tables.hpp debugaid.hpp options.hpp \
  subops.hpp 
p_run.o : p_run.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp object.hpp \
  environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp utility.hpp \
  range.hpp scanner.hpp reader.hpp report.hpp tables.hpp debugaid.hpp options.hpp \
  subops.hpp 
p_scrnio.o : p_scrnio.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp tables.hpp attribs.hpp \
  debugaid.hpp options.hpp subops.hpp 
p_ttyio.o : p_ttyio.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp debugaid.hpp options.hpp 
p_var.o : p_var.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp object.hpp \
  environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp utility.hpp \
  range.hpp scanner.hpp reader.hpp report.hpp options.hpp debugaid.hpp txt.hpp 
p_wang.o : p_wang.$(CCC_EXT) compiler.hpp fixup.hpp data.hpp pcode.hpp stateobj.hpp \
  object.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp symbols.hpp token.hpp \
  utility.hpp range.hpp scanner.hpp reader.hpp report.hpp tables.hpp debugaid.hpp \
  options.hpp memory.hpp subops.hpp 
pcode.o : pcode.$(CCC_EXT) pcode.hpp stateobj.hpp object.hpp environ.hpp assert.hpp \
  opcodes.hpp debugaid.hpp options.hpp memory.hpp report.hpp range.hpp token.hpp \
  utility.hpp 
procedur.o : procedur.$(CCC_EXT) procedur.hpp args.hpp exp.hpp object.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp \
  compiler.hpp fixup.hpp token.hpp utility.hpp range.hpp scanner.hpp reader.hpp \
  report.hpp machine.hpp colors.hpp process.hpp stack.hpp sysenv.hpp status.hpp \
  state.hpp debugaid.hpp options.hpp ext.hpp fileinfo.hpp memory.hpp product.hpp 
process.o : process.$(CCC_EXT) process.hpp object.hpp symbols.hpp data.hpp pcode.hpp \
  stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp debugaid.hpp \
  options.hpp memory.hpp envs.h
product.o : product.$(CCC_EXT) product.hpp environ.hpp 
range.o : range.$(CCC_EXT) range.hpp object.hpp token.hpp environ.hpp utility.hpp debugaid.hpp \
  options.hpp assert.hpp 
reader.o : reader.$(CCC_EXT) reader.hpp object.hpp environ.hpp debugaid.hpp options.hpp \
  assert.hpp memory.hpp report.hpp range.hpp token.hpp utility.hpp 
report.o : report.$(CCC_EXT) report.hpp range.hpp object.hpp token.hpp environ.hpp utility.hpp \
  colors.hpp options.hpp process.hpp symbols.hpp data.hpp pcode.hpp stateobj.hpp \
  assert.hpp opcodes.hpp scope.hpp reader.hpp screen.hpp exp.hpp crt_io.hpp debugaid.hpp \
  ext.hpp wangfile.hpp install.hpp memory.hpp product.hpp 
scanner.o : scanner.$(CCC_EXT) scanner.hpp object.hpp reader.hpp environ.hpp token.hpp \
  utility.hpp options.hpp debugaid.hpp assert.hpp 
scope.o : scope.$(CCC_EXT) scope.hpp object.hpp environ.hpp debugaid.hpp options.hpp \
  assert.hpp 
screen.o : screen.$(CCC_EXT) screen.hpp exp.hpp object.hpp symbols.hpp data.hpp pcode.hpp \
  stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp colors.hpp cancel.hpp \
  crt_io.hpp debugaid.hpp options.hpp keyboard.hpp machine.hpp args.hpp process.hpp \
  range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp report.hpp status.hpp memory.hpp 
stack.o : stack.$(CCC_EXT) stack.hpp exp.hpp object.hpp symbols.hpp data.hpp pcode.hpp \
  stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp debugaid.hpp options.hpp \
  memory.hpp report.hpp range.hpp token.hpp utility.hpp 
state.o : state.$(CCC_EXT) state.hpp stateobj.hpp object.hpp environ.hpp pcode.hpp assert.hpp \
  opcodes.hpp process.hpp symbols.hpp data.hpp scope.hpp stack.hpp exp.hpp debugaid.hpp \
  options.hpp product.hpp report.hpp range.hpp token.hpp utility.hpp 
stateobj.o : stateobj.$(CCC_EXT) stateobj.hpp object.hpp environ.hpp debugaid.hpp options.hpp \
  assert.hpp memory.hpp report.hpp range.hpp token.hpp utility.hpp 
symbols.o : symbols.$(CCC_EXT) symbols.hpp data.hpp pcode.hpp stateobj.hpp object.hpp \
  environ.hpp assert.hpp opcodes.hpp scope.hpp process.hpp tables.hpp builtin.hpp \
  debugaid.hpp options.hpp memory.hpp utility.hpp report.hpp range.hpp token.hpp \
  miscsubs.h wang_os.hpp
sysenv.o : sysenv.$(CCC_EXT) sysenv.hpp object.hpp debugaid.hpp options.hpp environ.hpp \
  assert.hpp memory.hpp utility.hpp 
tables.o : tables.$(CCC_EXT) tables.hpp object.hpp environ.hpp debugaid.hpp options.hpp \
  assert.hpp utility.hpp 
token.o : token.$(CCC_EXT) token.hpp object.hpp environ.hpp utility.hpp debugaid.hpp \
  options.hpp assert.hpp memory.hpp 
tracer.o : tracer.$(CCC_EXT) tracer.hpp exp.hpp object.hpp symbols.hpp data.hpp pcode.hpp \
  stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp reader.hpp screen.hpp \
  colors.hpp process.hpp crt_io.hpp debugaid.hpp options.hpp keyboard.hpp memory.hpp \
  product.hpp utility.hpp fileinfo.hpp wangfile.hpp envs.h
txt.o : txt.$(CCC_EXT) txt.hpp 
utility.o : utility.$(CCC_EXT) utility.hpp environ.hpp process.hpp object.hpp symbols.hpp \
  data.hpp pcode.hpp stateobj.hpp assert.hpp opcodes.hpp scope.hpp reader.hpp \
  screen.hpp exp.hpp colors.hpp crt_io.hpp debugaid.hpp options.hpp memory.hpp 
wang_os.o : wang_os.$(CCC_EXT) wang_os.hpp args.hpp exp.hpp object.hpp symbols.hpp data.hpp \
  pcode.hpp stateobj.hpp environ.hpp assert.hpp opcodes.hpp scope.hpp machine.hpp \
  colors.hpp process.hpp range.hpp token.hpp utility.hpp stack.hpp sysenv.hpp \
  report.hpp status.hpp wangfile.hpp debugaid.hpp options.hpp memory.hpp runtype.h \
  wisp_rts.h miscsubs.h product.hpp
wangfile.o : wangfile.$(CCC_EXT) wangfile.hpp object.hpp environ.hpp utility.hpp 



dummyep.o : dummyep.c 
wisp_rts.o : wisp_rts.c 

