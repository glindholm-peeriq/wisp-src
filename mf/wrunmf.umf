#	Copyright (c) Shell Stream Software LLC, All rights reserved.
#	$Id:$
#
#
#	File:	wrunmf.umf
#
#	Function:
#		The UNIX makefile for building the Micro Focus COBOL
#		runtime systems that include the WISP runtime routines.
#
#	Description:
#		This makefile can generate the following versions
#		of the Micro Focus runtime system.
#
#		wrunmf		The standard runtime
#
#		wrunmf_x4400	The standard runtime with 4400 API support
#				Use this if upgrading from an earlier version
#				of WISP and not retranslating.
#
#		wrunmfe		The EDE version of the runtime.
#
#	Instructions:
#		To create a Micro Focus runtime system position to 
#		the wisp/mf directory and run the "make" utility 
#		using this file as input.
#
#		NOTE:	You do not need to move the wisp libraries
#			to /usr/lib as specified in earlier 
#			instructions.
#
#		This makefile requires instructions on how to find
#		the WISP libraries and the Micro Focus files.
#		This is done using the variables WISPDIR and COBDIR.
#
#			WISPDIR = The installed WISP directory
#			COBDIR  = The Micro Focus directory
#
#		COBDIR must be set as an environment variable for
#		the compiler to run.
#
#			$ COBDIR=/usr/local/cobol
#			$ export COBDIR
#
#		There are two methods of specifying the WISPDIR.
#
#		Method A:
#		---------
#		Edit this file and change WISPDIR and COBDIR to 
#		point to the correct location.
#
#			WISPDIR=/usr/local/wisp
#			COBDIR=/usr/local/cobol
#
#		To build a standard runtime:
#			$ cd $WISPDIR/mf
#			$ make -f wrunmf.umf
#
#		To build a EDE runtime:
#			$ cd $WISPDIR/mf
#			$ make -f wrunmf.umf ede
#
#
#		Method B:
#		---------
#		Set WISPDIR as an environment variable then use 
#		the "-e" flag with make. (The -e flag causes the environment
#		variables to override the internal variables.)
#
#			$ WISPDIR=/usr/local/wisp
#			$ export WISPDIR
#
#		To build a standard runtime:
#			$ cd $WISPDIR/mf
#			$ make -f wrunmf.umf -e
#
#		To build a EDE runtime:
#			$ cd $WISPDIR/mf
#			$ make -f wrunmf.umf -e ede
#
#
#	NOTES:	On some systems the curses library is located in a different
#		location, see LIBCURSES below.
#			
#
#	Targets:
#		When running the make utility you can specify what "targets"
#		to create.  You specify a target by adding it to the end
#		of the make command.
#
#		Usage:	make -f wrunmf.umf [-e] [targets...]
#
#		The following targets are recognized in this makefile.
#		Each target that builds a runtime has a corresponding macro 
#		which can be used to change the name of the runtime.
#
#		rts		The default WISP + Micro Focus runtime.
#				Runtime = wrunmf
#				Macro   = RTS
#
#		rtsx4400	The WISP runtime with 4400 API support.
#				Runtime = wrunmf_x4400
#				Macro   = RTS4400
#
#		ede		The EDE runtime.
#				Runtime = wrunmfe
#				Macro   = RTSE
#
#		clean		This target is used to remove any files 
#				created by this makefile.
#
#		Examples:
#
#		(1) Build the EDE runtime. (Method A)
#
#			$ cd $WISPDIR/mf
#			$ make -f wrunmf.umf ede
#
#		(2) Build the runtime using the name "wrunmf32". (Method B) 
#
#			$ cd $WISPDIR/mf
#			$ make -f wrunmf.umf -e RTS=wrunmf32 rts
#
#	
#


#============================================================================
#
# **** CHANGE WISPDIR HERE ****
#
# These macros represent environment variables.
#
# WISPDIR	The installed WISP directory
# EDEDIR	The EDE lib directory
# COBDIR	The Micro Focus COBOL directory
#
WISPDIR=/usr/local/wisp
COBDIR=/usr/local/cobol
EDEDIR=$(WISPDIR)/lib

#============================================================================
#
# WISPLIBSDIR points to the directory of the WISP libraries.  This is built
# based on WISPDIR, however it can be overridden if the libraries have been
# moved out of the installed WISP directory tree.
#
WISPLIBSDIR=$(WISPDIR)/lib

#============================================================================
#
# **** CHANGE LIBCURSES HERE ****
#
# LIBCURSES is normally set to use the standard curses library. However on
# some systems the curses library is located or named differently. On these
# system you must uncomment the appropriate definition of LIBCURSES.
#
LIBCURSES= -lcurses

#============================================================================
#
# COBOL is the cobol compiler.
#
COBOL=cob

#============================================================================
#
# COBTEST is a test file used to determine if COBOL installed
#
COBTEST=$(COBDIR)/cpylib

#============================================================================
#
# Standard WISP libraries
#
L_WISP=wisp
L_VIDEO=video
L_EDE=ede
LIBWISP=lib$(L_WISP).a
LIBVIDEO=lib$(L_VIDEO).a
LIBEDE=lib$(L_EDE).a

WISP_LIB_PATH  		= $(WISPLIBSDIR)/$(LIBWISP)
VIDEO_LIB_PATH 		= $(WISPLIBSDIR)/$(LIBVIDEO)
EDE_LIB_PATH   		= $(EDEDIR)/$(LIBEDE)

WISP_LIBS_PATHS 	= $(WISP_LIB_PATH) $(VIDEO_LIB_PATH)
WISPEDE_LIBS_PATHS	= $(EDE_LIB_PATH) $(WISP_LIB_PATH) $(VIDEO_LIB_PATH)

OTHER_LINK		= -lm $(LIBCURSES)

#============================================================================
#
#	wispmf.o	- Micro Focus specific WISP routines.
#	wisp4400.o	- Obsolete WISP API interfaces for backwards compatibility
#
WISPSUBS=wispmf.o 
WISPSUBS4400=wispmf.o wisp4400.o

#============================================================================
#
# Default RTS names
#
RTS=wrunmf
RTSE=wrunmfe
RTS4400=wrunmf_x4400

#============================================================================
#
# Standard CC flags
#
#CC=cc
#CFLAGS=

#============================================================================
#
# WISPFILES is a list of any files which could be found in the WISP
# directory.  It is used ONLY for detecting and displaying an error
# message if the file is not found.
#
WISPFILES=$(WISPLIBSDIR)/$(LIBWISP) \
	$(WISPLIBSDIR)/$(LIBVIDEO) \
	$(WISPLIBSDIR)/$(LIBEDE) \
	$(WISPDIR)/mf/wispmf.c

#============================================================================
# 
# Need to list all the COBOL entry points.
#
VSSUB_ENTRY = \
	-I BELL \
	-I BITPACK \
	-I BITUNPK \
	-I CANCEL \
	-I CEXIT \
	-I COBLINK \
	-I DATE \
	-I DATE2 \
	-I DATE4 \
	-I DATE6 \
	-I DAY \
	-I EXTRACT \
	-I EXTRACT2 \
	-I FIND \
	-I GETPARM \
	-I HEXPACK \
	-I HEXUNPK \
	-I LINK2 \
	-I LOGOFF \
	-I MESSAGE \
	-I PAUSE \
	-I PRINT \
	-I PUTPARM \
	-I READFDR \
	-I READFDR4 \
	-I READVTOC \
	-I RENAME \
	-I SCRATCH \
	-I SCREEN \
	-I SEARCH \
	-I SET \
	-I SET2 \
	-I SETFILE \
	-I SORT \
	-I SORTCALL \
	-I SORTLINK \
	-I STRING \
	-I SUBMIT \
	-I UPDATFDR \
	-I WSXIO

WISPSUB_ENTRY = \
	-I ACUGARGS \
	-I ACUNARGS \
	-I ACUPARGS \
	-I BIT_OFF \
	-I BIT_ON \
	-I BIT_TEST \
	-I FILECOPY \
	-I FXZONE \
	-I getparmbuild \
	-I INITWISP2 \
	-I INITWISP3 \
	-I ISRUNUSING \
	-I LBIT_OFF \
	-I LBIT_ON \
	-I LINKGARG \
	-I LINKPARG \
	-I LINKPROC \
	-I MWCONV \
	-I NOHELP \
	-I ONHELP \
	-I RETCODE \
	-I SET8BIT \
	-I SETFILE2 \
	-I SETRETCODE \
	-I SETSUBMIT \
	-I SLEEPONE \
	-I SORTINFO \
	-I UPPER \
	-I USEHARDLINK \
	-I USESOFTLINK \
	-I vwang \
	-I W4WAPI \
	-I W99TOX \
	-I WACCEPT \
	-I WANSI2WANG \
	-I WCHAIN \
	-I WDISPLAY \
	-I WFCLOSE \
	-I WFILECHK2 \
	-I WFILECHK3 \
	-I WFNAME \
	-I WFNAME2 \
	-I WFOPEN3 \
	-I WFOPEN4 \
	-I WFWAIT \
	-I WGETCURPOS \
	-I WGETFILEXT \
	-I WISPEXIT \
	-I WISPHELP \
	-I WISPPLAT \
	-I WISPSHUT \
	-I WISPSORT \
	-I WISPSYNC \
	-I WS_CLOSE \
	-I WS_READ \
	-I WS_READ_ALT \
	-I WS_REWRITE \
	-I WSCREEN \
	-I WSETFACBLINK \
	-I WSETFILEXT \
	-I WSETSTAT \
	-I WSTOP \
	-I WTITLE \
	-I WVASET \
	-I WVASETV \
	-I WWANG2ANSI 

OLD4400_ENTRY = \
	-I bit_off \
	-I bit_on \
	-I bit_test \
	-I getwfilext \
	-I initwisp2 \
	-I lbit_off \
	-I lbit_on \
	-I LINKMF \
	-I mwconv \
	-I setprogid \
	-I setretcode \
	-I SETTRIGPROG \
	-I setwfilext \
	-I setwispfilext \
	-I w2rowcol \
	-I wexith \
	-I wfclose \
	-I wfilechk \
	-I wfilechk2 \
	-I wfname \
	-I wfopen \
	-I wfopen2 \
	-I wfopen3 \
	-I wfwait \
	-I wmemcpy \
	-I wpause \
	-I wrename \
	-I wsetstat \
	-I wscreen \
	-I wvaset \
	-I xx2byte 

ACP_ENTRY = \
	-I BREAKACP \
	-I CHECKACP \
	-I CLOSEACP \
	-I GETACP \
	-I OPENACP \
	-I READACP \
	-I SETACP \
	-I WRITEACP

NETCAP_ENTRY = \
	-I WSCLOSE \
	-I WSFNM \
	-I WSFNS

WISP_ENTRY= $(VSSUB_ENTRY) $(WISPSUB_ENTRY) $(ACP_ENTRY) $(NETCAP_ENTRY)
WISP4400_ENTRY= $(VSSUB_ENTRY) $(WISPSUB_ENTRY) $(ACP_ENTRY) $(NETCAP_ENTRY) $(OLD4400_ENTRY)

EDE_ENTRY = \
	-I A_WSLINK \
	-I DYLINK \
	-I DYUNLINK \
	-I EDCLRSCR \
	-I EDDRKSCR \
	-I EDEXIT \
	-I EDLOAD \
	-I EDLTESCR \
	-I EDNARSCR \
	-I EDWIDSCR \
	-I GENVEC \
	-I MENUCONT \
	-I MENUEXIT \
	-I MENUGO \
	-I MENUINFO \
	-I MENUITEM \
	-I MENUKILL \
	-I MENULOAD \
	-I MENUMODE \
	-I MENUREST \
	-I MENUSAVE \
	-I NOPFKEYS \
	-I PFKEYSON \
	-I POPAREA \
	-I PUSHAREA \
	-I PUSHSCRN \
	-I RETRACE \
	-I TRACEEND \
	-I TRACEGO \
	-I VIDLINE \
	-I VIDMODE \
	-I VIDMOVE \
	-I VIDTEXT \
	-I gcalc \
	-I gcalend \
	-I gclock \
	-I gen_ncpfkey \
	-I gnotepad \
	-I gpuzzle \
	-I nc_pop_menu \
	-I ws_bar_menu

WISPEDE_ENTRY = $(WISP_ENTRY) $(EDE_ENTRY)

#============================================================================
#
#	TARGETS:
#

default: rts

clean:	
	rm -f $(RTS) $(RTSE) $(RTS4400) core *.o *~

header: $(WISPDIR) $(COBDIR) $(COBTEST)
	@echo ">>>> BUILDING MICRO FOCUS RUNTIME WITH WISP"
	@echo ">>>>"
	@echo ">>>> WISPDIR = " $(WISPDIR)
	@echo ">>>> COBDIR  = " $(COBDIR)
	@echo ">>>> PWD     = " `pwd`
	@echo ">>>>"

header_ede: $(WISPDIR) $(COBDIR) $(COBTEST) $(EDEDIR)
	@echo ">>>> BUILDING MICRO FOCUS RUNTIME WITH WISP+EDE"
	@echo ">>>>"
	@echo ">>>> WISPDIR = " $(WISPDIR)
	@echo ">>>> EDEDIR  = " $(EDEDIR)
	@echo ">>>> COBDIR  = " $(COBDIR)
	@echo ">>>> PWD     = " `pwd`
	@echo ">>>>"

$(WISPDIR):
	@echo ">>>> ERROR: The WISP directory was not found!"
	@echo ">>>>"
	@echo ">>>> Using WISPDIR = " $(WISPDIR)
	@echo ">>>>"
	@echo ">>>> See the instructions at the beginning of this makefile"
	@echo ">>>> for information on setting WISPDIR."
	@echo ">>>>"
	@exit 1

$(COBDIR):
	@echo ">>>> ERROR: The Micro Focus directory was not found!"
	@echo ">>>>"
	@echo ">>>> Using COBDIR = " $(COBDIR)
	@echo ">>>>"
	@echo ">>>> See the instructions at the beginning of this makefile"
	@echo ">>>> for information on setting COBDIR."
	@echo ">>>>"
	@exit 1

$(COBTEST):
	@echo ">>>> ERROR: A Micro Focus configuration error was detected!"
	@echo ">>>>"
	@echo ">>>> The Micro Focus file $@ was not found."
	@echo ">>>>"
	@echo ">>>> Using COBDIR = " $(COBDIR)
	@echo ">>>>"
	@exit 1

$(WISPFILES):
	@echo ">>>> ERROR: A WISP configuration error was detected!"
	@echo ">>>>"
	@echo ">>>> The WISP file $@ was not found."
	@echo ">>>>"
	@echo ">>>> Using WISPDIR = $(WISPDIR)"
	@echo ">>>>"
	@exit 1

rts:	header $(RTS)
	@echo
	@echo ">>>> The WISP runtime RTS=" $(RTS) is up to date.
	@echo

rtsx4400:	header $(RTS4400)
	@echo
	@echo ">>>> The WISP runtime RTS=" $(RTS4400) is up to date.
	@echo

ede:	header_ede $(RTSE)
	@echo
	@echo ">>>> The WISP + EDE runtime RTSE=" $(RTSE) is up to date.
	@echo

$(RTS): $(WISPSUBS) $(WISP_LIBS_PATHS)
	$(COBOL) -xe "" -g -o $@ $(WISP_ENTRY) $(WISPSUBS) $(WISP_LIBS_PATHS) $(OTHER_LINK)

$(RTSE): $(WISPSUBS) $(WISPEDE_LIBS_PATHS)
	$(COBOL) -xe "" -g -o $@ $(WISPEDE_ENTRY) $(WISPSUBS) $(WISPEDE_LIBS_PATHS) $(OTHER_LINK)


$(RTS4400): $(WISPSUBS4400) $(WISP_LIBS_PATHS)
	$(COBOL) -xe "" -g -o $@ $(WISP4400_ENTRY) $(WISPSUBS4400) $(WISP_LIBS_PATHS) $(OTHER_LINK)

subsonly:	$(WISPSUBS) wisp4400.o

wispmf.o: wispmf.c

wisp4400.o: wisp4400.c

wispmf.c: $(WISPDIR)/mf/wispmf.c
	cmp -s $(WISPDIR)/mf/$@ $@ || cp $(WISPDIR)/mf/$@ $@

wisp4400.c: $(WISPDIR)/mf/wisp4400.c
	cmp -s $(WISPDIR)/mf/$@ $@ || cp $(WISPDIR)/mf/$@ $@

