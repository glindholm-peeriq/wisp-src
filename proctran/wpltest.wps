PROCEDURE WPLTEST - TEST PROCTRAN FUNCTIONALITY

*    This program was generated by taking code from existing clients
*    procedures.  The characters at the right margin are from the
*    transfer to the new platform.  Leave in for testing purposes.

***** TEST:  the LINKAGE Section generation. *****
USING &VOL1 STRING (6), &VOL2 STRING (6), &TAPE1 STRING (3),
         &FUNC STRING (1), &TAPE_OR_DSKT STRING (1)

OPTIONS PROCMSG = NO

***** TEST:  the DECLARE keyword. *****
DECLARE &JOBRETURN             INTEGER       INITIAL 0                    002400
DECLARE &SAVED DATE STRING(6)
DECLARE &FORMATTED DATE STRING(8) INITIAL "  /  /  "

DECLARE &LIB1 STRING (8) INITIAL "   DATA"                             L
DECLARE &LIB2 STRING (8)                                               L
DECLARE &LIB3    GLOBAL   STRING(8)            [DETERMINED BY JXXSET]  R

DECLARE &VOL3  STRING (6) INITIAL "VOLB"
DECLARE  &vol4                     string (6)  initial "SYSTEM"        F

DECLARE &FLD1       GLOBAL   STRING(1)         INITIAL " "             R

DECLARE &FLD2     GLOBAL    STRING(41)    INITIAL
           "SELECT: A SECURITY PROFILE PROCEDURE"
DECLARE &FLD3             STRING(79)
DECLARE  &fld4                     string (14) initial "FTADWAF SYSTE1"D
DECLARE  &fld5                     string (14) initial "FTADWAF SYSTE1"D
DECLARE  &fld6                     string (14) initial "FTADWAF VOL1  "C
DECLARE  &fld_7,
         &fld_8                    string (79)
DECLARE &FLD-9           STRING(20)
declare &fld10 as string(15)

DECLARE  &uid1                     string (3)
DECLARE  &UID2                     STRING(3)

DECLARE &RTRN1 INTEGER
DECLARE &RTRN2 AS INTEGER INITIAL 0
DECLARE &PF1, &RTRN3 AS INTEGER INITIAL 0
DECLARE &PF2                 INTEGER
DECLARE  &pf_3                   integer
DECLARE &INT1 INTEGER INITIAL 15
declare &int2       as integer
DECLARE &INT3      INTEGER   INITIAL 0
Declare  &SYSDATE   string(6)  initial ' '
Declare  &SYSTIME   string(6)  initial ' '
Declare  &SYSMONTH  string(36)
         initial 'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'
Declare  &MENUDATE  string(9)  initial ' '
Declare  &MENUTIME  string(10) initial ' '
Declare  &MONTH     string(3)  initial ' '
Declare  &AMPM      string(4)  initial ' '
Declare  &TSS       integer    initial 0
DECLARE &JOBNAME GLOBAL STRING(8)  INITIAL "JHR550  "
DECLARE &TASKTYPE GLOBAL STRING(1)
DECLARE &FILESW GLOBAL STRING(15) INITIAL
     "INXX NSXX TBEX "
DECLARE &JOBRETRUN   INTEGER  INITIAL 0
DECLARE &INCOUNT  INTEGER INITIAL 0
DECLARE &LONGSTRING STRING(6)
DECLARE &PFKEY  INTEGER INITIAL 0

TEST3:
***** TEST:  the ASSIGN keyword. *****
ASSIGN &LONGSTRING =
       "111111111122222222223333333333444444444455555555556666666666"
ASSIGN &LONGSTRING = "111111111122222222223333333333",
                     "444444444455555555556666666666"
Assign  &SYSDATE = &date
Assign  &SYSTIME = &time
ASSIGN   &FLD_7 (1,8)  = "FTALOGON"
ASSIGN   &FLD_7 (1,8)  = &fld3(3,8)
Assign  &TSS     = &SYSDATE(1,2)
Assign  &TSS     = (&TSS-1)*3+1
Assign  &TSS     = (&SYSDATE(1,2)-1)*3+1
Assign  &MONTH   = &SYSMONTH(&TSS,3)
Assign  &MONTH   = &SYSMONTH((&SYSDATE(1,2)-1)*3+1,3)

ASSIGN &FLD1 = ""
ASSIGN &FLD2 = "SS"                  [TO SET &APPLID FOR MSSET]                  R
ASSIGN &FLD3="SIMSSRN "              [ Replace SIMSSRN with your SCREEN Library] R
ASSIGN &FLD4= "XXXXXX"               [Replace XXXXXX with your Screen Volume]    R
ASSIGN &FLD5 = "00XXXXXX"
ASSIGN   &FLD6               = '#' !! &uid1 !! 'PRT'
ASSIGN   &FLD6               = '$ ' !! &amount !! 'SMB'
ASSIGN   &FLD_7 (12,33)= "FASTRAK/VS Primary Logon Menu    "
  assign &fld_8 = "SWSF01: You have selected an invalid pfkey, please c         
heck the list and try again."

ASSIGN &INT1 = &INT1 + (&INT/2)
ASSIGN &INT2 = &INT2 / 10

ASSIGN &UID1 = &uid2
ASSIGN &fld_7(23,8) = &FLD3
ASSIGN &LIB1(1,3) = &UID1                                                       L
ASSIGN &RTRN1 = &RTRN2 + 100
ASSIGN &INT1=&RTRN2 + 100
LBL1:  ASSIGN &FLD_8 = "Invalid PF key pressed - try again"
LBL2:  ASSIGN &FLD_7 = "Option " !! &PF1 !! " processing completed"
LBL3:      ASSIGN &RTRN3 = 98
           GOTO TEST4
LBL4:      ASSIGN &RTRN1 = 99
LBL5:      ASSIGN &FLD5 = "SIGLALOC"
           ASSIGN &RTRN1 = &RTRN2 + 050
           IF &RTRN1 = 99 GOTO TEST4
           ASSIGN &RTRN2 = LBL4
           GOTO TEST4

* Integer expression to integer variable
assign &int1 = 1 + 2                    [assigns 3]
assign &int2 = lbl5                     [assigns value of lbl5]
* String expression to integer variable
assign &int1 = 2 !! "3"                 [assigns 23]
assign &int2 = "0017"                   [ assigns 17]
assign &int1 = "  -123"                 [assigns -123]
* assign &int2 = " - 123"               [error: space after sign]
* assign &int1 = "00000002147483647"    [error: str > 16 chars]
* assign &int2 = "123h5"                [error: no conversion]
* assign &int1 = "123.5"                [error: . illegal]

TEST4:
***** TEST:  the CALL keyword. *****
CALL X
CALL Y
GOTO TEST5

X:  MESSAGE 'SUBROUTINE X'
    END
Y:  MESSAGE 'SUBROUTINE:  Y'
    END

TEST5:
***** TEST:  the EXTRACT keyword. *****
EXTRACT &INCOUNT = RECORDS USED BY HRTABLE IN &MASTLIB
                                           ON &MASTVOL
EXTRACT &LIB1 = PROGLIB     [TO USE FOR PROGLIB and SCRNLIB]           R
EXTRACT  &lib2 = spoolib,
         &uid1   = userid
EXTRACT &UID1=USERID                                                   R
EXTRACT &INT1 = RECORDS USED BY ABSTRACT IN &LIB2 ON &VOL2
EXTRACT &INT1 = RECORDS USED BY
                  JGL085C IN &LIB1 ON &VOL2
extract &INT2 = records used by
                  &UID1(1,*) !! "LOGON" in LOGON on &vol1
EXTRACT &INT2 = BLOCKS ALLOCATED FOR ABSTRACT IN &LIB2 ON &VOL4
EXTRACT &INT1 = SET TYPE OF &vol2

TEST6:
***** TEST:  the GOTO and IF keyword. *****
*If      &SYSDATE(3,2) < '10'
*        Assign   &SYSDATE(3,2) = ' ' !! &SYSDATE(4,1)

*If      &SYSTIME(1,4) < '1200' assign &AMPM  = 'AM'
*If      &SYSTIME(1,2) < '13'   goto SETMENU
*        Assign &SYSTIME (1,2) = &SYSTIME(1,2) - 12

SETMENU:
*Assign  &MENUDATE = &SYSDATE(3,2) !! ' ' !! &MONTH !! ' ' !!
*                    &SYSDATE(5,2)
*Assign  &MENUTIME = &SYSTIME(1,2) !! ':' !! &SYSTIME(3,2) !!
*                    ':' !! &SYSTIME(5,2)
*          Assign   &LINE02 = &MENUTIME !! '                  System Mai   007100
*ntenance Menu                   ' !! &MENUDATE                            007300

IF &INT2 < 1 ASSIGN &INT2 = 100
IF &RTRN1<>0 MOUNT TAPE &VOL1 ON &TAPE1 WITH IBM LABELS
IF &TAPE_OR_DSKT = "D" GOTO TEST7
GOTO "TEST" !! &INT1
if exists file file1 in tlib on tvol then goto test7
IF EXISTS FILE "YTD" !! &FLD4 IN TLIB ON TVOL THEN GOTO TEST7
       IF &PF1 = 16
           GOTO TEST7
if exists file file1 in tlib on tvol then goto test7
IF TEST6 <> 0 THEN ASSIGN &RTRN2=1000
IF &FLD5 = "SIMWPB" THEN SET PRTCLASS = C                              L
IF NOT EXISTS FILE VS0700P3 IN &LIB1 ON DWP006 THEN                    L
    SCRATCH VS0700P3 IN &LIB1 ON DWP006                                L
*IF EXISTS LIBRARY  WOLIB ON &VOL2                                      R
*   ASSIGN &FLD1 = "N"          [DO NOT USE WANG OFFICE ON ANY MENUS]   R
IF &PF1=16  GOTO TEST7
IF &PF1=1  LOGOFF
IF &FLD1 NE "" THEN GOTO TEST8
IF &FLD2 NE " " THEN GOTO TEST9
IF &FLD2 <> " test" THEN GOTO TEST10
IF &FLD2  = " test2" THEN ASSIGN &FLD5 = "Y"
IF &FLD2  = "" THEN ASSIGN &FLD6 = "Nope"
IF &FLD3 = &FLD4 THEN ASSIGN &FLD_7 (1,8) = &fld3(3,8)

IF NOT EXISTS FILE VS0700D9 IN &LIB ON DWP006 THEN                     L
    RUN CREATE                                                         L
    ENTER OUTPUT                                                       L
         FILE = VS0700D9, LIBRARY = &LIB, VOLUME = DWP006, TYPE = I,   L
         RECSIZE = 240, MULTIPLE = NO, COMPRESS = YES, RECORDS = 100,  L
         CLASS = " ", KEYPOS = 2, KEYLEN = 3, MODE = OUTPUT,           L
         ERRLIST = NO                                                  L
    ENTER INPUT 16                                                     L
    ENTER EOJ 16                                                       L

TEST7:
***** TEST:  the MESSAGE keyword. *****
MESSAGE ERASE = YES  ROW 12 CENTER BRIGHT
               "Procedure HKGINTCM is in progress"
MESSAGE ROW 1 CENTER
       " CALM ... Comprehensive Automated Laboratory Management";
         LINE "                                                        
                       ";;;
MESSAGE ERASE=YES, ALARM=YES ROW 12 CENTER BRIGHT
               "Procedure UWRECOVR is in progress"
MESSAGE ERASE=NO,  ALARM=NO  ROW 14 CENTER BRIGHT
               "System object program files recovery"
MESSAGE ERASE = YES  ROW 12 CENTER BRIGHT
               "Procedure: TSSPRC1 is in progress"
MESSAGE ERASE = NO   ROW 14 CENTER BRIGHT
      "Setting up all the initial files for Schedules Sub- System"

TEST8:
***** TEST:  the PRINT keyword. *****
PRINT VS0700P3 IN &LIB1 ON DWP006, STATUS = SPOOL                      L

TEST9:
***** TEST:  the PROMPT keyword. *****
PROMPT ROW 3 "11111111112222222222333333333344444444445555555555666"
   IF &LONGSTRING EQ " "
       THEN PROMPT ROW 3
           CENTER  "aaaaaaaaaaaaaaaaaaaaaaaaa",
                   "bbbbbbbbbbbbbbbbbbbbbbbbb",
                   "ccccccccccccccccccccccccc",
            PROMPT ROW 4
           CENTER " LINE 2 OF SECOND PROMPT"

   IF &LONGSTRING EQ " " THEN
       RUN HR550 ERROR EXIT IS RUNERR2  CANCEL EXIT IS CANCEL2
       ENTER HRTABLE FILE=HRTABLE, LIBRARY-&MASTLIB, VOLUME=&MASTVOL
       ENTER PRINTFIL FILE=#H550, RECORDS=&INCOUNT

PROMPT  PFKEY = &PF-KEY
               CENTER BRIGHT
               "Setting up CLAIMS FILES";;;;;;;;;
               CENTER
               "TIMS SYSTEMS SOLUTIONS" !! &fld4 "COMPANY LTD.";;;;;;;;;
               CENTER BRIGHT
               "PF1 - CONTINUE                     PF16 - EXIT"

       IF &PF2 = 16
           GOTO TEST10
       IF &PF2 = 1
           GOTO LBL6
       GOTO TEST9

LBL6:  OPTIONS PROCMSG = NO
       PROMPT PFKEY=&PF1  ROW 1
       CENTER BRIGHT "Trademark Manager System";
       CENTER BRIGHT "Main Menu";;;;
       CENTER "PF1   Trademark Data Entry and Inquiry Menu            "
       ;;
       CENTER "PF2   Trademark Correspondence and Reports Menu        "
       ;;
       CENTER "PF3   Trademark Data Table ",&FLD2," Maintenance and Updates Menu"
       ;;;
       CENTER "PF16  Exit Trademark Manager System                    "
       ;;;;;;;;;;;
       BRIGHT &fld_8

IF &PF1=16  GOTO TEST10
IF &PF1 = 1   GOTO TEST11

PROMPT CENTER "DID LABELS PRINT PROPERLY? OK TO SCRATCH FILE?";
       CENTER "PLEASE ENTER 'Y' OR 'N' AND PRESS RETURN ", UPPER &fld1;
       CENTER "Test this one then",&INT1,"";
       CENTER "Test this second then", UPLOW &FLD5,"Is it ok?";;
       CENTER "Test this third then",NUMERIC &INT1,""

PROMPT  PFKEY = &PF-KEY1
               CENTER BRIGHT
               "Testing: PROMPT keyword";;;;;;;;;
               CENTER
               "NEOM SOLUTIONS", &fld5, ""
               CENTER
               "NEOM SYSTEMS SOLUTIONS", NUMERIC &INT1, ""

SCRN1:   PROMPT PFKEY=&PFKEY
         &DISPDAT,"             ****-  ADDITIONAL FUNCTIONS  -****   ",
         "            ",&DISPTIM;
         "                       Menu for: ", BRIGHT &USERNAME;;;
         "    ",   LINE  "       Special Modules        ",
         "    ",        "   (5) LTS-PCQuery                 ";;;;;
         CENTER "(16) Exit";;
         CENTER BRIGHT &SCRNMSG;

PROMPT "MY NAME IS", "TOM DISK AND HARRY"

TEST10:
***** TEST:  the RENAME keyword. *****
RENAME FILE1 IN TESTLIB TO FILE2
RENAME LIBRARY TESTLIB TO TESTS
RENAME  LIBRARY &TSTLIB on &PROGVOL  to  LTS30000
RENAME PROCA IN PROCLIB ON SYS356 TO PROCA IN TESTS
RENAME &FLD2 IN &LIB2 ON &VOL2 TO &FLD3 IN &LIB1

***** TEST:  the RETURN keyword. *****
TEST11: RETURN CODE=&RTRN1

TEST12:
***** TEST:  the RUN keyword. *****
RETURN:  RUN SIHRDLOC ERROR EXIT IS RUNERR3 CANCEL EXIT IS CANCEL3
LABEL:   ENTER JOBCTL  FILE=SIJOBCTL, LIBRARY=&MASTLIB, VOLUME=&MASTVOL
         ENTER ACCEPT IN-PROC=&JOBNAME, IN-TT=&TASKTYPE, IN=SWS=&FILESW
         ENTER REPORT

         RETURN

RUN PRG1 USING "Y"

RUN PRG1 USING 300

LBL7: RUN RECOVERI USING &FLD_7, &RTRN1
         RETURN CODE = &RTRN2

LBL8:  RUN     C1INIT   IN   TSSINIT  ON TSS
       RUN     SOTRXINT IN   TSSINIT  ON TSS
       IF LBL8 <> 0 THEN ASSIGN &RTRN1=1000
       ASSIGN &INT1 = LBL8

RUN MAINMENU IN LABOBJ ON &VOL1 CANCEL EXIT IS TEST13
LBL9:                                                                  R
      RUN SSMAIN USING &FLD2, &UID1, &FLD3, &FLD4,                     R
                       &FLD5                                           R
        ENTER ACCEPT   SRNLIB = &LIB2,    SRNVOL = &VOL2               R

LBL10:   RUN SIGLALOC  ERROR EXIT IS LBL12     CANCEL EXIT IS LBL13
         ENTER JOBCTL  FILE=SIJOBCTL, LIBRARY=&LIB1, VOLUME=&VOL3
         ENTER ACCEPT IN-PROC=&JOBNAME, IN-TT=&TASKTYPE, IN-SWS=&FILESW
         ENTER REPORT
         IF LBL10 EQ 999 THEN GOTO LBL11
         ASSIGN &ALLOCSW = "Y"

LBL11:    RUN SORT    ERROR EXIT IS TEST10   CANCEL EXIT IS TEST12
              ENTER OPTIONS  FUNCTION=SORT,  ADDROUT=NO
              ENTER INPUT    FILE=&TRANFILE,   SELECT=YES
           IF LBL11 EQ 4 THEN GOTO TEST13
           IF LBL11 LT 5 GOTO TEST14
           ASSIGN &RTRN1 = LBL11
           GOTO TEST13

LBL12: run ftammp  in ftadwap  on &vol4                                F
       IF LBL12 EQ 4 THEN RETURN
       assign &fld1 = " "                                              F
       goto LBL14                                                      F

LBL13: run wp      in @system@ on &vol1                                F
       assign &err_msg = " "                                           F
       goto TEST13                                                     F

LBL14: RUN TMABADD
     ENTER ACCEPT   PROGLIB = &LIB2, PROGVOL = &VOL3
LBL15: ENTER WORKFILE FILE=##TMWK,   RECORDS=&INT1
IF LBL14 <> 500 RETURN
IF &int2 <> 500 RETURN

RUN SORT
      ENTER INPUT
            FILE=(WFL.FILE), LIBRARY=(WFL.LIBRARY),
            VOLUME=(WFL.VOLUME),
            SHARED=NO, SELECT=NO, MOREFILE=NO, DEVICE=DISK
LBL16: ENTER OUTPUT
            FILE=##TMWK, COMPRESS=YES, DEVICE=DISK

LBL17: RUN     K10INIT  IN   TSSINIT  ON TSS
       RUN     QFINIT   IN   TSSINIT  ON TSS
       IF LBL17 <> 0 THEN ASSIGN &RTRN1=1000
LBL18: RETURN CODE=&RTRN2

LBL19: RUN   BACKUP IN &LIB3 ON &VOL4
               ENTER SPEED
               ENTER INPUT
                      VOLUME=&VOL1,
                      MOREFILES=YES
               ENTER EOJ 16
         IF LBL19 <> 0 THEN RETURN CODE=999
LBL20: RETURN

LBL21:                                                                 R
 RUN MSSET IN &LIB1 ON &VOL2 USING &UID2, &FLD3, &FLD5,                R
  &LIB2, &VOL3, &LIB3, &VOL4, &VOL1, &VOL2,                            R
  &VOL3, &VOL4, &VOL1, &VOL2, &VOL3, &VOL4, &VOL1,                     R
  &VOL1, &LIB1, &VOL4                                                  R
  ENTER MSCNTRL FILE=MSCNTRL, LIBRARY=&LIB2, VOLUME=&VOL1              R

LBL22: RUN MSS020 USING &UID2, &FLD3, &FLD6                            R
                    ERROR EXIT IS TEST13   CANCEL EXIT IS TEST14
      ENTER ACCEPT   SRNLIB = &LIB3,   SRNVOL = &VOL2                  R
RETURN:  RETURN CODE = LBL22

RUN VS0750PP IN OBJ0700 ON DWP006                                      L
ENTER PRINT
FILE=VS0700P3, LIBRARY=&LIB1, VOLUME=DWP006                            L
ENTER LABELFIL
FILE=VS0700D9, LIBRARY=&LIB2, VOLUME=DWP006                            L

LBL23:   run FTAMPM   in &lib3 on &vol4
         using &fld1,
               &fld2,
               &fld3,
               &fld4,
               &fld5,
               &fld6,
               &fld_7,
               &fld_8,
               &fld-9,
               &fld10,
               &fld1,
               &fld2,
               &fld3,
               &fld4,
               &fld5,
               &fld6,                                                  D
               &fld-7                                                  D

RUN TAPEINIT
ENTER INPUT VOLUME=&VOL2
ENTER TAPE LABEL=NL
ENTER EOJ
RETURN

***** TEST:  the SCRATCH keyword. *****
TEST13: SCRATCH K1INIT IN TSSINIT ON TSS
        SCRATCH QFINIT  IN TSSINIT ON TSS
        IF TEST13 <> 0 THEN ASSIGN &RTRN1=2000
LBL24:       SCRATCH JGL085C
           IF LBL24 = 99 THEN GOTO TEST14
           SCRATCH JGL085D
IF &QUES = "Y" THEN
    SCRATCH VS0700D9 IN &LIB1 ON DWP006

TEST14:
***** TEST:  the SET keyword. *****
SET      inlib           = ftadwaf
SET      runlib=&lib1,
         runvol=&vol1
SET INLIB=LABFILE,INVOL=&VOL2,OUTLIB=LABFILE,OUTVOL=&VOL3,
    RUNLIB=LABOGJ,RUNVOL=&VOL4,SPOOLVOL=VOLB,WORKVOL=VOLB
SET1:      SET
           INLIB =&LIB2,    INVOL =&VOL1                               R
SET LINES=0

TEST15:
***** TEST:  the SUBMIT keyword. *****
LBL25:
* SUBMIT JOB100 IN GSLIB OF VOL600 AS DEMO USING "test", &PARM2,
*  GLOBALS = YES, ENVIRONMENT = YES, CPILIMIT = 0.01:30, ACTION = WARN
       ASSIGN &INT2 = LBL25
       RETURN CODE=LBL25

TEST16:
***** TEST:  the BUILT IN FUNCTIONS keyword. *****
ASSIGN &SAVED DATE = &DATE
ASSIGN &FORMATTED DATE(1,2) = &SAVED DATE(1,2)
ASSIGN &FORMATTED DATE(4,2) = &SAVED DATE(3,2)
ASSIGN &FORMATTED DATE(7,2) = &SAVED DATE(5,2)

TEST17:
***** TEST: VS System Utilities. *****
COPY TEMP1 IN &LIB1 ON &VOL1 TO TEMP1

DOCOPY:  MESSAGE CENTER BLINK "Generating ",
                          DIM " New Database Library ",
                              &NEWLIB,  " on ", &NEWVOL
         RUN COPY
            ENTER   INPUT
               COPY=LIBRARY, LIBRARY=LTS30000, VOLUME=&PROGVOL
            ENTER OUTPUT
               LIBRARY=&NEWLIB,  VOLUME=&NEWVOL
            ENTER   EOJ  16

RUN COPY
   ENTER INPUT
      FILE="MYFILE",
      LIBRARY="MYLIB",
      VOLUME=" "

*SORT &TEMP1
